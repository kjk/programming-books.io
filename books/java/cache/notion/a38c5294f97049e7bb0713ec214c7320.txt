2596 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "a38c5294-f970-49e7-bb07-13ec214c7320"
      },
      "version": -1
    }
  ]
}
Response:+2344
{
  "recordMap": {
    "block": {
      "a38c5294-f970-49e7-bb07-13ec214c7320": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "444e420a-3b0b-4f0e-97f1-c438e995db14",
            "5ed8f424-3906-4795-87b9-536fe8762b4d",
            "bd881bf7-8ee0-4798-85e5-4c7425f55d0d",
            "7e5e83f0-3f1c-486f-b6c1-40823d36a8b9",
            "0de1db4e-2ce1-416a-9a8e-18319a9b4266",
            "21ec0ab2-2f28-46b2-abcc-1320866f5869",
            "ab718317-622b-4c4e-a4a2-a8565820eb5a",
            "a2c7e691-f86f-47c6-a203-f80f683ed238",
            "58db643f-049a-42eb-a68c-3e6e008e2bcb",
            "3d0249c1-8301-4806-9bb4-96908c97995b",
            "24aa39e1-eebd-42ed-b09f-204105fa7f62",
            "e632f05e-c21e-4beb-9ab6-c79ba262f60d",
            "0180a024-85ca-4b91-96eb-d0e150c9a5ed",
            "49c543c8-da2f-465e-a38c-b92959d92cb8",
            "51c05cac-48f0-4706-9e04-f7cdd3c30491",
            "904e8614-1669-40c6-a87a-3951cefc05e6",
            "38d1cc8c-94ed-4988-af56-c2e618880211",
            "90ad6578-6b1f-4361-b617-8593278245f4",
            "035d0f14-2900-4d24-9ad7-a470dddc70be",
            "9d8b5762-2c6e-4ba6-b1fa-449aa6ba21cb",
            "2591d22d-6be0-4cc3-8cf0-de1b43af9305",
            "b267d41f-9cbc-4a37-81cd-3a1f7106b686"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193083,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551741588847,
          "parent_id": "6e8be33a-59ae-4ce7-a49e-06a124b207b9",
          "parent_table": "block",
          "properties": {
            "title": [["Sorting a List using ComparableT or a ComparatorT"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 5
        }
      }
    }
  }
}
46504 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "a38c5294-f970-49e7-bb07-13ec214c7320"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+46244
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0180a024-85ca-4b91-96eb-d0e150c9a5ed": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193081,
          "id": "0180a024-85ca-4b91-96eb-d0e150c9a5ed",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193081,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Comparators can also be created/used as an anonymous inner class"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "035d0f14-2900-4d24-9ad7-a470dddc70be": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "035d0f14-2900-4d24-9ad7-a470dddc70be",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Furthermore, there are interesting default methods on the Comparator interface for building comparators : the following builds a comparator comparing by "
              ],
              ["lastName", [["c"]]],
              [" and then "],
              ["firstName", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "0de1db4e-2ce1-416a-9a8e-18319a9b4266": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193080,
          "id": "0de1db4e-2ce1-416a-9a8e-18319a9b4266",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193080,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Unfortunately, as marked, the above currently won’t compile. "
              ],
              ["Collections.sort(..)", [["c"]]],
              [
                " only knows how to sort a list if the elements in that list are comparable, or a custom method of comparison is given."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "21ec0ab2-2f28-46b2-abcc-1320866f5869": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193080,
          "id": "21ec0ab2-2f28-46b2-abcc-1320866f5869",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193080,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If you were asked to sort the following list : "],
              ["1,3,5,4,2", [["c"]]],
              [", you’d have no problem saying the answer is "],
              ["1,2,3,4,5", [["c"]]],
              [
                ". This is because Integers (both in Java and mathematically) have a "
              ],
              ["natural ordering", [["i"]]],
              [
                ", a standard, default comparison base ordering. To give our Person class a natural ordering, we implement "
              ],
              ["Comparable<Person>", [["c"]]],
              [", which requires implementing the method "],
              ["compareTo(Person p):", [["c"]]]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "24aa39e1-eebd-42ed-b09f-204105fa7f62": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193081,
          "id": "24aa39e1-eebd-42ed-b09f-204105fa7f62",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193081,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "If, however, you either do not want or are unable to modify class "
              ],
              ["Person", [["c"]]],
              [", you can provide a custom "],
              ["Comparator<T>", [["c"]]],
              [" that handles the comparison of any two "],
              ["Person", [["c"]]],
              [" objects. If you were asked to sort the following list: "],
              ["circle, square, rectangle, triangle, hexagon", [["c"]]],
              [" you could not, but if you were asked to sort that list "],
              ["based on the number of corners", [["i"]]],
              [
                ", you could. Just so, providing a comparator instructs Java how to compare two normally not comparable objects."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "2591d22d-6be0-4cc3-8cf0-de1b43af9305": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "2591d22d-6be0-4cc3-8cf0-de1b43af9305",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [["Inversing the order of a comparator"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "header",
          "version": 1
        }
      },
      "38d1cc8c-94ed-4988-af56-c2e618880211": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "38d1cc8c-94ed-4988-af56-c2e618880211",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "//Lambda\nCollections.sort(people, (p1, p2) -> { //Legal\n    //Method code....\n});"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "3d0249c1-8301-4806-9bb4-96908c97995b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193081,
          "id": "3d0249c1-8301-4806-9bb4-96908c97995b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193081,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "//people is now sorted by last name, then first name:\n// --> Jill Doe, John Doe, Bob Dole, Alice McDonald, Ronald McDonald\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "444e420a-3b0b-4f0e-97f1-c438e995db14": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193079,
          "id": "444e420a-3b0b-4f0e-97f1-c438e995db14",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193079,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Say we are working on a class representing a Person by their first and last names. We have created a basic class to do this and implemented proper "
              ],
              ["equals", [["c"]]],
              [" and "],
              ["hashCode", [["c"]]],
              [" methods."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "49c543c8-da2f-465e-a38c-b92959d92cb8": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "49c543c8-da2f-465e-a38c-b92959d92cb8",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "//Assume the first version of Person (that does not implement Comparable) is used here\npublic static void main(String[] args) {\n    List<Person> people = Arrays.asList(new Person(\"John\", \"Doe\"),\n                                     new Person(\"Bob\", \"Dole\"),\n                                     new Person(\"Ronald\", \"McDonald\"),\n                                     new Person(\"Alice\", \"McDonald\"),\n                                     new Person(\"Jill\", \"Doe\"));\n    Collections.sort(people); //Illegal, Person doesn't implement Comparable.\n\n    Collections.sort(people, new PersonComparator()); //Legal\n\n    //people is now sorted by last name, then first name:\n    // --> Jill Doe, John Doe, Bob Dole, Alice McDonald, Ronald McDonald\n\n    //Anonymous Class\n    Collections.sort(people, new Comparator<Person>() { //Legal\n        public int compare(Person p1, Person p2) {\n            //Method code...\n        }\n    });\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "51c05cac-48f0-4706-9e04-f7cdd3c30491": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "51c05cac-48f0-4706-9e04-f7cdd3c30491",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [["Lambda expression based comparators"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "header",
          "version": 1
        }
      },
      "58db643f-049a-42eb-a68c-3e6e008e2bcb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193081,
          "id": "58db643f-049a-42eb-a68c-3e6e008e2bcb",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193081,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "public static void main(String[] args) {\n    List<Person> people = Arrays.asList(new Person(\"John\", \"Doe\"),\n                                     new Person(\"Bob\", \"Dole\"),\n                                     new Person(\"Ronald\", \"McDonald\"),\n                                     new Person(\"Alice\", \"McDonald\"),\n                                     new Person(\"Jill\", \"Doe\"));\n    Collections.sort(people); //Now functions correctly"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "5ed8f424-3906-4795-87b9-536fe8762b4d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193080,
          "id": "5ed8f424-3906-4795-87b9-536fe8762b4d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193080,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "public class Person {\n\n    private final String lastName; //invariant - nonnull\n    private final String firstName; //invariant - nonnull\n\n    public Person(String firstName, String lastName){\n        this.firstName = firstName != null ? firstName : \"\";\n        this.lastName = lastName != null ? lastName : \"\";\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public String toString() {\n        return lastName + \", \" + firstName;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (! (o instanceof Person)) return false;\n        Person p = (Person)o;\n        return firstName.equals(p.firstName) && lastName.equals(p.lastName);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(firstName, lastName);\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "6e8be33a-59ae-4ce7-a49e-06a124b207b9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "739de9f3-586c-45a7-be33-0151c0c59989",
            "a38c5294-f970-49e7-bb07-13ec214c7320",
            "6f3bac17-5a34-4975-ac1d-88f0c5122038",
            "dd6b0a9c-c94c-4741-b6f3-9b01e93afd1e",
            "68c77e41-ff36-45f7-8f1f-3d9506df8f56",
            "4044a2ab-d4c5-46bb-817f-218ae3f56aed"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463180000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "6e8be33a-59ae-4ce7-a49e-06a124b207b9",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463360000,
          "parent_id": "d37cda98-a070-46f6-b2cc-375731ea3bdb",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Comparable and Comparator"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 42
        }
      },
      "7e5e83f0-3f1c-486f-b6c1-40823d36a8b9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193080,
          "id": "7e5e83f0-3f1c-486f-b6c1-40823d36a8b9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193080,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "public static void main(String[] args) {\n    List<Person> people = Arrays.asList(new Person(\"John\", \"Doe\"),\n                                     new Person(\"Bob\", \"Dole\"),\n                                     new Person(\"Ronald\", \"McDonald\"),\n                                     new Person(\"Alice\", \"McDonald\"),\n                                     new Person(\"Jill\", \"Doe\"));\n    Collections.sort(people); //This currently won't work.\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "904e8614-1669-40c6-a87a-3951cefc05e6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "904e8614-1669-40c6-a87a-3951cefc05e6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "As of Java 8, comparators can also be expressed as lambda expressions"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "90ad6578-6b1f-4361-b617-8593278245f4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "90ad6578-6b1f-4361-b617-8593278245f4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [["Comparator default methods"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "header",
          "version": 5
        }
      },
      "9d8b5762-2c6e-4ba6-b1fa-449aa6ba21cb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193082,
          "id": "9d8b5762-2c6e-4ba6-b1fa-449aa6ba21cb",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193082,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Collections.sort(people, Comparator.comparing(Person::getLastName)\n                                .thenComparing(Person::getFirstName));"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "a2c7e691-f86f-47c6-a203-f80f683ed238": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193081,
          "id": "a2c7e691-f86f-47c6-a203-f80f683ed238",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193081,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [["Now, the main method given will function correctly"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "a38c5294-f970-49e7-bb07-13ec214c7320": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "444e420a-3b0b-4f0e-97f1-c438e995db14",
            "5ed8f424-3906-4795-87b9-536fe8762b4d",
            "bd881bf7-8ee0-4798-85e5-4c7425f55d0d",
            "7e5e83f0-3f1c-486f-b6c1-40823d36a8b9",
            "0de1db4e-2ce1-416a-9a8e-18319a9b4266",
            "21ec0ab2-2f28-46b2-abcc-1320866f5869",
            "ab718317-622b-4c4e-a4a2-a8565820eb5a",
            "a2c7e691-f86f-47c6-a203-f80f683ed238",
            "58db643f-049a-42eb-a68c-3e6e008e2bcb",
            "3d0249c1-8301-4806-9bb4-96908c97995b",
            "24aa39e1-eebd-42ed-b09f-204105fa7f62",
            "e632f05e-c21e-4beb-9ab6-c79ba262f60d",
            "0180a024-85ca-4b91-96eb-d0e150c9a5ed",
            "49c543c8-da2f-465e-a38c-b92959d92cb8",
            "51c05cac-48f0-4706-9e04-f7cdd3c30491",
            "904e8614-1669-40c6-a87a-3951cefc05e6",
            "38d1cc8c-94ed-4988-af56-c2e618880211",
            "90ad6578-6b1f-4361-b617-8593278245f4",
            "035d0f14-2900-4d24-9ad7-a470dddc70be",
            "9d8b5762-2c6e-4ba6-b1fa-449aa6ba21cb",
            "2591d22d-6be0-4cc3-8cf0-de1b43af9305",
            "b267d41f-9cbc-4a37-81cd-3a1f7106b686"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193083,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551741588847,
          "parent_id": "6e8be33a-59ae-4ce7-a49e-06a124b207b9",
          "parent_table": "block",
          "properties": {
            "title": [["Sorting a List using ComparableT or a ComparatorT"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 5
        }
      },
      "ab718317-622b-4c4e-a4a2-a8565820eb5a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193081,
          "id": "ab718317-622b-4c4e-a4a2-a8565820eb5a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193081,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "public class Person implements Comparable<Person> {\n\n    private final String lastName; //invariant - nonnull\n    private final String firstName; //invariant - nonnull\n\n    public Person(String firstName, String lastName) {\n        this.firstName = firstName != null ? firstName : \"\";\n        this.lastName = lastName != null ? lastName : \"\";\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public String toString() {\n        return lastName + \", \" + firstName;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (! (o instanceof Person)) return false;\n        Person p = (Person)o;\n        return firstName.equals(p.firstName) && lastName.equals(p.lastName);\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(firstName, lastName);\n    }\n\n    @Override\n    public int compareTo(Person other) {\n        // If this' lastName and other's lastName are not comparably equivalent,\n        // Compare this to other by comparing their last names.\n        // Otherwise, compare this to other by comparing their first names\n        int lastNameCompare = lastName.compareTo(other.lastName);\n        if (lastNameCompare != 0) {\n            return lastNameCompare;\n        } else {\n            return firstName.compareTo(other.firstName);\n        }\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "b267d41f-9cbc-4a37-81cd-3a1f7106b686": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193083,
          "id": "b267d41f-9cbc-4a37-81cd-3a1f7106b686",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193083,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Any comparator can also easily be reversed using the "],
              ["reversedMethod", [["c"]]],
              [" which will change ascending order to descending."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "bd881bf7-8ee0-4798-85e5-4c7425f55d0d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193080,
          "id": "bd881bf7-8ee0-4798-85e5-4c7425f55d0d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193080,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Now we would like to sort a list of "],
              ["Person", [["c"]]],
              [" objects by their name, such as in the following scenario:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "d37cda98-a070-46f6-b2cc-375731ea3bdb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "aaf522ec-ec58-4c19-b129-bf870a37c471",
            "01da4f13-0c0c-4b03-a4bf-e48c83a4fd76",
            "3e5f6441-fbb7-4864-8927-1c1c812bd8c7",
            "39a676e8-4916-4942-a1ec-5020702b7db9",
            "7416eb9a-1bd0-49c2-bd47-b63df006e231",
            "b352327f-4045-48dc-891e-ceda03965ca0",
            "eaad0c1d-9ecf-4d2a-b640-d2df4debfaf8",
            "89249b2d-411e-48a0-929e-d4742921cff2",
            "bcd7d24d-a9b8-40ba-ac61-89bb802d73b5",
            "85c1bbdb-fd02-46ef-97a5-fd455d99d394",
            "fda67066-f20c-4f73-a7e9-440104e1f868",
            "98fc7929-b076-4b4c-8088-3851bfc3fdbf",
            "d8411ba8-1e49-4c45-95a0-bf6bfc36e334",
            "9dc5af85-594a-4e98-9197-96bed38df371",
            "e58fed62-9361-43a9-9d33-915bbbe28d40",
            "dbf1646a-6f86-4971-898a-a9a47703bccc",
            "9b718882-2700-4d99-b7fa-082a618f32ef",
            "73fc2f16-29dd-4ebe-9aa4-230f87bd750a",
            "e5fa4b7a-50ed-4941-8513-fccd67c67989",
            "18b76d44-dee7-4db7-a2a2-e95e6bd9d155",
            "814dd116-37ca-4db6-82af-c82641c48f28",
            "554c1de0-d05d-42a6-83c5-3aa4b3d0fc65",
            "eaf811df-e51f-4444-9642-8359027b3f7f",
            "3bdee82f-cd88-45a7-8656-12de08206f33",
            "452a4215-c66d-493c-80d3-4980568bf1fa",
            "73baf53a-7a2f-4a55-b55d-1d231e864e0d",
            "596cd51e-237c-46bd-a4df-28e4d338582d",
            "c5f4838e-8ea8-4be5-9969-41936c9db840",
            "f602a51a-866e-489c-b102-d755ada1334d",
            "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
            "9fce71c9-8b02-432c-9389-56fc3900e172",
            "7f371e05-b7ff-48ea-9972-81e7db63652e",
            "d12c85fb-12be-4d36-9a14-84025fa56b60",
            "b9a3cb65-69d9-4784-9938-41825e12a7f1",
            "97438e24-dce9-426e-8d5c-ab77c35f4df5",
            "0e3fe4e1-0860-4111-a2a9-ca47548a8a88",
            "e4ecbdd2-4cc1-4fe5-bfa8-fd658d08f5c9",
            "d6f562ae-bc87-42cb-a1e7-ffb04e5a8c78",
            "168082aa-5571-487a-900c-cbc49e8a374b",
            "6c6c87a4-551e-4cdd-b523-66ee2c5d11cb",
            "97cc20bf-7781-415e-91b6-5a7723bd541f",
            "1299aa95-a781-4149-a1bc-85d263b01c89",
            "174a8fd0-08c4-4f2e-91b0-7a7a30744772",
            "b9903421-9beb-4a68-9bcb-bb33137f6fbd",
            "efc357da-0d0e-4f18-820d-fb1e40a75c9e",
            "a13ef5e0-d08a-4e6a-ad56-64b676156279",
            "58f803cf-d6ca-4afb-a5b4-bb11701e5167",
            "2e3af3b7-fb1a-45ea-9c61-94dcd8ba030d",
            "577a95eb-7fe8-47dd-b237-f7a2f432d985",
            "c5846508-be18-4fc1-871b-a4ccbf7a323f",
            "6f2fa7ab-2d05-4439-ac96-63b175867e14",
            "c1a139ac-088d-487a-93c4-a161e63d7a0f",
            "15c00477-2c1d-42bb-8403-38d722be5306",
            "e93143db-4ec8-407d-9e59-36ae80fe15a9",
            "f97b5af1-ebfb-4f93-b626-71360d568e49",
            "411a7a1f-cef6-409f-ae9d-97669efd41d2",
            "8a480f36-543e-421b-9c30-b81e4e4de51b",
            "69b2872f-ba89-4451-889b-c3256180e829",
            "62b65910-e945-49a5-88d6-ee112102eaaa",
            "c0b21f8d-4154-4b25-a9c9-44797f096f6b",
            "8032ba89-4510-41bd-b749-159e44baeedf",
            "51a41ec0-d6f6-46f1-a1bf-02273088fa3f",
            "ced04cf4-809b-4eb8-af63-c3041b9bfcb3",
            "fd5ee180-90d8-419e-bf30-b0b1c5331eae",
            "08a825c7-7382-4c6e-9784-d7fc3b88843e",
            "e002cb8c-12c8-449b-b5bd-f52de1b3d39a",
            "a70f079b-309c-4222-9eae-6757e006e4f9",
            "a3d49ace-4bd5-4b11-86ab-b55d80696ddd",
            "842c6e8a-9e84-47b0-b1c3-be9dfcf9a9cc",
            "326ffb78-894f-49b9-bcf3-6b69c4bcd7d0",
            "3303a72b-38b0-4750-be58-cd6fb5d6ba18",
            "0bf58cac-010f-4b78-ae8d-b08f7e1fc917",
            "0ed5c46b-8e07-44d9-8123-227510c0501a",
            "9e1981fd-3dd3-4f41-8ad4-fec88463b6b0",
            "ea8b958b-e16b-4923-b637-db1bf684b7a8",
            "ff382d4c-e48a-463a-bc32-a1c6bbf07b92",
            "ee8d32ac-100a-40e0-a368-1b19a4425348",
            "0927bf61-8573-4b84-9fe1-cb6528be7f67",
            "07db657f-7fc2-4b93-b9cf-9d8a98f83654",
            "6e8be33a-59ae-4ce7-a49e-06a124b207b9",
            "be3469ab-c5bc-45ec-b3e0-6bc9897f0a82",
            "9450e3e1-ee88-4dd5-982c-03d03bddc553",
            "37c963fc-8764-46de-bbf6-7851df1871b0",
            "a72a1c9e-c899-4602-bb27-12024eba3c19",
            "296055d0-9b28-4bfd-8a83-8fb412da632b",
            "4d46b70c-bbcb-46ae-82ed-5387aeebf3e3",
            "99f725fb-1166-4771-8bc9-95eaef31fd78",
            "49141f6b-0336-474d-8c0f-8a890a4e0e05",
            "a602bb9b-4cee-4147-b27f-bb77ff90095a",
            "451f31c6-52f4-4350-8697-59f8fa181821",
            "6287dcec-432f-4b11-b339-a8c57ab92cb4",
            "4b209f0b-eae2-4938-ba73-25d69b37d0e6",
            "bcceb6e0-56a9-4024-9f5a-d6dce4afd5b5",
            "65b3b4cb-dbb9-4dfb-9c83-9429dfa4e76a",
            "6dd2e1bb-5fba-432d-9aaf-05e0509441e8",
            "9f3a8d9f-328f-44ab-ab06-a131a5152b5e",
            "5b7be3cb-76a0-4500-bd45-bbdbbb857515",
            "0306fa92-e908-484d-9587-ec2f8839b29c",
            "f1ae226e-c44a-4f29-805f-9c96503cad02",
            "b0ef256d-5b03-43f3-9e98-95dc2f1a1ef8",
            "9fb48b00-5e40-4acd-b683-7ffce58b76df",
            "3c54d1f8-5883-49c6-ac9a-ae59a7ed8562",
            "ea7dea1f-0eef-439e-97f7-d0c1244f588e",
            "24349c65-63f6-49cb-bc3c-1bfa8dcdf502",
            "7b2c77f5-4e3b-4b65-a1f9-4959ba216215",
            "a873104f-c973-4151-8a25-4d3aeaee0aca",
            "b424a141-83be-4561-bc42-9546a105075b",
            "68d3f97c-3d71-48d3-955c-6eb7411e2d26",
            "cd39ba46-bf9a-48ed-82fa-26244685c82f",
            "c386ebaf-21ff-47ef-88ba-5a7b86bb19cc",
            "053f453d-ac10-4abf-9826-3a34e4d13a72",
            "a741ed28-53ae-4ea9-9f95-0840d44390eb",
            "28d11fe4-92df-4393-8cbb-b9dadc487955",
            "59aca1d4-aa98-4e2a-a6ab-4b16e97533ad",
            "035f8e12-e9d0-418f-b9f5-52fba2e44607",
            "ac647426-fa05-4ba9-92e4-2f1b5e397608",
            "4198a4f2-159f-494d-8e72-71dd624b90b5",
            "a9a507ad-7ffd-4cf9-9c3d-72dec5c855a7",
            "bac27a47-c983-46b6-ac55-bf131c4ab1ec",
            "4ddf910d-8ecc-4478-a0f4-9af6dd01edd1",
            "012a60f0-6603-428f-90f0-56d12cde3fa4",
            "7d132e6d-be71-4378-97d7-6e67b266d858",
            "57531e2f-e003-413e-bf53-4da6d5c290be",
            "c7dd888e-231c-4e05-8e3e-9196a9821e21",
            "9d97c673-b77f-4721-9f0d-3eaf24d2c271",
            "d97c8d19-3493-4c4f-bb5b-450d9f84e1d3",
            "d73cc3a8-7897-4311-9f5f-f3e15e294c43",
            "3eb768b9-4667-4f25-acbf-097f9c448d1c",
            "48f2c1e1-d9e6-4807-9f42-be50dce48bd5",
            "08507a75-1faa-4949-96a5-ebc8359aa340",
            "447fd392-7082-4e22-a270-9cd70f7b8c2d",
            "8a6ce80e-8175-47e1-b714-9926a6ae2f02",
            "357c838d-8733-457f-97f6-21da1c4b4d21",
            "06facd5b-8010-41ca-bd4b-7a8b528e8f24",
            "e3ef9e48-01c2-44e2-88f8-a1ab808c51a7",
            "710faefa-3483-45a0-a36a-d7a17ed77932",
            "09568d97-d737-4b31-a861-9e91cb338af5",
            "575a0e12-5d3f-43b2-a810-16c144e95e5d",
            "f991cfb6-71b2-4c12-831e-03e303061072",
            "714ba765-62ea-457d-9f3e-c7d819c242d7",
            "87ac3ba4-bd8c-44a0-86ea-f0715687a44c",
            "1f0e916b-e994-4a2f-91b1-8a6715f5100b",
            "c2df652d-eb55-4286-9fcf-b94bbb067b28",
            "ee7eec3d-59c2-47f2-a6d1-c1a275d8bc22",
            "589f380f-d514-49da-aaac-757fd79fac85",
            "faab9977-b5fb-422f-8a9c-1dcb04654969",
            "d9409fc4-cc95-48a8-9906-b1dcb34f86f3",
            "6dd46157-67bc-42db-a307-1e68e8cc3008",
            "0cc39226-de45-44eb-a2a4-1b58aa601922",
            "e86ae43e-0731-426f-9fe2-83456202921a",
            "5bf950bb-491a-4fb0-8388-9ebc5ccbbe38",
            "9c791e32-4cf1-48a4-bf05-22b43a85f7e1",
            "ab6f5a9b-c135-4abf-a6fb-d82d9535073e",
            "15926b43-91b6-44a6-8490-099a3edb1893",
            "ad42f3e9-4f5e-496a-87cf-1b0e52254116",
            "a64911f1-e960-4e9c-9e9d-2a9675afaf7f",
            "66f75f26-7b72-418f-ad75-35bde2b590ba",
            "3b3e677c-6605-4602-8982-1a8d100dad9f",
            "0d3bab31-f450-4049-a25a-91b606ec1407",
            "54220ad8-7197-4c18-9344-8ea0cba46d23",
            "ab99f25d-1260-45c1-9184-1deff3279065",
            "d3a02775-800c-4e2c-b649-ee7cf3c68105",
            "3ba14671-ceb0-4f9a-96ff-3eed05b48b4e",
            "44e51555-2e05-460d-bfa3-6b1c9af20d4c",
            "25e15d95-9887-45ad-b4d6-ab80550f92d1",
            "cd9e1130-9f12-4bd5-b0a9-1d5bbda7a3c0",
            "3a833461-064c-4403-a1b1-5fea7f8249a5",
            "716acbfb-3830-41f4-949c-5ef7e5c1d0af",
            "40582aa2-1d63-4733-86de-6d1dc19d8c14",
            "378953ae-8dd0-4c65-8b1b-e660677d4ce1",
            "bfa19745-13f6-4236-a78c-a6f7a428e66d",
            "ec463bd5-2b01-4a17-8b92-2b804ab978d4",
            "09d07627-418b-4183-bdd6-905d1c2e74c2",
            "71bf925d-a7d0-40f4-a229-0ec8cdcbd38f",
            "14bf6856-b37f-4f06-8025-ba31710eff39",
            "dbf4e4e3-2aac-4b7d-8895-bf065000b725",
            "e6438eb6-fd8d-45c7-8c94-8ce9ab2bc7de",
            "417c4ce2-c69c-4987-9784-8b1ac4455a96",
            "8fa55837-54c3-43d9-8552-29e613cda437",
            "d371d779-6e42-4c25-a4b8-9cdf9d2e4286",
            "a50bb9b3-be2e-41e5-bec9-8e1c47e2e528",
            "ce0795b3-45e7-4968-be7b-7b5eebf6255f",
            "73b46557-0e7c-496c-b2d7-0932330e4087",
            "bd3a4b6b-fab1-47c7-81e1-6a0e68ffc84f",
            "4eea65f1-af60-4838-a058-ed411be8c530",
            "9d544348-53ce-44c3-9a93-a015d0abbb2c"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550460045863,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "d37cda98-a070-46f6-b2cc-375731ea3bdb",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571297880000,
          "parent_id": "f3b52b98-b653-47b0-a53e-f353cbfbb0aa",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Java"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 332
        }
      },
      "e632f05e-c21e-4beb-9ab6-c79ba262f60d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550463193081,
          "id": "e632f05e-c21e-4beb-9ab6-c79ba262f60d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550463193081,
          "parent_id": "a38c5294-f970-49e7-bb07-13ec214c7320",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "public class PersonComparator implements Comparator<Person> {\n\n    public int compare(Person p1, Person p2) {\n        // If p1's lastName and p2's lastName are not comparably equivalent,\n        // Compare p1 to p2 by comparing their last names.\n        // Otherwise, compare p1 to p2 by comparing their first names\n        if (p1.getLastName().compareTo(p2.getLastName()) != 0) {\n            return p1.getLastName().compareTo(p2.getLastName());\n        } else {\n            return p1.getFirstName().compareTo(p2.getFirstName());\n        }\n    }\n}\n\n//Assume the first version of Person (that does not implement Comparable) is used here\npublic static void main(String[] args) {\n    List<Person> people = Arrays.asList(new Person(\"John\", \"Doe\"),\n                                     new Person(\"Bob\", \"Dole\"),\n                                     new Person(\"Ronald\", \"McDonald\"),\n                                     new Person(\"Alice\", \"McDonald\"),\n                                     new Person(\"Jill\", \"Doe\"));\n    Collections.sort(people); //Illegal, Person doesn't implement Comparable.\n    Collections.sort(people, new PersonComparator()); //Legal\n\n    //people is now sorted by last name, then first name:\n    // --> Jill Doe, John Doe, Bob Dole, Alice McDonald, Ronald McDonald\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
