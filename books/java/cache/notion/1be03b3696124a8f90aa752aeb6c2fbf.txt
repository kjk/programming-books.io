2161 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf"
      },
      "version": -1
    }
  ]
}
Response:+1909
{
  "recordMap": {
    "block": {
      "1be03b36-9612-4a8f-90aa-752aeb6c2fbf": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "39f735eb-76a0-4652-84f8-0a66de4b6f82",
            "3f67d171-c9f7-4b2d-9006-59c4e84eab8d",
            "64935e6d-fa80-45dc-a827-8245445aaea7",
            "cca82360-4972-414a-a866-9c3569bb8613",
            "a463daed-1171-4c65-985f-c4d36db8691b",
            "92f43744-fa6b-4c09-99ac-74aa36ef3244",
            "c63d11ae-b243-4485-9ccd-7aae324b38c0",
            "423ad708-c07d-4423-82d3-b91b832886e0",
            "2c7bf8fd-8de4-4307-b677-31f1fe6411f4",
            "35a8c6be-7163-4c27-9fc7-5abdab4d3f48",
            "e5074f71-395a-45c4-9dd6-e33a9048583f",
            "47ee7923-f7a6-4fa1-ab56-aa7e27b4a1bb",
            "6d7b310a-0341-4aff-b6d4-a63662f6436d",
            "e643d48a-9f05-479a-9b14-47e1e6443fd5"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713541,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551768751252,
          "parent_id": "7d132e6d-be71-4378-97d7-6e67b266d858",
          "parent_table": "block",
          "properties": {
            "title": [["Implementing policy deny rules"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 5
        }
      }
    }
  }
}
46428 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+46168
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "1be03b36-9612-4a8f-90aa-752aeb6c2fbf": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "39f735eb-76a0-4652-84f8-0a66de4b6f82",
            "3f67d171-c9f7-4b2d-9006-59c4e84eab8d",
            "64935e6d-fa80-45dc-a827-8245445aaea7",
            "cca82360-4972-414a-a866-9c3569bb8613",
            "a463daed-1171-4c65-985f-c4d36db8691b",
            "92f43744-fa6b-4c09-99ac-74aa36ef3244",
            "c63d11ae-b243-4485-9ccd-7aae324b38c0",
            "423ad708-c07d-4423-82d3-b91b832886e0",
            "2c7bf8fd-8de4-4307-b677-31f1fe6411f4",
            "35a8c6be-7163-4c27-9fc7-5abdab4d3f48",
            "e5074f71-395a-45c4-9dd6-e33a9048583f",
            "47ee7923-f7a6-4fa1-ab56-aa7e27b4a1bb",
            "6d7b310a-0341-4aff-b6d4-a63662f6436d",
            "e643d48a-9f05-479a-9b14-47e1e6443fd5"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713541,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551768751252,
          "parent_id": "7d132e6d-be71-4378-97d7-6e67b266d858",
          "parent_table": "block",
          "properties": {
            "title": [["Implementing policy deny rules"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 5
        }
      },
      "2c7bf8fd-8de4-4307-b677-31f1fe6411f4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713540,
          "id": "2c7bf8fd-8de4-4307-b677-31f1fe6411f4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713540,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "package com.example;\n\nimport java.security.CodeSource;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.Permission;\nimport java.security.PermissionCollection;\nimport java.security.Policy;\nimport java.security.ProtectionDomain;\nimport java.security.UnresolvedPermission;\nimport java.util.Enumeration;\n\n/**\n * Wrapper that adds rudimentary {@link DeniedPermission} processing capabilities to the standard\n * file-backed <code>Policy</code>.\n */\npublic final class DenyingPolicy extends Policy {\n\n    {\n        try {\n            defaultPolicy = Policy.getInstance(\"javaPolicy\", null);\n        }\n        catch (NoSuchAlgorithmException nsae) {\n            throw new RuntimeException(\"Could not acquire default Policy.\", nsae);\n        }\n    }\n\n    private final Policy defaultPolicy;\n\n    @Override\n    public PermissionCollection getPermissions(CodeSource codesource) {\n        return defaultPolicy.getPermissions(codesource);\n    }\n\n    @Override\n    public PermissionCollection getPermissions(ProtectionDomain domain) {\n        return defaultPolicy.getPermissions(domain);\n    }\n\n    /**\n     * @return\n     *         <ul>\n     *         <li><code>true</code> if:</li>\n     *         <ul>\n     *         <li><code>permission</code> <em>is not</em> an instance of\n     *         <code>DeniedPermission</code>,</li>\n     *         <li>an <code>implies(domain, permission)</code> invocation on the system-default\n     *         <code>Policy</code> yields <code>true</code>, and</li>\n     *         <li><code>permission</code> <em>is not</em> implied by any <code>DeniedPermission</code>s\n     *         having potentially been assigned to <code>domain</code>.</li>\n     *         </ul>\n     *         <li><code>false</code>, otherwise.\n     *         </ul>\n     */\n    @Override\n    public boolean implies(ProtectionDomain domain, Permission permission) {\n        if (permission instanceof DeniedPermission) {\n            /*\n             * At the policy decision level, DeniedPermissions can only themselves imply, not be implied (as\n             * they take away, rather than grant, privileges). Furthermore, clients aren't supposed to use this\n             * method for checking whether some domain _does not_ have a permission (which is what\n             * DeniedPermissions express after all).\n             */\n            return false;\n        }\n\n        if (!defaultPolicy.implies(domain, permission)) {\n            // permission not granted, so no need to check whether denied\n            return false;\n        }\n\n        /*\n         * Permission granted--now check whether there's an overriding DeniedPermission. The following\n         * assumes that previousPolicy is a sun.security.provider.PolicyFile (different implementations\n         * might not support #getPermissions(ProtectionDomain) and/or handle UnresolvedPermissions\n         * differently).\n         */\n\n        Enumeration<Permission> perms = defaultPolicy.getPermissions(domain).elements();\n        while (perms.hasMoreElements()) {\n            Permission p = perms.nextElement();\n            /*\n             * DeniedPermissions will generally remain unresolved, as no code is expected to check whether other\n             * code has been \"granted\" such a permission.\n             */\n            if (p instanceof UnresolvedPermission) {\n                UnresolvedPermission up = (UnresolvedPermission) p;\n                if (up.getUnresolvedType().equals(DeniedPermission.class.getName())) {\n                    // force resolution\n                    defaultPolicy.implies(domain, up);\n                    // evaluate right away, to avoid reiterating over the collection\n                    p = new DeniedPermission(up.getUnresolvedName());\n                }\n            }\n            if (p instanceof DeniedPermission && p.implies(permission)) {\n                // permission denied\n                return false;\n            }\n        }\n        // permission granted\n        return true;\n    }\n\n    @Override\n    public void refresh() {\n        defaultPolicy.refresh();\n    }\n\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "35a8c6be-7163-4c27-9fc7-5abdab4d3f48": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713541,
          "id": "35a8c6be-7163-4c27-9fc7-5abdab4d3f48",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713541,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [["Demo"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_sub_header",
          "version": 1
        }
      },
      "39f735eb-76a0-4652-84f8-0a66de4b6f82": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713538,
          "id": "39f735eb-76a0-4652-84f8-0a66de4b6f82",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713538,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [
              ["It is occasionally desirable to "],
              ["deny", [["i"]]],
              [" a certain "],
              ["Permission", [["c"]]],
              [" to some "],
              ["ProtectionDomain", [["c"]]],
              [", "],
              ["regardless", [["i"]]],
              [
                " of any other permissions that domain accrues. This example demonstrates just one of all the possible approaches for satisfying this kind of requirement. It introduces a “negative” permission class, along with a wrapper that enables the default "
              ],
              ["Policy", [["c"]]],
              [" to be reused as a repository of such permissions."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "3f67d171-c9f7-4b2d-9006-59c4e84eab8d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713538,
          "id": "3f67d171-c9f7-4b2d-9006-59c4e84eab8d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713538,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [["Notes:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "423ad708-c07d-4423-82d3-b91b832886e0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713540,
          "id": "423ad708-c07d-4423-82d3-b91b832886e0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713540,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [["The "], ["DenyingPolicy", [["c"]]], [" class"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_sub_header",
          "version": 5
        }
      },
      "47ee7923-f7a6-4fa1-ab56-aa7e27b4a1bb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713541,
          "id": "47ee7923-f7a6-4fa1-ab56-aa7e27b4a1bb",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713541,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [["Assign some permissions:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "64935e6d-fa80-45dc-a827-8245445aaea7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713539,
          "id": "64935e6d-fa80-45dc-a827-8245445aaea7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713539,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The standard policy file syntax and mechanism for permission assignment in general remain unaffected. This means that "
              ],
              ["deny", [["i"]]],
              [" rules within policy files are still expressed as "],
              ["grants", [["i"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "6d7b310a-0341-4aff-b6d4-a63662f6436d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713541,
          "id": "6d7b310a-0341-4aff-b6d4-a63662f6436d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713541,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "grant codeBase \"file:///path/to/classes/bin/-\"\n    permission java.util.PropertyPermission \"*\", \"read,write\";\n    permission com.example.DeniedPermission \"java.util.PropertyPermission:foo.bar:read\";\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "7d132e6d-be71-4378-97d7-6e67b266d858": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "6dcf2cd0-d559-4c8d-b908-40b49b9b16c8",
            "09470a7b-fa82-45cf-a160-9d8e39d8ff09",
            "08e8aa76-7d5a-4b9e-9f15-85f0319da161",
            "1be03b36-9612-4a8f-90aa-752aeb6c2fbf"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518680000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "7d132e6d-be71-4378-97d7-6e67b266d858",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550519280000,
          "parent_id": "d37cda98-a070-46f6-b2cc-375731ea3bdb",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["SecurityManager"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 31
        }
      },
      "92f43744-fa6b-4c09-99ac-74aa36ef3244": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713540,
          "id": "92f43744-fa6b-4c09-99ac-74aa36ef3244",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713540,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [["The "], ["DeniedPermission", [["c"]]], [" class"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_sub_header",
          "version": 1
        }
      },
      "a463daed-1171-4c65-985f-c4d36db8691b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713540,
          "id": "a463daed-1171-4c65-985f-c4d36db8691b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713540,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Denied permissions are only processed as such at the policy level. If statically assigned to a domain, they will by default be treated by that domain as ordinary “positive” permissions."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "c63d11ae-b243-4485-9ccd-7aae324b38c0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713540,
          "id": "c63d11ae-b243-4485-9ccd-7aae324b38c0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713540,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "package com.example;\n\nimport java.lang.reflect.Constructor;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Modifier;\nimport java.security.BasicPermission;\nimport java.security.Permission;\nimport java.security.UnresolvedPermission;\nimport java.text.MessageFormat;\n\n/**\n * A representation of a \"negative\" privilege.\n * <p>\n * A <code>DeniedPermission</code>, when \"granted\" (to some <code>ProtectionDomain</code> and/or\n * <code>Principal</code>), represents a privilege which <em>cannot</em> be exercised, regardless of\n * any positive permissions (<code>AllPermission</code> included) possessed. In other words, if a\n * set of granted permissions, <em>P</em>, contains a permission of this class, <em>D</em>, then the\n * set of effectively granted permissions is<br/>\n * <br/>\n * &nbsp;&nbsp;&nbsp;&nbsp;<em>{ P<sub>implied</sub> - D<sub>implied</sub> }</em>.\n * </p>\n * <p>\n * Each instance of this class encapsulates a <em>target permission</em>, representing the\n * \"positive\" permission being denied.\n * </p>\n * Denied permissions employ the following naming scheme:<br/>\n * <br/>\n * &nbsp;&nbsp;&nbsp;&nbsp;<em>&lt;target_class_name&gt;:&lt;target_name&gt;(:&lt;target_actions&gt;)</em><br/>\n * <br/>\n * where:\n * <ul>\n * <li><em>target_class_name</em> is the name of the target permission's class,</li>\n * <li><em>target_name</em> is the name of the target permission, and</li>\n * <li><em>target_actions</em> is, optionally, the actions string of the target permission.</li>\n * </ul>\n * A denied permission, having a target permission <em>t</em>, is said to <em>imply</em> another\n * permission <em>p</em>, if:\n * <ul>\n * <li>p <em>is not</em> itself a denied permission, and <code>(t.implies(p) == true)</code>,\n * or</li>\n * <li>p <em>is</em> a denied permission, with a target <em>t1</em>, and\n * <code>(t.implies(t1) == true)</code>.\n * </ul>\n * <p>\n * It is the responsibility of the policy decision point (e.g., the <code>Policy</code> provider) to\n * take denied permission semantics into account when issuing authorization statements.\n * </p>\n */\npublic final class DeniedPermission extends BasicPermission {\n\n    private final Permission target;\n    private static final long serialVersionUID = 473625163869800679L;\n\n    /**\n     * Instantiates a <code>DeniedPermission</code> that encapsulates a target permission of the\n     * indicated class, specified name and, optionally, actions.\n     * \n     * @throws IllegalArgumentException\n     *             if:\n     *             <ul>\n     *             <li><code>targetClassName</code> is <code>null</code>, the empty string, does not\n     *             refer to a concrete <code>Permission</code> descendant, or refers to\n     *             <code>DeniedPermission.class</code> or <code>UnresolvedPermission.class</code>.</li>\n     *             <li><code>targetName</code> is <code>null</code>.</li>\n     *             <li><code>targetClassName</code> cannot be instantiated, and it's the caller's fault;\n     *             e.g., because <code>targetName</code> and/or <code>targetActions</code> do not adhere\n     *             to the naming constraints of the target class; or due to the target class not\n     *             exposing a <code>(String name)</code>, or <code>(String name, String actions)</code>\n     *             constructor, depending on whether <code>targetActions</code> is <code>null</code> or\n     *             not.</li>\n     *             </ul>\n     */\n    public static DeniedPermission newDeniedPermission(String targetClassName, String targetName,\n            String targetActions) {\n        if (targetClassName == null || targetClassName.trim().isEmpty() || targetName == null) {\n            throw new IllegalArgumentException(\n                    \"Null or empty [targetClassName], or null [targetName] argument was supplied.\");\n        }\n        StringBuilder sb = new StringBuilder(targetClassName).append(\":\").append(targetName);\n        if (targetName != null) {\n            sb.append(\":\").append(targetName);\n        }\n        return new DeniedPermission(sb.toString());\n    }\n\n    /**\n     * Instantiates a <code>DeniedPermission</code> that encapsulates a target permission of the class,\n     * name and, optionally, actions, collectively provided as the <code>name</code> argument.\n     * \n     * @throws IllegalArgumentException\n     *             if:\n     *             <ul>\n     *             <li><code>name</code>'s target permission class name component is empty, does not\n     *             refer to a concrete <code>Permission</code> descendant, or refers to\n     *             <code>DeniedPermission.class</code> or <code>UnresolvedPermission.class</code>.</li>\n     *             <li><code>name</code>'s target name component is <code>empty</code></li>\n     *             <li>the target permission class cannot be instantiated, and it's the caller's fault;\n     *             e.g., because <code>name</code>'s target name and/or target actions component(s) do\n     *             not adhere to the naming constraints of the target class; or due to the target class\n     *             not exposing a <code>(String name)</code>, or\n     *             <code>(String name, String actions)</code> constructor, depending on whether the\n     *             target actions component is empty or not.</li>\n     *             </ul>\n     */\n    public DeniedPermission(String name) {\n        super(name);\n        String[] comps = name.split(\":\");\n        if (comps.length < 2) {\n            throw new IllegalArgumentException(MessageFormat.format(\"Malformed name [{0}] argument.\", name));\n        }\n        this.target = initTarget(comps[0], comps[1], ((comps.length < 3) ? null : comps[2]));\n    }\n\n    /**\n     * Instantiates a <code>DeniedPermission</code> that encapsulates the given target permission.\n     * \n     * @throws IllegalArgumentException\n     *             if <code>target</code> is <code>null</code>, a <code>DeniedPermission</code>, or an\n     *             <code>UnresolvedPermission</code>.\n     */\n    public static DeniedPermission newDeniedPermission(Permission target) {\n        if (target == null) {\n            throw new IllegalArgumentException(\"Null [target] argument.\");\n        }\n        if (target instanceof DeniedPermission || target instanceof UnresolvedPermission) {\n            throw new IllegalArgumentException(\"[target] must not be a DeniedPermission or an UnresolvedPermission.\");\n        }\n        StringBuilder sb = new StringBuilder(target.getClass().getName()).append(\":\").append(target.getName());\n        String targetActions = target.getActions();\n        if (targetActions != null) {\n            sb.append(\":\").append(targetActions);\n        }\n        return new DeniedPermission(sb.toString(), target);\n    }\n\n    private DeniedPermission(String name, Permission target) {\n        super(name);\n        this.target = target;\n    }\n\n    private Permission initTarget(String targetClassName, String targetName, String targetActions) {\n        Class<?> targetClass;\n        try {\n            targetClass = Class.forName(targetClassName);\n        }\n        catch (ClassNotFoundException cnfe) {\n            if (targetClassName.trim().isEmpty()) {\n                targetClassName = \"<empty>\";\n            }\n            throw new IllegalArgumentException(\n                    MessageFormat.format(\"Target Permission class [{0}] not found.\", targetClassName));\n        }\n        if (!Permission.class.isAssignableFrom(targetClass) || Modifier.isAbstract(targetClass.getModifiers())) {\n            throw new IllegalArgumentException(MessageFormat\n                    .format(\"Target Permission class [{0}] is not a (concrete) Permission.\", targetClassName));\n        }\n        if (targetClass == DeniedPermission.class || targetClass == UnresolvedPermission.class) {\n            throw new IllegalArgumentException(\"Target Permission class cannot be a DeniedPermission itself.\");\n        }\n        Constructor<?> targetCtor;\n        try {\n            if (targetActions == null) {\n                targetCtor = targetClass.getConstructor(String.class);\n            }\n            else {\n                targetCtor = targetClass.getConstructor(String.class, String.class);\n            }\n        }\n        catch (NoSuchMethodException nsme) {\n            throw new IllegalArgumentException(MessageFormat.format(\n                    \"Target Permission class [{0}] does not provide or expose a (String name) or (String name, String actions) constructor.\",\n                    targetClassName));\n        }\n        try {\n            return (Permission) targetCtor\n                    .newInstance(((targetCtor.getParameterCount() == 1) ? new Object[] { targetName }\n                            : new Object[] { targetName, targetActions }));\n        }\n        catch (ReflectiveOperationException roe) {\n            if (roe instanceof InvocationTargetException) {\n                if (targetName == null) {\n                    targetName = \"<null>\";\n                }\n                else if (targetName.trim().isEmpty()) {\n                    targetName = \"<empty>\";\n                }\n                if (targetActions == null) {\n                    targetActions = \"<null>\";\n                }\n                else if (targetActions.trim().isEmpty()) {\n                    targetActions = \"<empty>\";\n                }\n                throw new IllegalArgumentException(MessageFormat.format(\n                        \"Could not instantiate target Permission class [{0}]; provided target name [{1}] and/or target actions [{2}] potentially erroneous.\",\n                        targetClassName, targetName, targetActions), roe);\n            }\n            throw new RuntimeException(\n                    \"Could not instantiate target Permission class [{0}]; an unforeseen error occurred - see attached cause for details\",\n                    roe);\n        }\n    }\n\n    /**\n     * Checks whether the given permission is implied by this one, as per the {@link DeniedPermission\n     * overview}.\n     */\n    @Override\n    public boolean implies(Permission p) {\n        if (p instanceof DeniedPermission) {\n            return target.implies(((DeniedPermission) p).target);\n        }\n        return target.implies(p);\n    }\n\n    /**\n     * Returns this denied permission's target permission (the actual positive permission which is not\n     * to be granted).\n     */\n    public Permission getTargetPermission() {\n        return target;\n    }\n\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "cca82360-4972-414a-a866-9c3569bb8613": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713540,
          "id": "cca82360-4972-414a-a866-9c3569bb8613",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713540,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The policy wrapper is meant to specifically encapsulate the default file-backed "
              ],
              ["Policy", [["c"]]],
              [" (assumed to be "],
              ["com.sun.security.provider.PolicyFile", [["c"]]],
              [")."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "d37cda98-a070-46f6-b2cc-375731ea3bdb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "aaf522ec-ec58-4c19-b129-bf870a37c471",
            "01da4f13-0c0c-4b03-a4bf-e48c83a4fd76",
            "3e5f6441-fbb7-4864-8927-1c1c812bd8c7",
            "39a676e8-4916-4942-a1ec-5020702b7db9",
            "7416eb9a-1bd0-49c2-bd47-b63df006e231",
            "b352327f-4045-48dc-891e-ceda03965ca0",
            "eaad0c1d-9ecf-4d2a-b640-d2df4debfaf8",
            "89249b2d-411e-48a0-929e-d4742921cff2",
            "bcd7d24d-a9b8-40ba-ac61-89bb802d73b5",
            "85c1bbdb-fd02-46ef-97a5-fd455d99d394",
            "fda67066-f20c-4f73-a7e9-440104e1f868",
            "98fc7929-b076-4b4c-8088-3851bfc3fdbf",
            "d8411ba8-1e49-4c45-95a0-bf6bfc36e334",
            "9dc5af85-594a-4e98-9197-96bed38df371",
            "e58fed62-9361-43a9-9d33-915bbbe28d40",
            "dbf1646a-6f86-4971-898a-a9a47703bccc",
            "9b718882-2700-4d99-b7fa-082a618f32ef",
            "73fc2f16-29dd-4ebe-9aa4-230f87bd750a",
            "e5fa4b7a-50ed-4941-8513-fccd67c67989",
            "18b76d44-dee7-4db7-a2a2-e95e6bd9d155",
            "814dd116-37ca-4db6-82af-c82641c48f28",
            "554c1de0-d05d-42a6-83c5-3aa4b3d0fc65",
            "eaf811df-e51f-4444-9642-8359027b3f7f",
            "3bdee82f-cd88-45a7-8656-12de08206f33",
            "452a4215-c66d-493c-80d3-4980568bf1fa",
            "73baf53a-7a2f-4a55-b55d-1d231e864e0d",
            "596cd51e-237c-46bd-a4df-28e4d338582d",
            "c5f4838e-8ea8-4be5-9969-41936c9db840",
            "f602a51a-866e-489c-b102-d755ada1334d",
            "8576ab83-1126-4d17-b0cf-2a0ba47249c1",
            "9fce71c9-8b02-432c-9389-56fc3900e172",
            "7f371e05-b7ff-48ea-9972-81e7db63652e",
            "d12c85fb-12be-4d36-9a14-84025fa56b60",
            "b9a3cb65-69d9-4784-9938-41825e12a7f1",
            "97438e24-dce9-426e-8d5c-ab77c35f4df5",
            "0e3fe4e1-0860-4111-a2a9-ca47548a8a88",
            "e4ecbdd2-4cc1-4fe5-bfa8-fd658d08f5c9",
            "d6f562ae-bc87-42cb-a1e7-ffb04e5a8c78",
            "168082aa-5571-487a-900c-cbc49e8a374b",
            "6c6c87a4-551e-4cdd-b523-66ee2c5d11cb",
            "97cc20bf-7781-415e-91b6-5a7723bd541f",
            "1299aa95-a781-4149-a1bc-85d263b01c89",
            "174a8fd0-08c4-4f2e-91b0-7a7a30744772",
            "b9903421-9beb-4a68-9bcb-bb33137f6fbd",
            "efc357da-0d0e-4f18-820d-fb1e40a75c9e",
            "a13ef5e0-d08a-4e6a-ad56-64b676156279",
            "58f803cf-d6ca-4afb-a5b4-bb11701e5167",
            "2e3af3b7-fb1a-45ea-9c61-94dcd8ba030d",
            "577a95eb-7fe8-47dd-b237-f7a2f432d985",
            "c5846508-be18-4fc1-871b-a4ccbf7a323f",
            "6f2fa7ab-2d05-4439-ac96-63b175867e14",
            "c1a139ac-088d-487a-93c4-a161e63d7a0f",
            "15c00477-2c1d-42bb-8403-38d722be5306",
            "e93143db-4ec8-407d-9e59-36ae80fe15a9",
            "f97b5af1-ebfb-4f93-b626-71360d568e49",
            "411a7a1f-cef6-409f-ae9d-97669efd41d2",
            "8a480f36-543e-421b-9c30-b81e4e4de51b",
            "69b2872f-ba89-4451-889b-c3256180e829",
            "62b65910-e945-49a5-88d6-ee112102eaaa",
            "c0b21f8d-4154-4b25-a9c9-44797f096f6b",
            "8032ba89-4510-41bd-b749-159e44baeedf",
            "51a41ec0-d6f6-46f1-a1bf-02273088fa3f",
            "ced04cf4-809b-4eb8-af63-c3041b9bfcb3",
            "fd5ee180-90d8-419e-bf30-b0b1c5331eae",
            "08a825c7-7382-4c6e-9784-d7fc3b88843e",
            "e002cb8c-12c8-449b-b5bd-f52de1b3d39a",
            "a70f079b-309c-4222-9eae-6757e006e4f9",
            "a3d49ace-4bd5-4b11-86ab-b55d80696ddd",
            "842c6e8a-9e84-47b0-b1c3-be9dfcf9a9cc",
            "326ffb78-894f-49b9-bcf3-6b69c4bcd7d0",
            "3303a72b-38b0-4750-be58-cd6fb5d6ba18",
            "0bf58cac-010f-4b78-ae8d-b08f7e1fc917",
            "0ed5c46b-8e07-44d9-8123-227510c0501a",
            "9e1981fd-3dd3-4f41-8ad4-fec88463b6b0",
            "ea8b958b-e16b-4923-b637-db1bf684b7a8",
            "ff382d4c-e48a-463a-bc32-a1c6bbf07b92",
            "ee8d32ac-100a-40e0-a368-1b19a4425348",
            "0927bf61-8573-4b84-9fe1-cb6528be7f67",
            "07db657f-7fc2-4b93-b9cf-9d8a98f83654",
            "6e8be33a-59ae-4ce7-a49e-06a124b207b9",
            "be3469ab-c5bc-45ec-b3e0-6bc9897f0a82",
            "9450e3e1-ee88-4dd5-982c-03d03bddc553",
            "37c963fc-8764-46de-bbf6-7851df1871b0",
            "a72a1c9e-c899-4602-bb27-12024eba3c19",
            "296055d0-9b28-4bfd-8a83-8fb412da632b",
            "4d46b70c-bbcb-46ae-82ed-5387aeebf3e3",
            "99f725fb-1166-4771-8bc9-95eaef31fd78",
            "49141f6b-0336-474d-8c0f-8a890a4e0e05",
            "a602bb9b-4cee-4147-b27f-bb77ff90095a",
            "451f31c6-52f4-4350-8697-59f8fa181821",
            "6287dcec-432f-4b11-b339-a8c57ab92cb4",
            "4b209f0b-eae2-4938-ba73-25d69b37d0e6",
            "bcceb6e0-56a9-4024-9f5a-d6dce4afd5b5",
            "65b3b4cb-dbb9-4dfb-9c83-9429dfa4e76a",
            "6dd2e1bb-5fba-432d-9aaf-05e0509441e8",
            "9f3a8d9f-328f-44ab-ab06-a131a5152b5e",
            "5b7be3cb-76a0-4500-bd45-bbdbbb857515",
            "0306fa92-e908-484d-9587-ec2f8839b29c",
            "f1ae226e-c44a-4f29-805f-9c96503cad02",
            "b0ef256d-5b03-43f3-9e98-95dc2f1a1ef8",
            "9fb48b00-5e40-4acd-b683-7ffce58b76df",
            "3c54d1f8-5883-49c6-ac9a-ae59a7ed8562",
            "ea7dea1f-0eef-439e-97f7-d0c1244f588e",
            "24349c65-63f6-49cb-bc3c-1bfa8dcdf502",
            "7b2c77f5-4e3b-4b65-a1f9-4959ba216215",
            "a873104f-c973-4151-8a25-4d3aeaee0aca",
            "b424a141-83be-4561-bc42-9546a105075b",
            "68d3f97c-3d71-48d3-955c-6eb7411e2d26",
            "cd39ba46-bf9a-48ed-82fa-26244685c82f",
            "c386ebaf-21ff-47ef-88ba-5a7b86bb19cc",
            "053f453d-ac10-4abf-9826-3a34e4d13a72",
            "a741ed28-53ae-4ea9-9f95-0840d44390eb",
            "28d11fe4-92df-4393-8cbb-b9dadc487955",
            "59aca1d4-aa98-4e2a-a6ab-4b16e97533ad",
            "035f8e12-e9d0-418f-b9f5-52fba2e44607",
            "ac647426-fa05-4ba9-92e4-2f1b5e397608",
            "4198a4f2-159f-494d-8e72-71dd624b90b5",
            "a9a507ad-7ffd-4cf9-9c3d-72dec5c855a7",
            "bac27a47-c983-46b6-ac55-bf131c4ab1ec",
            "4ddf910d-8ecc-4478-a0f4-9af6dd01edd1",
            "012a60f0-6603-428f-90f0-56d12cde3fa4",
            "7d132e6d-be71-4378-97d7-6e67b266d858",
            "57531e2f-e003-413e-bf53-4da6d5c290be",
            "c7dd888e-231c-4e05-8e3e-9196a9821e21",
            "9d97c673-b77f-4721-9f0d-3eaf24d2c271",
            "d97c8d19-3493-4c4f-bb5b-450d9f84e1d3",
            "d73cc3a8-7897-4311-9f5f-f3e15e294c43",
            "3eb768b9-4667-4f25-acbf-097f9c448d1c",
            "48f2c1e1-d9e6-4807-9f42-be50dce48bd5",
            "08507a75-1faa-4949-96a5-ebc8359aa340",
            "447fd392-7082-4e22-a270-9cd70f7b8c2d",
            "8a6ce80e-8175-47e1-b714-9926a6ae2f02",
            "357c838d-8733-457f-97f6-21da1c4b4d21",
            "06facd5b-8010-41ca-bd4b-7a8b528e8f24",
            "e3ef9e48-01c2-44e2-88f8-a1ab808c51a7",
            "710faefa-3483-45a0-a36a-d7a17ed77932",
            "09568d97-d737-4b31-a861-9e91cb338af5",
            "575a0e12-5d3f-43b2-a810-16c144e95e5d",
            "f991cfb6-71b2-4c12-831e-03e303061072",
            "714ba765-62ea-457d-9f3e-c7d819c242d7",
            "87ac3ba4-bd8c-44a0-86ea-f0715687a44c",
            "1f0e916b-e994-4a2f-91b1-8a6715f5100b",
            "c2df652d-eb55-4286-9fcf-b94bbb067b28",
            "ee7eec3d-59c2-47f2-a6d1-c1a275d8bc22",
            "589f380f-d514-49da-aaac-757fd79fac85",
            "faab9977-b5fb-422f-8a9c-1dcb04654969",
            "d9409fc4-cc95-48a8-9906-b1dcb34f86f3",
            "6dd46157-67bc-42db-a307-1e68e8cc3008",
            "0cc39226-de45-44eb-a2a4-1b58aa601922",
            "e86ae43e-0731-426f-9fe2-83456202921a",
            "5bf950bb-491a-4fb0-8388-9ebc5ccbbe38",
            "9c791e32-4cf1-48a4-bf05-22b43a85f7e1",
            "ab6f5a9b-c135-4abf-a6fb-d82d9535073e",
            "15926b43-91b6-44a6-8490-099a3edb1893",
            "ad42f3e9-4f5e-496a-87cf-1b0e52254116",
            "a64911f1-e960-4e9c-9e9d-2a9675afaf7f",
            "66f75f26-7b72-418f-ad75-35bde2b590ba",
            "3b3e677c-6605-4602-8982-1a8d100dad9f",
            "0d3bab31-f450-4049-a25a-91b606ec1407",
            "54220ad8-7197-4c18-9344-8ea0cba46d23",
            "ab99f25d-1260-45c1-9184-1deff3279065",
            "d3a02775-800c-4e2c-b649-ee7cf3c68105",
            "3ba14671-ceb0-4f9a-96ff-3eed05b48b4e",
            "44e51555-2e05-460d-bfa3-6b1c9af20d4c",
            "25e15d95-9887-45ad-b4d6-ab80550f92d1",
            "cd9e1130-9f12-4bd5-b0a9-1d5bbda7a3c0",
            "3a833461-064c-4403-a1b1-5fea7f8249a5",
            "716acbfb-3830-41f4-949c-5ef7e5c1d0af",
            "40582aa2-1d63-4733-86de-6d1dc19d8c14",
            "378953ae-8dd0-4c65-8b1b-e660677d4ce1",
            "bfa19745-13f6-4236-a78c-a6f7a428e66d",
            "ec463bd5-2b01-4a17-8b92-2b804ab978d4",
            "09d07627-418b-4183-bdd6-905d1c2e74c2",
            "71bf925d-a7d0-40f4-a229-0ec8cdcbd38f",
            "14bf6856-b37f-4f06-8025-ba31710eff39",
            "dbf4e4e3-2aac-4b7d-8895-bf065000b725",
            "e6438eb6-fd8d-45c7-8c94-8ce9ab2bc7de",
            "417c4ce2-c69c-4987-9784-8b1ac4455a96",
            "8fa55837-54c3-43d9-8552-29e613cda437",
            "d371d779-6e42-4c25-a4b8-9cdf9d2e4286",
            "a50bb9b3-be2e-41e5-bec9-8e1c47e2e528",
            "ce0795b3-45e7-4968-be7b-7b5eebf6255f",
            "73b46557-0e7c-496c-b2d7-0932330e4087",
            "bd3a4b6b-fab1-47c7-81e1-6a0e68ffc84f",
            "4eea65f1-af60-4838-a058-ed411be8c530",
            "9d544348-53ce-44c3-9a93-a015d0abbb2c"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550460045863,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "d37cda98-a070-46f6-b2cc-375731ea3bdb",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571297880000,
          "parent_id": "f3b52b98-b653-47b0-a53e-f353cbfbb0aa",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Java"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 332
        }
      },
      "e5074f71-395a-45c4-9dd6-e33a9048583f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713541,
          "id": "e5074f71-395a-45c4-9dd6-e33a9048583f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713541,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "package com.example;\n\nimport java.security.Policy;\n\npublic class Main {\n\n    public static void main(String... args) {\n        Policy.setPolicy(new DenyingPolicy());\n        System.setSecurityManager(new SecurityManager());\n        // should fail\n        System.getProperty(\"foo.bar\");\n    }\n\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "e643d48a-9f05-479a-9b14-47e1e6443fd5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550518713541,
          "id": "e643d48a-9f05-479a-9b14-47e1e6443fd5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550518713541,
          "parent_id": "1be03b36-9612-4a8f-90aa-752aeb6c2fbf",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Lastly, run the "],
              ["Main", [["c"]]],
              [" and watch it fail, due to the “deny” rule (the "],
              ["DeniedPermission", [["c"]]],
              [") overriding the "],
              ["grant", [["c"]]],
              [" (its "],
              ["PropertyPermission", [["c"]]],
              ["). Note that a "],
              ["setProperty(\"foo.baz\", \"xyz\")", [["c"]]],
              [
                " invocation would instead have succeeded, since the denied permission only covers the “read” action, and solely for the “foo.bar” property."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
