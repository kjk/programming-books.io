1680 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "29ea6348-43fd-434a-97fd-21e693c6c1bc"
      },
      "version": -1
    }
  ]
}
Response:+1428
{
  "recordMap": {
    "block": {
      "29ea6348-43fd-434a-97fd-21e693c6c1bc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "1444c20d-e6a6-42bb-bc82-8fe5b8e36e0e",
            "0083e79e-45bb-4300-8a18-f4aeec12790d",
            "e19cf9de-fac3-489e-9639-f36fc70c7e9b",
            "8d7ddddd-2d75-40ea-b4b8-8f8455774dff",
            "376afa0f-6cb5-4683-8952-f792b12cffc9"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102759870,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "29ea6348-43fd-434a-97fd-21e693c6c1bc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102759870,
          "parent_id": "f7fe2f0b-28ed-4ce0-b500-3c33542c0316",
          "parent_table": "block",
          "properties": {
            "title": [["Enumerable module"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      }
    }
  }
}
17845 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "29ea6348-43fd-434a-97fd-21e693c6c1bc"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+17585
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0083e79e-45bb-4300-8a18-f4aeec12790d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102759869,
          "id": "0083e79e-45bb-4300-8a18-f4aeec12790d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102759869,
          "parent_id": "29ea6348-43fd-434a-97fd-21e693c6c1bc",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Each iterator, iterate over every single element of the array.\neach ---------- iterator\ndo ------------ start of the block\n|country| ----- argument passed to the block\nputs country----block"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "1444c20d-e6a6-42bb-bc82-8fe5b8e36e0e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102759867,
          "id": "1444c20d-e6a6-42bb-bc82-8fe5b8e36e0e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102759867,
          "parent_id": "29ea6348-43fd-434a-97fd-21e693c6c1bc",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "1. For Loop:\nCountriesName = [\"India\", \"Canada\", \"America\", \"Iraq\"]\nfor country in CountriesName\n    puts country\nend\n\n2. Each Iterator:\nSame set of work can be done with each loop which we did with for loop.\nCountriesName = [\"India\", \"Canada\", \"America\", \"Iraq\"]\nCountriesName.each do |country|\n    puts country    \nend"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "29ea6348-43fd-434a-97fd-21e693c6c1bc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "1444c20d-e6a6-42bb-bc82-8fe5b8e36e0e",
            "0083e79e-45bb-4300-8a18-f4aeec12790d",
            "e19cf9de-fac3-489e-9639-f36fc70c7e9b",
            "8d7ddddd-2d75-40ea-b4b8-8f8455774dff",
            "376afa0f-6cb5-4683-8952-f792b12cffc9"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102759870,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "29ea6348-43fd-434a-97fd-21e693c6c1bc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102759870,
          "parent_id": "f7fe2f0b-28ed-4ce0-b500-3c33542c0316",
          "parent_table": "block",
          "properties": {
            "title": [["Enumerable module"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      },
      "376afa0f-6cb5-4683-8952-f792b12cffc9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102759870,
          "id": "376afa0f-6cb5-4683-8952-f792b12cffc9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102759870,
          "parent_id": "29ea6348-43fd-434a-97fd-21e693c6c1bc",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Summary: Best way to transform the collection is to make use of Enumerable module to compact the clunky code."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "51f7633c-df1f-4ab1-a777-8e8095f599bd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c644c69a-7b97-448a-a252-970bcba3dbc5",
            "15c95d8e-ee3b-4cbc-916b-22ba9be56012",
            "3efb1b78-3f39-4bb2-9cf8-9795f8fdeacb",
            "d02a2bbf-2a24-4c97-802e-aa220f4dbe24",
            "526b98b2-3732-4941-ae3c-1e34440107c3",
            "5d7c03e8-234e-44ac-99c0-de7bac145d55",
            "6d75b2af-48c2-4f57-a52d-16232196c696",
            "bd841f16-9559-465f-bd31-488dd383c486",
            "d037520d-b311-450d-93c0-56ebd4112937",
            "09e1b5cf-1a4d-40ce-9988-4288a4269d46",
            "d43d4630-d5f4-4667-982d-03e02440c201",
            "9cce7d8d-7d75-4c89-8d3d-4b403c63ca7a",
            "dad9079e-f86e-45ca-a86d-64c83fac38ae",
            "c257caf4-7140-4773-b69e-7886cfebc866",
            "98460cdd-6994-4ad2-97d6-27deab14079c",
            "d879941a-3f7c-4970-b09f-cbd77cb932d2",
            "04e23c6b-c2cd-4606-81d6-13cc2dce5d78",
            "f6d62287-fb0f-4bcb-afb4-5cf3437a357c",
            "39077d16-6763-4235-9e51-82d2579b35df",
            "c5283f07-4be2-4750-9418-3727592670e2",
            "1833e628-8643-4e8c-ad78-0531e86722ae",
            "541465a3-a3f8-453c-a793-f17d5824260e",
            "fb26c2f8-f71d-4bc9-ae23-a82861d8ea47",
            "e9481ae9-ca5e-4b9f-b722-d570649c2cfe",
            "d3393ec6-47a7-47e4-ba42-d101db781d0a",
            "4bb329de-b3fd-45b4-a19c-735d2948a10e",
            "37bbd008-8fcb-44e6-a318-2023467879c3",
            "421c1221-be5c-42b4-89bc-611d14ed995b",
            "bb7b92de-fe97-478d-b6fb-13a05cc83213",
            "0d7a4d19-fb72-485a-8da6-7465910936ff",
            "79781265-6a05-4558-8302-be7fd30fa720",
            "0beba742-561b-4cc3-bb40-d171ebf4b35f",
            "d8406e27-f8d8-4f50-a58a-e03727420eb3",
            "bcfaa3e1-f118-49ad-b63f-82d373de34f3",
            "226323b1-302c-4a19-9833-dcd38be20f9d",
            "b12e295c-908d-4ace-a221-5922b63999b9",
            "fcfe325e-bfdb-4741-9e78-def959689142",
            "0fef2d80-34e3-4dde-813f-ca18453232c1",
            "2cd9e159-28d5-46d8-979d-8949da1379cd",
            "7f9f1e81-fd42-4952-8f40-7145b0bfd61f",
            "35eddfe7-54d2-4a0e-a602-87477eb8d3bc",
            "60275fdc-4f50-440f-a917-b0c36e3fc177",
            "cb0e2d47-43c5-4809-b173-e764dfc894dc",
            "104208bf-54bf-4328-af5c-f6aeb0105199",
            "1ba86719-188e-4bf3-af1d-d5522aac14d9",
            "56ead039-5a17-41ac-aabb-8b32453caa32",
            "7eb3d215-c3b9-459b-91a2-50b351cb9a27",
            "646950e5-562c-4def-ac73-f11050db3526",
            "e2c0d93a-60f5-4355-88ec-feb8992fee94",
            "acd30baa-c28d-44b3-b3e4-3bffc6f38270",
            "bd282be1-56e1-4d1d-8027-7d824c9f0418",
            "f4a09b0e-5917-4616-bb2e-8271c834ddff",
            "36398b40-cb12-4fd8-829a-5dd8aa2617b5",
            "ae5dd55a-c2f8-453c-b48e-0019de81a71a",
            "3d619f09-c104-4572-a105-9167b3454634",
            "fd9f55c7-eaa9-432f-b822-84aafb3636ed",
            "26effae7-5f43-4caf-862c-0413d8a3b33a",
            "503b869c-facb-4daf-9429-76956c6e6073",
            "05086c82-1b0a-43ec-ae42-dfd5af1cce18",
            "ef09b0ce-fe8b-4767-8f8b-16cf766bcf5b",
            "ff17ee6e-cf45-4e7e-9f1f-2d198c0da86f",
            "9c88dbdc-003f-4bf8-8cd2-91e2af392489",
            "2e5841e2-43c9-4064-856b-bd6e8a71db8b",
            "6e074c20-aa26-42a0-90a8-e0af35c0ad06",
            "cad04a1a-1384-444d-9772-f66e5db944c5",
            "5742d364-d071-465e-95f8-1cd23bd1e88d",
            "ef591f05-8c85-4797-9c81-2d7c75cd2621",
            "35d129d5-0bd0-4afc-98ed-750fb5c3c535",
            "ba664011-d11f-48ca-9190-965b7ab51da5",
            "f7fe2f0b-28ed-4ce0-b500-3c33542c0316",
            "af1e59e1-5fbe-4c1a-a9bc-d8692da82213",
            "9650f45f-a495-462c-8fed-8d47c6532a9a",
            "7bbd4f8a-9f5a-4ee0-bddc-091af7cd868e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552101097821,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "51f7633c-df1f-4ab1-a777-8e8095f599bd",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1570605720000,
          "parent_id": "a253ec1b-9a22-4fed-8092-48668a5c15df",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Ruby"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 129
        }
      },
      "8d7ddddd-2d75-40ea-b4b8-8f8455774dff": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102759870,
          "id": "8d7ddddd-2d75-40ea-b4b8-8f8455774dff",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102759870,
          "parent_id": "29ea6348-43fd-434a-97fd-21e693c6c1bc",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "8. select \nMixedArray = [1, \"India\", 2, \"Canada\", \"America\", 4]\nMixedArray.select do |value|\n    (value.class).eql?Integer\nend\n\nselect method fetches the result based on satifying certain condition.\n\n\n9. inject methods\ninject method reduces the collection to a certain final value.\nLet's say you want to find out the sum of the collection.\nWith for loop how would it work\narr = [1,2,3,4,5]\nsum = 0\nfor x in 0..arr.length-1\n   sum = sum + arr[0]\nend\nputs sum\n15\n\nSo above mentioned sum can be reduce by single method\narr = [1,2,3,4,5]\narr.inject(0) do |sum, x| \n    puts x\n    sum = sum + x    \nend\ninject(0) - passing initial value sum = 0\nIf used inject with no argument sum = arr[0]\nsum - After each iteration, total is equal to the return value at the end of the block.\nx  - refers to the current iteration's element\n\ninject method is also an iterator."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "e19cf9de-fac3-489e-9639-f36fc70c7e9b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102759870,
          "id": "e19cf9de-fac3-489e-9639-f36fc70c7e9b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102759870,
          "parent_id": "29ea6348-43fd-434a-97fd-21e693c6c1bc",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "3. each_with_index Iterator:\neach_with_index iterator provides the element for the current iteration and index of the element in that specific collection.\nCountriesName = [\"India\", \"Canada\", \"America\", \"Iraq\"]\nCountriesName.each_with_index do |country, index|\n    puts country + \"  \" + index.to_s    \nend\n\n\n4. each_index Iterator:\nJust to know the index at which the element is placed in the collection.\nCountriesName = [\"India\", \"Canada\", \"America\", \"Iraq\"]\nCountriesName.each_index do |index|\n    puts index\nend\n\n\n5. map:\n\"map\" acts as an iterator and also used to fetch the transformed copy of the array. To fetch the new set of the array rather than introducing the change in the same specific array.\nLet's deal with for loop first:\nYou have an array arr = [1,2,3,4,5]\nYou need to produce new set of array.\narr = [1,2,3,4,5]\nnewArr = []\nfor x in 0..arr.length-1\n   newArr[x] = -arr[x]\nend\n\n\nThe above mentioned array can be iterated and can produce new set of the array using map method.\narr = [1,2,3,4,5]\nnewArr = arr.map do |x| \n    -x\n      end\n\nputs arr \n[1,2,3,4,5]\n\nputs newArr\n[-1, -2, -3, -4, -5]\n\n\nmap is returning the modified copy of the current value of the collection. arr has unaltered value.\n\n\nDifference between each and map:\n1. map returned the modified value of the collection.\n\nLet's see the example:\narr = [1,2,3,4,5]\nnewArr = arr.map do |x| \n    puts x\n    -x\n      end\n\nputs newArr\n[-1, -2, -3, -4, -5]\n\nmap method is the iterator and also return the copy of transformed collection.\n\n\narr = [1,2,3,4,5]\nnewArr = arr.each do |x| \n    puts x\n    -x \n      end\n\nputs newArr\n[1,2,3,4,5]\n\neach block will throw the array because this is just the iterator. \nEach iteration, doesn't actually alter each element in the iteration. \n    \n\n6. map!\nmap with bang changes the orginal collection and returned the modified collection not the copy of the modified collection.\narr = [1,2,3,4,5]\narr.map! do |x| \n    puts x\n    -x\nend\nputs  arr\n[-1, -2, -3, -4, -5] \n\n7. Combining map and each_with_index\nHere each_with_index will iterator over the collection and map will return the modified copy of the collection.\nCountriesName = [\"India\", \"Canada\", \"America\", \"Iraq\"]\nnewArray = \nCountriesName.each_with_index.map do |value, index|\n    puts \"Value is #{value} and the index is #{index}\"\n    \"Value is #{value} and the index is #{index}\"\nend\n\nnewArray = \nCountriesName.each_with_index.map do |value, index|\n    if ((index%2).eql?0)\n        puts \"Value is #{value} and the index is #{index}\"\n        \"Value is #{value} and the index is #{index}\"\n    end\nend\n\nputs newArray\n [\"Value is India and the index is 0\", nil, \"Value is America and the index is 2\", nil]"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "f7fe2f0b-28ed-4ce0-b500-3c33542c0316": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "570bd763-f9fc-4ee0-9447-a385ad17a588",
            "29ea6348-43fd-434a-97fd-21e693c6c1bc"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552102740000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "f7fe2f0b-28ed-4ce0-b500-3c33542c0316",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552102860000,
          "parent_id": "51f7633c-df1f-4ab1-a777-8e8095f599bd",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Enumerable"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 32
        }
      }
    },
    "space": {}
  }
}
