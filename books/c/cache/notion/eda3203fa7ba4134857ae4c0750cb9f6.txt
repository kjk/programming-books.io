1630 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6"
      },
      "version": -1
    }
  ]
}
Response:+1378
{
  "recordMap": {
    "block": {
      "eda3203f-a7ba-4134-857a-e4c0750cb9f6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "e610174a-b3ee-49e4-9ac8-ed0c505483a8",
            "ffa11ee8-ffe8-4adc-b65d-3f5644ef02a0",
            "0ff5db7d-1dc1-43d7-ab45-10d69f045865",
            "ee51abc3-6e74-4321-a4c8-09abb80fb92a"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936793328,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936793328,
          "parent_id": "5e44bd54-3362-4b1a-934b-acecce2afc7f",
          "parent_table": "block",
          "properties": {
            "title": [["Reallocating Memory"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      }
    }
  }
}
15119 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+14859
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0ff5db7d-1dc1-43d7-ab45-10d69f045865": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936793328,
          "id": "0ff5db7d-1dc1-43d7-ab45-10d69f045865",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936793328,
          "parent_id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The reallocated object may or may not have the same address as "
              ],
              ["*p", [["c"]]],
              [". Therefore it is important to capture the return value from "],
              ["realloc", [["c"]]],
              [" which contains the new address if the call is successful."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5e44bd54-3362-4b1a-934b-acecce2afc7f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "21998b72-6fa2-436d-acf7-52b9b3bddbfe",
            "b26071e0-5a74-46c4-9ec9-dfe727186d35",
            "b9ae2373-8918-40ce-8fa1-62880e3843c7",
            "eda3203f-a7ba-4134-857a-e4c0750cb9f6",
            "4b91a871-c18a-4f25-a8fb-d5bfeed8209e",
            "82ab9d4d-78c2-4787-b21b-c2b74ec5dd1f",
            "7682bc76-3b57-4228-87df-f60f222f5f7f",
            "b7c4c6d1-5094-4e65-97b8-533c445b9f8b"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936780000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "5e44bd54-3362-4b1a-934b-acecce2afc7f",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937020000,
          "parent_id": "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Memory management"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 35
        }
      },
      "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "70354277-e3ea-4870-b354-e4ccea2f776f",
            "c88395f2-cfa3-4917-9b1d-77ad5ef5da03",
            "033ae011-39fb-4a86-9a89-54971c729ce8",
            "218cbf42-b3ba-4b2a-bdab-e522009865b7",
            "af9762cd-d032-4a74-a2b8-b8413c2edefb",
            "c613c743-331e-4cb0-8344-4963dbf825f3",
            "eff989d8-e4d4-4f97-952e-6c58e46dfb73",
            "44b99e73-a03b-41cc-b542-2de7e97ca081",
            "68e74303-cec6-4c9d-a46e-83274bc84bf4",
            "6ae1f6f3-0a87-4bec-b9ca-2ef03a059422",
            "f3c54523-5f2c-4d48-a50e-cd230eee34ae",
            "9b4c9f4c-5f47-45ba-86a9-461b3aaa1198",
            "b81cd45f-aa26-4f19-8238-7b90dd64a769",
            "fb6df079-bba6-489e-ac6a-3ea61d24e7af",
            "262dadd4-3655-45db-88b6-06e23e8e3a7b",
            "9dc6ce73-bdfa-4d4d-b5a1-db84c9227865",
            "f4db91d9-e502-4cf2-b8cc-184cb2d19911",
            "1e14553b-8aea-44fb-a0fe-fbc893ff529a",
            "fceea03f-c65b-4f89-8e06-817d0fcf3348",
            "fcadea6a-df33-4395-8abc-4c71f5599a2d",
            "690adfe7-1f94-4d22-83ad-47d3971f3325",
            "fb1c49da-f858-420f-804f-317776d975e9",
            "fe373c8a-dc77-4fbb-9ceb-fe91a58a5732",
            "92dc051b-09a3-4930-9dda-0fb318b57610",
            "9104b65f-88ef-4b77-89d3-248fa4934ff0",
            "f3ac34eb-110d-486b-9e30-6bd30082bba0",
            "ce0d7992-bb1e-4e62-ab26-2f99a9a2f78d",
            "b76c53dc-9124-4a10-9817-490e3504e93e",
            "042e8ddf-c9c4-4b73-8432-0a569a4f0a8a",
            "3615ca16-3d26-4800-98f4-4da1a5c4bef4",
            "873798b2-99a2-4a3f-9d7c-e6e95e01396f",
            "f9df1d91-a33b-4691-8612-45ec5ebf45e8",
            "218166d2-ae4c-4856-827d-6080353375ec",
            "d3fd04e6-166e-44c4-8df3-6eb488aec6fb",
            "476e4bcf-2254-4ffd-82b2-b3dcbd9fdf01",
            "70e63802-c8af-4573-9d30-82507679f19d",
            "2042e9e8-170e-4e88-a3c5-041aec6ba49b",
            "a25d942b-f182-4a59-8930-268903693536",
            "bbc16be7-a6da-4b3f-9e55-a68f0bcdb261",
            "ae1ce0ef-9ced-4caa-9c8d-f14041e087b0",
            "56054c40-d551-420f-9fd8-a44a9550fd1d",
            "a32e93b8-a175-40b5-b72f-e58c30d058bb",
            "86031ef1-ffce-4374-a32d-1f1886dc6593",
            "b0240e66-8da1-4190-bbe5-f47d5b561ed2",
            "898403c6-8861-4eca-b6cf-2fee9068ecce",
            "5e44bd54-3362-4b1a-934b-acecce2afc7f",
            "5c0a653d-4ce1-4234-bf16-7d29dc2f993e",
            "ae726a5e-8d12-41b2-9bd8-209da2cca404",
            "c45bb8ec-af6d-4f58-b094-cc6980d363e1",
            "f0f16c22-34d6-4125-8a87-63fdd135ef20",
            "5e4385c8-606f-406e-b1af-53b610c5bf4a",
            "e16223c3-400e-4968-bddc-3cc5edf4c5c0",
            "8ed525aa-8fab-4ee4-9fff-5b43085094dd",
            "f4f6d384-72dd-4d02-aa47-f083a22f6481",
            "d4a53a79-3ec2-426e-ac50-24d51d19d403",
            "52978246-4aff-47a0-915a-a90feded64cd",
            "19611889-e796-4311-ab76-561c41c4850a",
            "54f188ad-c5ec-49d7-8bf7-1c5c08e72d2e",
            "27ddd518-401c-43c0-bb68-381e630e5cfb",
            "109e287f-796b-4acd-8b1b-dae5f45129bd",
            "dab23b65-514a-455a-a0f6-c63668012233",
            "cb11a718-ba93-4278-a486-b649224f5923",
            "9d53db3a-6a86-4feb-bbea-f4bfb502ed5f",
            "af5ef860-337b-4d68-aa37-de9259c85852",
            "5ebf8b4e-135f-4d2e-8d6e-1f6b532dedb7"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551935474458,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571298480000,
          "parent_id": "1ad0beae-92aa-49e1-add1-7960b1db8484",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 106
        }
      },
      "e610174a-b3ee-49e4-9ac8-ed0c505483a8": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936793327,
          "id": "e610174a-b3ee-49e4-9ac8-ed0c505483a8",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936793327,
          "parent_id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "You may need to expand or shrink your pointer storage space after you have allocated memory to it. The "
              ],
              ["void *realloc(void *ptr, size_t size)", [["c"]]],
              [" function deallocates the old object pointed to by "],
              ["ptr", [["c"]]],
              [
                " and returns a pointer to an object that has the size specified by "
              ],
              ["size", [["c"]]],
              [". "],
              ["ptr", [["c"]]],
              [" is the pointer to a memory block previously allocated with "],
              ["malloc", [["c"]]],
              [", "],
              ["calloc", [["c"]]],
              [" or "],
              ["realloc", [["c"]]],
              [
                " (or a null pointer) to be reallocated. The maximal possible contents of the original memory is preserved. If the new size is larger, any additional memory beyond the old size are uninitialized. If the new size is shorter, the contents of the shrunken part is lost. If "
              ],
              ["ptr", [["c"]]],
              [
                " is NULL, a new block is allocated and a pointer to it is returned by the function."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "eda3203f-a7ba-4134-857a-e4c0750cb9f6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "e610174a-b3ee-49e4-9ac8-ed0c505483a8",
            "ffa11ee8-ffe8-4adc-b65d-3f5644ef02a0",
            "0ff5db7d-1dc1-43d7-ab45-10d69f045865",
            "ee51abc3-6e74-4321-a4c8-09abb80fb92a"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936793328,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936793328,
          "parent_id": "5e44bd54-3362-4b1a-934b-acecce2afc7f",
          "parent_table": "block",
          "properties": {
            "title": [["Reallocating Memory"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      },
      "ee51abc3-6e74-4321-a4c8-09abb80fb92a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936793328,
          "id": "ee51abc3-6e74-4321-a4c8-09abb80fb92a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936793328,
          "parent_id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Make sure you assign the return value of "],
              ["realloc", [["c"]]],
              [" to a "],
              ["temporary", [["c"]]],
              [" instead of the original "],
              ["p", [["c"]]],
              [". "],
              ["realloc", [["c"]]],
              [
                " will return null in case of any failure, which would overwrite the pointer. This would lose your data and create a memory leak."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ffa11ee8-ffe8-4adc-b65d-3f5644ef02a0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936793328,
          "id": "ffa11ee8-ffe8-4adc-b65d-3f5644ef02a0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936793328,
          "parent_id": "eda3203f-a7ba-4134-857a-e4c0750cb9f6",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n \nint main(void)\n{\n    int *p = malloc(10 * sizeof *p);\n    if (NULL == p) \n    {\n        perror(\"malloc() failed\");\n        return EXIT_FAILURE;\n    }\n \n    p[0] = 42;\n    p[9] = 15;\n\n    /* Reallocate array to a larger size, storing the result into a\n     * temporary pointer in case realloc() fails. */\n    {\n        int *temporary = realloc(p, 1000000 * sizeof *temporary);\n\n        /* realloc() failed, the original allocation was not free'd yet. */\n        if (NULL == temporary)\n        {\n            perror(\"realloc() failed\");\n            free(p); /* Clean up. */\n            return EXIT_FAILURE;\n        }      \n\n        p = temporary;\n    }\n\n    /* From here on, array can be used with the new size it was \n     * realloc'ed to, until it is free'd. */\n\n    /* The values of p[0] to p[9] are preserved, so this will print:\n       42 15\n    */\n    printf(\"%d %d\\n\", p[0], p[9]);\n\n    free(p);\n\n    return EXIT_SUCCESS;\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
