2457 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "d8722f7c-de00-4b5a-b758-c1152d76fc24"
      },
      "version": -1
    }
  ]
}
Response:+2205
{
  "recordMap": {
    "block": {
      "d8722f7c-de00-4b5a-b758-c1152d76fc24": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "d8c2838c-b650-436c-b605-6a03a7f0c726",
            "d21fa769-a8be-4097-a3df-db981854ce71",
            "e7c65b4d-c3d4-42ab-ae53-418f611b2a41",
            "cd30091e-c11a-46f0-89ed-14d5f17ad0d4",
            "cb874de1-d2c5-454f-b556-f96a40d76bf8",
            "30536ba6-917f-41a7-82d5-7197950c778c",
            "8df5104e-684f-42c9-831e-ef75d5009140",
            "7764f3d4-3a83-4485-a3fc-b559b4ca04ef",
            "57740c15-bf68-4374-915c-5658d0686b51",
            "0919b4ef-1243-46b0-952e-2e40c5c59cdd",
            "2aeb7afa-098c-4ffa-9b5c-03b0bf1093c8",
            "3f905df5-f630-4e12-8206-11a46f3afa8f",
            "9fa399de-31fe-48a0-b742-3fb11e72175f",
            "2eddb5ee-1e67-42f2-ad6f-b13ed5f424c3",
            "7f6f4972-7d41-4880-96ac-03f95aa63f45",
            "e2568f32-7178-4b48-9739-e9e7a554a85a",
            "5f8445ec-fe2e-402a-84cc-b399ce1143ed",
            "5b4b4798-d0c6-4ee3-853e-f7f87dd70764",
            "8bc9d277-38fa-4e05-b18c-1412a8238fda",
            "6458ab47-ee11-4985-85e0-7af5c8137543"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205632,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205632,
          "parent_id": "1e14553b-8aea-44fb-a0fe-fbc893ff529a",
          "parent_table": "block",
          "properties": {
            "title": [["Freeing Memory"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 7
        }
      }
    }
  }
}
35317 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "d8722f7c-de00-4b5a-b758-c1152d76fc24"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+35057
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0919b4ef-1243-46b0-952e-2e40c5c59cdd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205629,
          "id": "0919b4ef-1243-46b0-952e-2e40c5c59cdd",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205629,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "if (something_is_needed())\n{\n\n    int *p = malloc(10 * sizeof *p);\n    if (p == NULL) \n    {\n        perror(\"malloc failed\");\n        return -1;\n    }\n\n    /* do whatever is needed with p */\n\n    free(p);\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "1e14553b-8aea-44fb-a0fe-fbc893ff529a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "7198a099-6c2f-4f63-9943-c31948ad1f78",
            "55f9243b-9879-45f7-a90b-5e90b423dcae",
            "258771da-efb3-4afa-877c-f603cc4fea2b",
            "d8722f7c-de00-4b5a-b758-c1152d76fc24",
            "632e5272-7cc3-466b-abc3-ba97ba450943",
            "0c92f1a0-0616-4ea4-a50b-1031fb54db19",
            "d4e250ea-c07e-448f-a5f2-f49a81ec898e",
            "06d197a3-1634-4387-b03e-7e84f8aeaa24",
            "e3719ba8-5268-48eb-85d4-298c693390ae",
            "13b866b8-e774-4ca8-b290-931750015baa",
            "a64423ee-f522-4ec8-bcd8-d54c08375b72",
            "f89e648a-c640-4320-bba4-d09da186aae4",
            "4ad947ee-b90c-406a-bc1a-f8c5e8f05607",
            "7426a3a8-eb52-4704-87e9-fffc3f6f0c4d",
            "47da2a15-8afd-491a-be78-fd8e782996cc",
            "da21964e-af52-416b-9a98-a048af54e2f3",
            "c8da09b8-cc9e-4c17-8a85-5c18c13b1d26"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936180000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "1e14553b-8aea-44fb-a0fe-fbc893ff529a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936360000,
          "parent_id": "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Pointers"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 36
        }
      },
      "2aeb7afa-098c-4ffa-9b5c-03b0bf1093c8": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205629,
          "id": "2aeb7afa-098c-4ffa-9b5c-03b0bf1093c8",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205629,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["By calling "],
              ["free()", [["c"]]],
              [" directly before the end of the containing block (i.e.Â the "],
              ["\\}", [["c"]]],
              ["), "],
              ["p", [["c"]]],
              [
                " itself ceases to exist. The compiler will give a compilation error on any attempt to use "
              ],
              ["p", [["c"]]],
              [" after that."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "2eddb5ee-1e67-42f2-ad6f-b13ed5f424c3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205629,
          "id": "2eddb5ee-1e67-42f2-ad6f-b13ed5f424c3",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205629,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [["Arguments for this approach:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "30536ba6-917f-41a7-82d5-7197950c778c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205628,
          "id": "30536ba6-917f-41a7-82d5-7197950c778c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205628,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [["in the middle of an allocated block,"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      },
      "3f905df5-f630-4e12-8206-11a46f3afa8f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205629,
          "id": "3f905df5-f630-4e12-8206-11a46f3afa8f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205629,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A second approach is to also invalidate the pointer itself after releasing the memory to which it points:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "57740c15-bf68-4374-915c-5658d0686b51": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205628,
          "id": "57740c15-bf68-4374-915c-5658d0686b51",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205628,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["The first and preferable is simple - have "],
              ["p", [["c"]]],
              [
                " itself cease to exist when it is no longer needed, for example:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5b4b4798-d0c6-4ee3-853e-f7f87dd70764": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205631,
          "id": "5b4b4798-d0c6-4ee3-853e-f7f87dd70764",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205631,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["It is safe to free a null pointer. The "],
              [
                "C Standard specifies",
                [["a", "http://port70.net/~nsz/c/c89/c89-draft.html#4.10.3.2"]]
              ],
              [" that "],
              ["free(NULL)", [["c"]]],
              [" has no effect:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "5f8445ec-fe2e-402a-84cc-b399ce1143ed": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205630,
          "id": "5f8445ec-fe2e-402a-84cc-b399ce1143ed",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205630,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["This approach hence follows the "],
              [
                "fail-fast concept",
                [["a", "https://en.wikipedia.org/wiki/Fail-fast"]]
              ],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "6458ab47-ee11-4985-85e0-7af5c8137543": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205632,
          "id": "6458ab47-ee11-4985-85e0-7af5c8137543",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205632,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Sometimes the first approach cannot be used (e.g.Â memory is allocated in one function, and deallocated much later in a completely different function)"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "7764f3d4-3a83-4485-a3fc-b559b4ca04ef": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205628,
          "id": "7764f3d4-3a83-4485-a3fc-b559b4ca04ef",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205628,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "There are two common strategies to prevent such instances of undefined behavior."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "7f6f4972-7d41-4880-96ac-03f95aa63f45": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205629,
          "id": "7f6f4972-7d41-4880-96ac-03f95aa63f45",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205629,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "On many platforms, an attempt to dereference a null pointer will cause instant crash: Segmentation fault. Here, we get at least a stack trace pointing to the variable that was used after being freed."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "70354277-e3ea-4870-b354-e4ccea2f776f",
            "c88395f2-cfa3-4917-9b1d-77ad5ef5da03",
            "033ae011-39fb-4a86-9a89-54971c729ce8",
            "218cbf42-b3ba-4b2a-bdab-e522009865b7",
            "af9762cd-d032-4a74-a2b8-b8413c2edefb",
            "c613c743-331e-4cb0-8344-4963dbf825f3",
            "eff989d8-e4d4-4f97-952e-6c58e46dfb73",
            "44b99e73-a03b-41cc-b542-2de7e97ca081",
            "68e74303-cec6-4c9d-a46e-83274bc84bf4",
            "6ae1f6f3-0a87-4bec-b9ca-2ef03a059422",
            "f3c54523-5f2c-4d48-a50e-cd230eee34ae",
            "9b4c9f4c-5f47-45ba-86a9-461b3aaa1198",
            "b81cd45f-aa26-4f19-8238-7b90dd64a769",
            "fb6df079-bba6-489e-ac6a-3ea61d24e7af",
            "262dadd4-3655-45db-88b6-06e23e8e3a7b",
            "9dc6ce73-bdfa-4d4d-b5a1-db84c9227865",
            "f4db91d9-e502-4cf2-b8cc-184cb2d19911",
            "1e14553b-8aea-44fb-a0fe-fbc893ff529a",
            "fceea03f-c65b-4f89-8e06-817d0fcf3348",
            "fcadea6a-df33-4395-8abc-4c71f5599a2d",
            "690adfe7-1f94-4d22-83ad-47d3971f3325",
            "fb1c49da-f858-420f-804f-317776d975e9",
            "fe373c8a-dc77-4fbb-9ceb-fe91a58a5732",
            "92dc051b-09a3-4930-9dda-0fb318b57610",
            "9104b65f-88ef-4b77-89d3-248fa4934ff0",
            "f3ac34eb-110d-486b-9e30-6bd30082bba0",
            "ce0d7992-bb1e-4e62-ab26-2f99a9a2f78d",
            "b76c53dc-9124-4a10-9817-490e3504e93e",
            "042e8ddf-c9c4-4b73-8432-0a569a4f0a8a",
            "3615ca16-3d26-4800-98f4-4da1a5c4bef4",
            "873798b2-99a2-4a3f-9d7c-e6e95e01396f",
            "f9df1d91-a33b-4691-8612-45ec5ebf45e8",
            "218166d2-ae4c-4856-827d-6080353375ec",
            "d3fd04e6-166e-44c4-8df3-6eb488aec6fb",
            "476e4bcf-2254-4ffd-82b2-b3dcbd9fdf01",
            "70e63802-c8af-4573-9d30-82507679f19d",
            "2042e9e8-170e-4e88-a3c5-041aec6ba49b",
            "a25d942b-f182-4a59-8930-268903693536",
            "bbc16be7-a6da-4b3f-9e55-a68f0bcdb261",
            "ae1ce0ef-9ced-4caa-9c8d-f14041e087b0",
            "56054c40-d551-420f-9fd8-a44a9550fd1d",
            "a32e93b8-a175-40b5-b72f-e58c30d058bb",
            "86031ef1-ffce-4374-a32d-1f1886dc6593",
            "b0240e66-8da1-4190-bbe5-f47d5b561ed2",
            "898403c6-8861-4eca-b6cf-2fee9068ecce",
            "5e44bd54-3362-4b1a-934b-acecce2afc7f",
            "5c0a653d-4ce1-4234-bf16-7d29dc2f993e",
            "ae726a5e-8d12-41b2-9bd8-209da2cca404",
            "c45bb8ec-af6d-4f58-b094-cc6980d363e1",
            "f0f16c22-34d6-4125-8a87-63fdd135ef20",
            "5e4385c8-606f-406e-b1af-53b610c5bf4a",
            "e16223c3-400e-4968-bddc-3cc5edf4c5c0",
            "8ed525aa-8fab-4ee4-9fff-5b43085094dd",
            "f4f6d384-72dd-4d02-aa47-f083a22f6481",
            "d4a53a79-3ec2-426e-ac50-24d51d19d403",
            "52978246-4aff-47a0-915a-a90feded64cd",
            "19611889-e796-4311-ab76-561c41c4850a",
            "54f188ad-c5ec-49d7-8bf7-1c5c08e72d2e",
            "27ddd518-401c-43c0-bb68-381e630e5cfb",
            "109e287f-796b-4acd-8b1b-dae5f45129bd",
            "dab23b65-514a-455a-a0f6-c63668012233",
            "cb11a718-ba93-4278-a486-b649224f5923",
            "9d53db3a-6a86-4feb-bbea-f4bfb502ed5f",
            "af5ef860-337b-4d68-aa37-de9259c85852",
            "5ebf8b4e-135f-4d2e-8d6e-1f6b532dedb7"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551935474458,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571298480000,
          "parent_id": "1ad0beae-92aa-49e1-add1-7960b1db8484",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 106
        }
      },
      "8bc9d277-38fa-4e05-b18c-1412a8238fda": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205631,
          "id": "8bc9d277-38fa-4e05-b18c-1412a8238fda",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205631,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The free function causes the space pointed to by ptr to be deallocated, that is, made available for further allocation. If ptr is a null pointer, no action occurs. Otherwise, if the argument does not match a pointer earlier returned by the calloc, malloc, or realloc function, or if the space has been deallocated by a call to free or realloc, the behavior is undefined."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "8df5104e-684f-42c9-831e-ef75d5009140": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205628,
          "id": "8df5104e-684f-42c9-831e-ef75d5009140",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205628,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "is forbidden. Such an error will usually not be diagnosed by your compiler but will lead the program execution in an undefined state."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "9fa399de-31fe-48a0-b742-3fb11e72175f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205629,
          "id": "9fa399de-31fe-48a0-b742-3fb11e72175f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205629,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              ["free(p);\np = NULL;     // you may also use 0 instead of NULL"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "cb874de1-d2c5-454f-b556-f96a40d76bf8": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205628,
          "id": "cb874de1-d2c5-454f-b556-f96a40d76bf8",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205628,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["obtained by using the "],
              ["&", [["c"]]],
              [" operator on a variable, or"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "cd30091e-c11a-46f0-89ed-14d5f17ad0d4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205627,
          "id": "cd30091e-c11a-46f0-89ed-14d5f17ad0d4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205627,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Please note that you can only call "],
              ["free()", [["c"]]],
              [" on pointers that have directly been returned from the "],
              ["malloc()", [["c"]]],
              [", "],
              ["calloc()", [["c"]]],
              [", "],
              ["realloc()", [["c"]]],
              [" and "],
              ["aligned_alloc()", [["c"]]],
              [
                " functions, or where documentation tells you the memory has been allocated that way (functions like "
              ],
              ["strdup ()", [["c"]]],
              [" are notable examples). Freeing a pointer that is,"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "d21fa769-a8be-4097-a3df-db981854ce71": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205625,
          "id": "d21fa769-a8be-4097-a3df-db981854ce71",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205625,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "int *p = malloc(10 * sizeof *p); /* allocation of memory */\nif (p == NULL) \n{\n    perror(\"malloc failed\");\n    return -1;\n}\n\nfree(p); /* release of memory */\n/* note that after free(p), even using the *value* of the pointer p\n   has undefined behavior, until a new value is stored into it. */\n\n/* reusing/re-purposing the pointer itself */\nint i = 42;\np = &i; /* This is valid, has defined behaviour */"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "d8722f7c-de00-4b5a-b758-c1152d76fc24": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "d8c2838c-b650-436c-b605-6a03a7f0c726",
            "d21fa769-a8be-4097-a3df-db981854ce71",
            "e7c65b4d-c3d4-42ab-ae53-418f611b2a41",
            "cd30091e-c11a-46f0-89ed-14d5f17ad0d4",
            "cb874de1-d2c5-454f-b556-f96a40d76bf8",
            "30536ba6-917f-41a7-82d5-7197950c778c",
            "8df5104e-684f-42c9-831e-ef75d5009140",
            "7764f3d4-3a83-4485-a3fc-b559b4ca04ef",
            "57740c15-bf68-4374-915c-5658d0686b51",
            "0919b4ef-1243-46b0-952e-2e40c5c59cdd",
            "2aeb7afa-098c-4ffa-9b5c-03b0bf1093c8",
            "3f905df5-f630-4e12-8206-11a46f3afa8f",
            "9fa399de-31fe-48a0-b742-3fb11e72175f",
            "2eddb5ee-1e67-42f2-ad6f-b13ed5f424c3",
            "7f6f4972-7d41-4880-96ac-03f95aa63f45",
            "e2568f32-7178-4b48-9739-e9e7a554a85a",
            "5f8445ec-fe2e-402a-84cc-b399ce1143ed",
            "5b4b4798-d0c6-4ee3-853e-f7f87dd70764",
            "8bc9d277-38fa-4e05-b18c-1412a8238fda",
            "6458ab47-ee11-4985-85e0-7af5c8137543"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205632,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205632,
          "parent_id": "1e14553b-8aea-44fb-a0fe-fbc893ff529a",
          "parent_table": "block",
          "properties": {
            "title": [["Freeing Memory"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 7
        }
      },
      "d8c2838c-b650-436c-b605-6a03a7f0c726": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205625,
          "id": "d8c2838c-b650-436c-b605-6a03a7f0c726",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205625,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It is possible to release dynamically allocated memory by calling "
              ],
              ["free()", [["a", "http://linux.die.net/man/3/free"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "e2568f32-7178-4b48-9739-e9e7a554a85a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205630,
          "id": "e2568f32-7178-4b48-9739-e9e7a554a85a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205630,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Without setting pointer to "],
              ["NULL", [["c"]]],
              [
                " we have dangling pointer. The program will very likely still crash, but later, because the memory to which the pointer points will silently be corrupted. Such bugs are difficult to trace because they can result in a call stack that completely unrelated to the initial problem."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "e7c65b4d-c3d4-42ab-ae53-418f611b2a41": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551936205627,
          "id": "e7c65b4d-c3d4-42ab-ae53-418f611b2a41",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551936205627,
          "parent_id": "d8722f7c-de00-4b5a-b758-c1152d76fc24",
          "parent_table": "block",
          "properties": {
            "title": [
              ["The memory pointed to by "],
              ["p", [["c"]]],
              [
                " is reclaimed (either by the libc implementation or by the underlying OS) after the call to "
              ],
              ["free()", [["c"]]],
              [", so accessing that freed memory block via "],
              ["p", [["c"]]],
              [" will lead to "],
              [
                "undefined behavior",
                [
                  [
                    "a",
                    "http://stackoverflow.com/documentation/c/364/undefined-behavior#t=201607290847035891683"
                  ]
                ]
              ],
              [
                ". Pointers that reference memory elements that have been freed are commonly called "
              ],
              [
                "dangling pointers",
                [["a", "https://en.wikipedia.org/wiki/Dangling_pointer"]]
              ],
              [
                ", and present a security risk. Furthermore, the C standard states that even "
              ],
              [
                "accessing the value",
                [
                  [
                    "a",
                    "http://stackoverflow.com/documentation/c/364/undefined-behavior/2775/read-value-of-pointer-that-was-freed#t=201608050732042665317"
                  ]
                ]
              ],
              [
                " of a dangling pointer has undefined behavior. Note that the pointer "
              ],
              ["p", [["c"]]],
              [" itself can be re-purposed as shown above."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
