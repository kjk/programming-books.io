2472 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "47c59829-31af-495b-a690-33a4e45ffa18"
      },
      "version": -1
    }
  ]
}
Response:+2220
{
  "recordMap": {
    "block": {
      "47c59829-31af-495b-a690-33a4e45ffa18": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "50797156-f816-45e2-996c-12b2e46035fa",
            "71119cf3-7a44-47db-b8e5-a99edaa6ab1d",
            "8ce3ec87-b963-473c-aec3-2e65e08da83b",
            "e5c4d61e-0e8c-4e99-a395-fba34a947d7d",
            "1bee40e2-66e6-43fb-bc12-07df5e66119f",
            "3507e9ea-a9aa-4679-927c-017858f856f4",
            "c0ae7baf-988f-4720-88ab-4e1a2e3bcf49",
            "97b746d0-763a-43a9-9694-71f56c096d88",
            "438ccdbf-abd2-4a8d-816a-674b901c5ff7",
            "e7a7ed6c-df35-4ddc-80b3-c226d06d0af4",
            "3486552b-6cdb-4a63-bb92-6762e37912a4",
            "5e1fdb2f-2538-4c69-8d37-973035c7966f",
            "0c817ce2-4065-4a3a-95a5-d02cfa4f3f6c",
            "89483d4e-4421-4510-91e3-a0330fb7bfc7",
            "e2d0a749-4481-4fec-bde5-8a5bcc31448a",
            "d4478d42-def1-466e-be7a-a955f2185556",
            "214d3f70-ddeb-4aeb-b971-800250807287",
            "2c15a6d7-26c9-407f-be9a-988fae54698c",
            "18b0eafa-0752-4efb-8cf9-860572921391",
            "a7772d97-259f-422e-836d-b3c61998b1da"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270703,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270703,
          "parent_id": "d4a53a79-3ec2-426e-ac50-24d51d19d403",
          "parent_table": "block",
          "properties": {
            "title": [["Pass a 2D-array to a function"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      }
    }
  }
}
38538 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "47c59829-31af-495b-a690-33a4e45ffa18"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+38278
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0c817ce2-4065-4a3a-95a5-d02cfa4f3f6c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "0c817ce2-4065-4a3a-95a5-d02cfa4f3f6c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It becomes a bit clearer if we intentionally make an error in the call of the function by changing the declaration to "
              ],
              ["void fun1(int **a, int rows, int cols)", [["c"]]],
              [
                ". That causes the compiler to complain in a different, but equally nebulous way"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "18b0eafa-0752-4efb-8cf9-860572921391": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270703,
          "id": "18b0eafa-0752-4efb-8cf9-860572921391",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270703,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This looks awkward to some people, who hold the opinion that the order of variables should not matter. That is not much of a problem, just declare a pointer and let it point to the array."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "1bee40e2-66e6-43fb-bc12-07df5e66119f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270701,
          "id": "1bee40e2-66e6-43fb-bc12-07df5e66119f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270701,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The reasons for this are twofold: the main problem is that arrays are not pointers and the second inconvenience is the so called "
              ],
              ["pointer decay", [["i"]]],
              [
                ". Passing an array to a function will decay the array to a pointer to the first element of the arrayâ€“in the case of a 2d array it decays to a pointer to the first row because in C arrays are sorted row-first."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "214d3f70-ddeb-4aeb-b971-800250807287": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270703,
          "id": "214d3f70-ddeb-4aeb-b971-800250807287",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270703,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Or we do it right and pass the needed information to "],
              ["fun1", [["c"]]],
              [". To do so wee need to rearrange the arguments to "],
              ["fun1", [["c"]]],
              [
                ": the size of the column must come before the declaration of the array. To keep it more readable the variable holding the number of rows has changed its place, too, and is first now."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "2c15a6d7-26c9-407f-be9a-988fae54698c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270703,
          "id": "2c15a6d7-26c9-407f-be9a-988fae54698c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270703,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n\n/* ALL CHECKS OMMITTED!*/\n\nvoid fun1(int rows, int cols, int (*)[]);\n\nint main(int argc, char **argv)\n{\n  int rows, cols, i, j;\n\n  if(argc != 3){\n     fprintf(stderr,\"Usage: %s rows cols\\n\",argv[0]);\n     exit(EXIT_FAILURE);\n  }\n\n  rows = atoi(argv[1]);\n  cols = atoi(argv[2]);\n\n  int array_2D[rows][cols];\n  printf(\"Make array with %d rows and %d columns\\n\", rows, cols);\n  for (i = 0; i < rows; i++) {\n    for (j = 0; j < cols; j++) {\n      array_2D[i][j] = i * cols + j;\n      printf(\"array[%d][%d]=%d\\n\", i, j, array_2D[i][j]);\n    }\n  }\n\n  fun1(rows, cols, array_2D);\n\n  exit(EXIT_SUCCESS);\n}\n\nvoid fun1(int rows, int cols, int (*a)[cols])\n{\n  int i, j;\n  int n, m;\n\n  n = rows;\n  m = cols;\n\n  printf(\"\\nPrint array with %d rows and %d columns\\n\", rows, cols);\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"array[%d][%d]=%d\\n\", i, j, a[i][j]);\n    }\n  }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "3486552b-6cdb-4a63-bb92-6762e37912a4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "3486552b-6cdb-4a63-bb92-6762e37912a4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [["This does not work, the compiler complains:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "3507e9ea-a9aa-4679-927c-017858f856f4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270701,
          "id": "3507e9ea-a9aa-4679-927c-017858f856f4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270701,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n\n#define ROWS 3\n#define COLS 2\n\nvoid fun1(int (*)[COLS], int, int);\n\nint main()\n{\n  int array_2D[ROWS][COLS] = { {1, 2}, {3, 4}, {5, 6} };\n  int n = ROWS;\n  int m = COLS;\n\n  fun1(array_2D, n, m);\n\n  return EXIT_SUCCESS;\n}\n\nvoid fun1(int (*a)[COLS], int n, int m)\n{\n  int i, j;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"array[%d][%d]=%d\\n\", i, j, a[i][j]);\n    }\n  }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "438ccdbf-abd2-4a8d-816a-674b901c5ff7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "438ccdbf-abd2-4a8d-816a-674b901c5ff7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The number of columns is predefined and hence fixed at compile time, but the predecessor to the current C-standard (that was ISO/IEC 9899:1999, current is ISO/IEC 9899:2011) implemented VLAs (TODO: link it) and although the current standard made it optional, almost all modern C-compilers support it (TODO: check if MS Visual Studio supports it now)."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "47c59829-31af-495b-a690-33a4e45ffa18": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "50797156-f816-45e2-996c-12b2e46035fa",
            "71119cf3-7a44-47db-b8e5-a99edaa6ab1d",
            "8ce3ec87-b963-473c-aec3-2e65e08da83b",
            "e5c4d61e-0e8c-4e99-a395-fba34a947d7d",
            "1bee40e2-66e6-43fb-bc12-07df5e66119f",
            "3507e9ea-a9aa-4679-927c-017858f856f4",
            "c0ae7baf-988f-4720-88ab-4e1a2e3bcf49",
            "97b746d0-763a-43a9-9694-71f56c096d88",
            "438ccdbf-abd2-4a8d-816a-674b901c5ff7",
            "e7a7ed6c-df35-4ddc-80b3-c226d06d0af4",
            "3486552b-6cdb-4a63-bb92-6762e37912a4",
            "5e1fdb2f-2538-4c69-8d37-973035c7966f",
            "0c817ce2-4065-4a3a-95a5-d02cfa4f3f6c",
            "89483d4e-4421-4510-91e3-a0330fb7bfc7",
            "e2d0a749-4481-4fec-bde5-8a5bcc31448a",
            "d4478d42-def1-466e-be7a-a955f2185556",
            "214d3f70-ddeb-4aeb-b971-800250807287",
            "2c15a6d7-26c9-407f-be9a-988fae54698c",
            "18b0eafa-0752-4efb-8cf9-860572921391",
            "a7772d97-259f-422e-836d-b3c61998b1da"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270703,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270703,
          "parent_id": "d4a53a79-3ec2-426e-ac50-24d51d19d403",
          "parent_table": "block",
          "properties": {
            "title": [["Pass a 2D-array to a function"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      },
      "50797156-f816-45e2-996c-12b2e46035fa": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270698,
          "id": "50797156-f816-45e2-996c-12b2e46035fa",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270698,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Passing a 2d array to a functions seems simple and obvious and we happily write:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5e1fdb2f-2538-4c69-8d37-973035c7966f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "5e1fdb2f-2538-4c69-8d37-973035c7966f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "$ gcc-4.9 -O3 -g3  -W -Wall -Wextra  -std=c99 passarr.c -o passarr\npassarr.c: In function â€˜fun1â€™:\npassarr.c:168:7: error: invalid use of array with unspecified bounds\n       printf(\"array[%d][%d]=%d\\n\", i, j, a[i][j]);"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "71119cf3-7a44-47db-b8e5-a99edaa6ab1d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270700,
          "id": "71119cf3-7a44-47db-b8e5-a99edaa6ab1d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270700,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n\n#define ROWS 3\n#define COLS 2\n\nvoid fun1(int **, int, int);\n\nint main()\n{\n  int array_2D[ROWS][COLS] = { {1, 2}, {3, 4}, {5, 6} };\n  int n = ROWS;\n  int m = COLS;\n\n  fun1(array_2D, n, m);\n\n  return EXIT_SUCCESS;\n}\n\nvoid fun1(int **a, int n, int m)\n{\n  int i, j;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"array[%d][%d]=%d\\n\", i, j, a[i][j]);\n    }\n  }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "70354277-e3ea-4870-b354-e4ccea2f776f",
            "c88395f2-cfa3-4917-9b1d-77ad5ef5da03",
            "033ae011-39fb-4a86-9a89-54971c729ce8",
            "218cbf42-b3ba-4b2a-bdab-e522009865b7",
            "af9762cd-d032-4a74-a2b8-b8413c2edefb",
            "c613c743-331e-4cb0-8344-4963dbf825f3",
            "eff989d8-e4d4-4f97-952e-6c58e46dfb73",
            "44b99e73-a03b-41cc-b542-2de7e97ca081",
            "68e74303-cec6-4c9d-a46e-83274bc84bf4",
            "6ae1f6f3-0a87-4bec-b9ca-2ef03a059422",
            "f3c54523-5f2c-4d48-a50e-cd230eee34ae",
            "9b4c9f4c-5f47-45ba-86a9-461b3aaa1198",
            "b81cd45f-aa26-4f19-8238-7b90dd64a769",
            "fb6df079-bba6-489e-ac6a-3ea61d24e7af",
            "262dadd4-3655-45db-88b6-06e23e8e3a7b",
            "9dc6ce73-bdfa-4d4d-b5a1-db84c9227865",
            "f4db91d9-e502-4cf2-b8cc-184cb2d19911",
            "1e14553b-8aea-44fb-a0fe-fbc893ff529a",
            "fceea03f-c65b-4f89-8e06-817d0fcf3348",
            "fcadea6a-df33-4395-8abc-4c71f5599a2d",
            "690adfe7-1f94-4d22-83ad-47d3971f3325",
            "fb1c49da-f858-420f-804f-317776d975e9",
            "fe373c8a-dc77-4fbb-9ceb-fe91a58a5732",
            "92dc051b-09a3-4930-9dda-0fb318b57610",
            "9104b65f-88ef-4b77-89d3-248fa4934ff0",
            "f3ac34eb-110d-486b-9e30-6bd30082bba0",
            "ce0d7992-bb1e-4e62-ab26-2f99a9a2f78d",
            "b76c53dc-9124-4a10-9817-490e3504e93e",
            "042e8ddf-c9c4-4b73-8432-0a569a4f0a8a",
            "3615ca16-3d26-4800-98f4-4da1a5c4bef4",
            "873798b2-99a2-4a3f-9d7c-e6e95e01396f",
            "f9df1d91-a33b-4691-8612-45ec5ebf45e8",
            "218166d2-ae4c-4856-827d-6080353375ec",
            "d3fd04e6-166e-44c4-8df3-6eb488aec6fb",
            "476e4bcf-2254-4ffd-82b2-b3dcbd9fdf01",
            "70e63802-c8af-4573-9d30-82507679f19d",
            "2042e9e8-170e-4e88-a3c5-041aec6ba49b",
            "a25d942b-f182-4a59-8930-268903693536",
            "bbc16be7-a6da-4b3f-9e55-a68f0bcdb261",
            "ae1ce0ef-9ced-4caa-9c8d-f14041e087b0",
            "56054c40-d551-420f-9fd8-a44a9550fd1d",
            "a32e93b8-a175-40b5-b72f-e58c30d058bb",
            "86031ef1-ffce-4374-a32d-1f1886dc6593",
            "b0240e66-8da1-4190-bbe5-f47d5b561ed2",
            "898403c6-8861-4eca-b6cf-2fee9068ecce",
            "5e44bd54-3362-4b1a-934b-acecce2afc7f",
            "5c0a653d-4ce1-4234-bf16-7d29dc2f993e",
            "ae726a5e-8d12-41b2-9bd8-209da2cca404",
            "c45bb8ec-af6d-4f58-b094-cc6980d363e1",
            "f0f16c22-34d6-4125-8a87-63fdd135ef20",
            "5e4385c8-606f-406e-b1af-53b610c5bf4a",
            "e16223c3-400e-4968-bddc-3cc5edf4c5c0",
            "8ed525aa-8fab-4ee4-9fff-5b43085094dd",
            "f4f6d384-72dd-4d02-aa47-f083a22f6481",
            "d4a53a79-3ec2-426e-ac50-24d51d19d403",
            "52978246-4aff-47a0-915a-a90feded64cd",
            "19611889-e796-4311-ab76-561c41c4850a",
            "54f188ad-c5ec-49d7-8bf7-1c5c08e72d2e",
            "27ddd518-401c-43c0-bb68-381e630e5cfb",
            "109e287f-796b-4acd-8b1b-dae5f45129bd",
            "dab23b65-514a-455a-a0f6-c63668012233",
            "cb11a718-ba93-4278-a486-b649224f5923",
            "9d53db3a-6a86-4feb-bbea-f4bfb502ed5f",
            "af5ef860-337b-4d68-aa37-de9259c85852",
            "5ebf8b4e-135f-4d2e-8d6e-1f6b532dedb7"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551935474458,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571298480000,
          "parent_id": "1ad0beae-92aa-49e1-add1-7960b1db8484",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 106
        }
      },
      "89483d4e-4421-4510-91e3-a0330fb7bfc7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "89483d4e-4421-4510-91e3-a0330fb7bfc7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "$ gcc-4.9 -O3 -g3  -W -Wall -Wextra  -std=c99 passarr.c -o passarr\npassarr.c: In function â€˜mainâ€™:\npassarr.c:208:8: warning: passing argument 1 of â€˜fun1â€™ from incompatible pointer type\n   fun1(array_2D, rows, cols);\n        ^\npassarr.c:185:6: note: expected â€˜int **â€™ but argument is of type â€˜int (*)[(sizetype)(cols)]â€™\n void fun1(int **, int rows, int cols);"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "8ce3ec87-b963-473c-aec3-2e65e08da83b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270701,
          "id": "8ce3ec87-b963-473c-aec3-2e65e08da83b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270701,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "But the compiler, here GCC in version 4.9.4 , does not appreciate it well."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "97b746d0-763a-43a9-9694-71f56c096d88": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270701,
          "id": "97b746d0-763a-43a9-9694-71f56c096d88",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270701,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n\n#define ROWS 3\n#define COLS 2\n\nvoid fun1(int (*)[COLS], int);\n\nint main()\n{\n  int array_2D[ROWS][COLS] = { {1, 2}, {3, 4}, {5, 6} };\n  int rows = ROWS;\n\n  /* works here because array_2d is still in scope and still an array */\n  printf(\"MAIN: %zu\\n\",sizeof(array_2D)/sizeof(array_2D[0]));\n\n  fun1(array_2D, rows);\n\n  return EXIT_SUCCESS;\n}\n\nvoid fun1(int (*a)[COLS], int rows)\n{\n  int i, j;\n  int n, m;\n\n  n = rows;\n  /* Works, because that information is passed (as \"COLS\").\n     It is also redundant because that value is known at compile time (in \"COLS\"). */\n  m = (int) (sizeof(a[0])/sizeof(a[0][0]));\n \n  /* Does not work here because the \"decay\" in \"pointer decay\" is meant\n     literally--information is lost. */\n  printf(\"FUN1: %zu\\n\",sizeof(a)/sizeof(a[0]));\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"array[%d][%d]=%d\\n\", i, j, a[i][j]);\n    }\n  }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "a7772d97-259f-422e-836d-b3c61998b1da": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270703,
          "id": "a7772d97-259f-422e-836d-b3c61998b1da",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270703,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n\n/* ALL CHECKS OMMITTED!*/\n\nvoid fun1(int rows, int cols, int **);\n\nint main(int argc, char **argv)\n{\n  int rows, cols, i, j;\n\n\n  if(argc != 3){\n     fprintf(stderr,\"Usage: %s rows cols\\n\",argv[0]);\n     exit(EXIT_FAILURE);\n  }\n\n  rows = atoi(argv[1]);\n  cols = atoi(argv[2]);\n\n  int array_2D[rows][cols];\n  printf(\"Make array with %d rows and %d columns\\n\", rows, cols);\n  for (i = 0; i < rows; i++) {\n    for (j = 0; j < cols; j++) {\n      array_2D[i][j] = i * cols + j;\n      printf(\"array[%d][%d]=%d\\n\", i, j, array_2D[i][j]);\n    }\n  }\n  // a \"rows\" number of pointers to \"int\". Again a VLA\n  int *a[rows];\n  // initialize them to point to the individual rows\n  for (i = 0; i < rows; i++) {\n      a[i] = array_2D[i];\n  }\n\n  fun1(rows, cols, a);\n\n  exit(EXIT_SUCCESS);\n}\n\nvoid fun1(int rows, int cols, int **a)\n{\n  int i, j;\n  int n, m;\n\n  n = rows;\n  m = cols;\n\n  printf(\"\\nPrint array with %d rows and %d columns\\n\", rows, cols);\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"array[%d][%d]=%d\\n\", i, j, a[i][j]);\n    }\n  }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "c0ae7baf-988f-4720-88ab-4e1a2e3bcf49": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270701,
          "id": "c0ae7baf-988f-4720-88ab-4e1a2e3bcf49",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270701,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              ["It "],
              ["is", [["i"]]],
              [
                " necessary to pass the number of rows, they cannot be computed."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "d4478d42-def1-466e-be7a-a955f2185556": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "d4478d42-def1-466e-be7a-a955f2185556",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n\n/* ALL CHECKS OMMITTED!*/\n\nvoid fun1(int (*)[], int rows, int cols);\n\nint main(int argc, char **argv)\n{\n  int rows, cols, i, j;\n\n  if(argc != 3){\n     fprintf(stderr,\"Usage: %s rows cols\\n\",argv[0]);\n     exit(EXIT_FAILURE);\n  }\n\n  rows = atoi(argv[1]);\n  cols = atoi(argv[2]);\n\n  int array_2D[rows][cols];\n  printf(\"Make array with %d rows and %d columns\\n\", rows, cols);\n  for (i = 0; i < rows; i++) {\n    for (j = 0; j < cols; j++) {\n      array_2D[i][j] = i * cols + j;\n      printf(\"array[%d][%d]=%d\\n\", i, j, array_2D[i][j]);\n    }\n  }\n\n  fun1(array_2D, rows, cols);\n\n  exit(EXIT_SUCCESS);\n}\n\nvoid fun1(int (*a)[], int rows, int cols)\n{\n  int i, j;\n  int n, m;\n\n  n = rows;\n  m = cols;\n\n  printf(\"\\nPrint array with %d rows and %d columns\\n\", rows, cols);\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"array[%d][%d]=%d\\n\", i, j, *( (*a) + (i * cols + j)));\n    }\n  }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "d4a53a79-3ec2-426e-ac50-24d51d19d403": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "211ccaec-f46e-43b6-aa22-fb9674e89f02",
            "47c59829-31af-495b-a690-33a4e45ffa18",
            "f280547a-e82f-4e90-80ff-d7fdb6ce4535"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937260000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "d4a53a79-3ec2-426e-ac50-24d51d19d403",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937500000,
          "parent_id": "84ae4145-718e-4b7b-8cb4-3cf10ee4db6a",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Pass 2D-arrays to functions"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 40
        }
      },
      "e2d0a749-4481-4fec-bde5-8a5bcc31448a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "e2d0a749-4481-4fec-bde5-8a5bcc31448a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "We can react in several ways, one of it is to ignore all of it and do some illegible pointer juggling:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "e5c4d61e-0e8c-4e99-a395-fba34a947d7d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270701,
          "id": "e5c4d61e-0e8c-4e99-a395-fba34a947d7d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270701,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "$ gcc-4.9 -O3 -g3  -W -Wall -Wextra  -std=c11 passarr.c -o passarr\npassarr.c: In function â€˜mainâ€™:\npassarr.c:16:8: warning: passing argument 1 of â€˜fun1â€™ from incompatible pointer type\n   fun1(array_2D, n, m);\n        ^\npassarr.c:8:6: note: expected â€˜int **â€™ but argument is of type â€˜int (*)[2]â€™\n void fun1(int **, int, int);"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "e7a7ed6c-df35-4ddc-80b3-c226d06d0af4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551937270702,
          "id": "e7a7ed6c-df35-4ddc-80b3-c226d06d0af4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551937270702,
          "parent_id": "47c59829-31af-495b-a690-33a4e45ffa18",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "#include <stdio.h>\n#include <stdlib.h>\n\n/* ALL CHECKS OMMITTED!*/\n\nvoid fun1(int (*)[], int rows, int cols);\n\nint main(int argc, char **argv)\n{\n  int rows, cols, i, j;\n\n  if(argc != 3){\n     fprintf(stderr,\"Usage: %s rows cols\\n\",argv[0]);\n     exit(EXIT_FAILURE);\n  }\n\n  rows = atoi(argv[1]);\n  cols = atoi(argv[2]);\n\n  int array_2D[rows][cols];\n\n  for (i = 0; i < rows; i++) {\n    for (j = 0; j < cols; j++) {\n      array_2D[i][j] = (i + 1) * (j + 1);\n      printf(\"array[%d][%d]=%d\\n\", i, j, array_2D[i][j]);\n    }\n  }\n\n  fun1(array_2D, rows, cols);\n\n  exit(EXIT_SUCCESS);\n}\n\nvoid fun1(int (*a)[], int rows, int cols)\n{\n  int i, j;\n  int n, m;\n\n  n = rows;\n  /* Does not work anymore, no sizes are specified anymore\n  m = (int) (sizeof(a[0])/sizeof(a[0][0])); */\n  m = cols;\n\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"array[%d][%d]=%d\\n\", i, j, a[i][j]);\n    }\n  }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
