2475 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "278c23a5-0168-477a-b844-aee556976c8b"
      },
      "version": -1
    }
  ]
}
Response:+2223
{
  "recordMap": {
    "block": {
      "278c23a5-0168-477a-b844-aee556976c8b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4d0f339e-41f8-4114-81ef-a8899910b4fe",
            "228632a0-faa1-4814-86a3-564493387d62",
            "f506e2f3-5706-4faa-a548-33c7327d3679",
            "901b796d-905d-4cf1-bd22-c4e06f7ad23f",
            "8b56e6e6-fa6e-4681-b833-fcb0fbfc7e25",
            "732228c3-3568-4e4b-a0de-b6ad8a97a144",
            "b8a1357c-2844-443a-8f06-4000619f327d",
            "c2a1bcf6-616a-4e73-996e-08609f6b08fa",
            "b1bf866a-b039-4937-a73d-f82c614e275f",
            "7458bf21-edf7-45bb-9f41-c9a15ab5b438",
            "e783d78f-4372-4adc-b53d-d7d5608b0c74",
            "d8ffb110-1e84-4b62-a5df-7a402b777150",
            "23bdf8cf-2f58-4094-ab81-cbe57176bb1b",
            "8b9f07ac-6d26-43cd-acd8-a8810c8eade9",
            "4e4797ac-117e-4880-9659-a4f1100439f0",
            "2e1c7d52-5d1f-4a4b-a58b-bd0405189fc4",
            "19d9a494-ee48-4056-b5fb-02fb6eafe341",
            "7eda1e24-fe48-4d04-9bdf-3aaaecd7ead2",
            "17a42ef5-e44b-474f-b047-2532803572e7",
            "fa1d43a3-c6cb-4667-a6da-91061e3c1d6e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514647,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "278c23a5-0168-477a-b844-aee556976c8b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595140500000,
          "parent_id": "07b6aee1-86e2-4b06-9533-93f2f24dd419",
          "parent_table": "block",
          "properties": {
            "title": [["All Pair Shortest Path Algorithm"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 6
        }
      }
    }
  }
}
42015 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "278c23a5-0168-477a-b844-aee556976c8b"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+41755
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "039ec42e-e62f-412e-983e-6d5b6b201b60": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "91fee7b5-614e-44ac-9c69-2c43b78c7706",
            "1b2f4c66-4ea6-4d7b-a266-531792730534",
            "6eb693f8-f70b-45c9-a6db-644dea3bc144",
            "ee1a4539-5889-4a51-bc45-1ed4ce501170",
            "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
            "0483f45c-fa31-493e-bd1b-b9e924123210",
            "e737c451-edb2-4ee1-8b50-4891f751f559",
            "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b",
            "c8277fc4-6841-459e-81f4-c90a99fd83fa",
            "adfec1cf-4941-4483-b98d-9550de7e3916",
            "2bfd570f-dc07-4daa-b3b2-a794ef12f08e",
            "a034d8c3-224b-46dc-bc26-d44b569e39e0",
            "8c1be630-50c9-4162-b355-a5d6917f9e65",
            "56228e72-edf0-4f14-b6c7-1d113093b22a",
            "2885c26f-5511-47a5-900d-5d725326f99d",
            "e800516e-b244-4000-89c7-0041f1acd148",
            "7c62ae2d-e334-4dc4-a641-184b79672747",
            "ec9d0bba-8ded-4256-866e-28adfde6676e",
            "f00ac53f-26f5-4356-bd05-744ca9c233b1",
            "07b6aee1-86e2-4b06-9533-93f2f24dd419",
            "3104f50a-b7e2-41fe-97d7-f6e02201ccb8",
            "aed1f400-b221-4067-80e6-2fda841c33f0",
            "a747cf00-d05a-4132-9b34-4cea62968a38",
            "0abdd157-bda8-4285-b8a7-5aa4dd7e132b",
            "e79c088d-5ede-4b22-b5dc-16273a672796",
            "721fb53c-f240-4ce6-aaaa-9f4be08c3460",
            "38ae0e5d-81ea-45b2-b7f4-8eb197662514",
            "c06d75d6-1a6d-48da-8e09-4d63502dedee",
            "3cca89f6-4b6c-48b0-957b-2efc26b23041",
            "db10fdd2-ea0b-4236-ae14-94781b2f7586",
            "9bd5a67d-2c30-4b51-a6b7-b9eb3583b888",
            "29a89f00-863f-4084-8ec5-db4c455fc788",
            "2734ccd8-075a-412f-8976-e67dfd9416da",
            "a5ee9280-35d0-4aac-89a2-decbe44f483e",
            "790101e3-fd8c-47e3-bcc4-54b18dc2fd9a",
            "aa2725ad-e1d1-40ed-ab4f-0042fe8e222f",
            "7261d2a3-9d9d-43cb-9e3a-4b432a018d9e",
            "7e7202cf-172e-479e-b1d4-2842091d8b3e",
            "ee364118-8538-4817-87be-3e716db337cb",
            "4ee11beb-a38d-47e3-8227-7414b7e09239",
            "f82e52a5-bc15-4106-8c59-2d323c6aa2f1",
            "547abd24-965c-44ce-b5f0-e452aeea3821",
            "d33782ab-d4ee-4ba9-938d-2922e11247be",
            "0c0e3472-dac8-416a-833b-40ef5e725f54",
            "c677c530-6036-4f08-810c-5e2b963b6ded",
            "d1c46e3a-31cb-41e0-acf1-907b405548a3",
            "24e66a7f-c2cb-4c77-b424-5e08b603ee59",
            "15b863c2-28b5-4b31-9379-ff8091b43c28",
            "5eb1332d-741d-47f8-ad4c-da01f28ef2ed",
            "88259ac2-4526-4ea5-b9e9-d03f7dd06c8e",
            "0652a44d-8a63-47b5-b7cf-af85d0c3655a",
            "61f46cc6-d7e0-4aeb-ae8a-47f4eb52c2bc",
            "a3747844-afb9-4883-bbb2-bea5662e919d",
            "e567adff-577f-4fa6-849a-1a112f689048",
            "c96af0be-a3eb-4385-a674-0f83049a23fd",
            "1357e166-4a61-43ab-a4f0-d9cbd7ba53de",
            "e7f85180-91d1-4075-8feb-5b5f495422a9",
            "2a8a00f4-a540-41b4-87f7-465c42e6a071",
            "f11f3084-c84d-4f6e-91d0-8c55df0d8c59",
            "491070bf-06ff-4de8-bf7f-3e121c11c49f",
            "2a95e83b-1c1e-40d2-b8e0-8917aa02703e",
            "a30ef162-2edd-4b12-90d7-25d5049ed098",
            "eaba21c7-6ac1-482f-bdc2-9410e7140b3d",
            "1f7d7534-a522-4df6-a495-44f1c3e4179d",
            "924ef53c-fe52-4d0f-8233-1cbc0f7eb8f7",
            "d9ba24fd-508b-4ddc-9d8c-15467083ba43"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928257468,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571298780000,
          "parent_id": "d79ccaee-4168-4c48-920b-7005c81675ea",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            },
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Algorithms"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 135
        }
      },
      "07b6aee1-86e2-4b06-9533-93f2f24dd419": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "8d6a3366-2ae1-43fa-a7d9-1a22031e51a9",
            "278c23a5-0168-477a-b844-aee556976c8b"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928500000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "07b6aee1-86e2-4b06-9533-93f2f24dd419",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928680000,
          "parent_id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Floyd-Warshall Algorithm"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 38
        }
      },
      "17a42ef5-e44b-474f-b047-2532803572e7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514647,
          "id": "17a42ef5-e44b-474f-b047-2532803572e7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514647,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [["Complexity:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "19d9a494-ee48-4056-b5fb-02fb6eafe341": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514646,
          "id": "19d9a494-ee48-4056-b5fb-02fb6eafe341",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514646,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [["Finding Negative Edge Cycle:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "228632a0-faa1-4814-86a3-564493387d62": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514638,
          "id": "228632a0-faa1-4814-86a3-564493387d62",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514638,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Let’s look at an example. We’re going to apply Floyd-Warshall’s algorithm on this graph:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "23bdf8cf-2f58-4094-ab81-cbe57176bb1b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514645,
          "id": "23bdf8cf-2f58-4094-ab81-cbe57176bb1b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514645,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Procedure Floyd-Warshall(Graph):\nfor k from 1 to V     // V denotes the number of vertex\n    for i from 1 to V\n       for j from 1 to V\n           if distance[i][j] > distance[i][k] + distance[k][j]\n               distance[i][j] := distance[i][k] + distance[k][j]\n               path[i][j] := path[k][j]\n           end if\n       end for\n    end for\nend for"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "278c23a5-0168-477a-b844-aee556976c8b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4d0f339e-41f8-4114-81ef-a8899910b4fe",
            "228632a0-faa1-4814-86a3-564493387d62",
            "f506e2f3-5706-4faa-a548-33c7327d3679",
            "901b796d-905d-4cf1-bd22-c4e06f7ad23f",
            "8b56e6e6-fa6e-4681-b833-fcb0fbfc7e25",
            "732228c3-3568-4e4b-a0de-b6ad8a97a144",
            "b8a1357c-2844-443a-8f06-4000619f327d",
            "c2a1bcf6-616a-4e73-996e-08609f6b08fa",
            "b1bf866a-b039-4937-a73d-f82c614e275f",
            "7458bf21-edf7-45bb-9f41-c9a15ab5b438",
            "e783d78f-4372-4adc-b53d-d7d5608b0c74",
            "d8ffb110-1e84-4b62-a5df-7a402b777150",
            "23bdf8cf-2f58-4094-ab81-cbe57176bb1b",
            "8b9f07ac-6d26-43cd-acd8-a8810c8eade9",
            "4e4797ac-117e-4880-9659-a4f1100439f0",
            "2e1c7d52-5d1f-4a4b-a58b-bd0405189fc4",
            "19d9a494-ee48-4056-b5fb-02fb6eafe341",
            "7eda1e24-fe48-4d04-9bdf-3aaaecd7ead2",
            "17a42ef5-e44b-474f-b047-2532803572e7",
            "fa1d43a3-c6cb-4667-a6da-91061e3c1d6e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514647,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "278c23a5-0168-477a-b844-aee556976c8b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595140500000,
          "parent_id": "07b6aee1-86e2-4b06-9533-93f2f24dd419",
          "parent_table": "block",
          "properties": {
            "title": [["All Pair Shortest Path Algorithm"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 6
        }
      },
      "2e1c7d52-5d1f-4a4b-a58b-bd0405189fc4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514646,
          "id": "2e1c7d52-5d1f-4a4b-a58b-bd0405189fc4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514646,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Procedure PrintPath(source, destination):\ns = Stack()\nS.push(destination)\nwhile Path[source][destination] is not equal to source\n    S.push(Path[source][destination])\n    destination := Path[source][destination]\nend while\nprint -> source\nwhile S is not empty\n    print -> S.pop\nend while"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "4d0f339e-41f8-4114-81ef-a8899910b4fe": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514637,
          "id": "4d0f339e-41f8-4114-81ef-a8899910b4fe",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514637,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Floyd-Warshall",
                [
                  [
                    "a",
                    "https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm"
                  ]
                ]
              ],
              [
                "’s algorithm is for finding shortest paths in a weighted graph with positive or negative edge weights. A single execution of the algorithm will find the lengths (summed weights) of the shortest paths between all pair of vertices. With a little variation, it can print the shortest path and can detect negative cycles in a graph. Floyd-Warshall is a Dynamic-Programming algorithm."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "4e4797ac-117e-4880-9659-a4f1100439f0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514646,
          "id": "4e4797ac-117e-4880-9659-a4f1100439f0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514646,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["To print the path, we’ll check the "],
              ["Path", [["b"]]],
              [" matrix. To print the path from "],
              ["u", [["b"]]],
              [" to "],
              ["v", [["b"]]],
              [", we’ll start from "],
              ["path[u][v]", [["b"]]],
              [". We’ll set keep changing "],
              ["v", [["b"]]],
              [" = "],
              ["path[u][v]", [["b"]]],
              [" until we find "],
              ["path[u][v]", [["b"]]],
              [" = "],
              ["u", [["b"]]],
              [" and push every values of "],
              ["path[u][v]", [["b"]]],
              [" in a stack. After finding "],
              ["u", [["b"]]],
              [", we’ll print "],
              ["u", [["b"]]],
              [
                " and start popping items from the stack and print them. This works because the "
              ],
              ["path", [["b"]]],
              [
                " matrix stores the value of the vertex which shares the shortest path to "
              ],
              ["v", [["b"]]],
              [" from any other node. The pseudo-code will be:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "732228c3-3568-4e4b-a0de-b6ad8a97a144": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514640,
          "id": "732228c3-3568-4e4b-a0de-b6ad8a97a144",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514640,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Since there is no loop, the diagonals are set "],
              ["N", [["b"]]],
              [". And the distance from the vertex itself is "],
              ["0", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "7458bf21-edf7-45bb-9f41-c9a15ab5b438": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514644,
          "id": "7458bf21-edf7-45bb-9f41-c9a15ab5b438",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514644,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["When "],
              ["k", [["b"]]],
              [" = "],
              ["1", [["b"]]],
              [", "],
              ["i", [["b"]]],
              [" = "],
              ["2", [["b"]]],
              [" and "],
              ["j", [["b"]]],
              [" = "],
              ["3", [["b"]]],
              [", "],
              ["distance[i][j]", [["b"]]],
              [" is "],
              ["-2", [["b"]]],
              [", which is not greater than "],
              ["distance[i][k]", [["b"]]],
              [" + "],
              ["distance[k][j]", [["b"]]],
              [" = "],
              ["-2", [["b"]]],
              [" + "],
              ["0", [["b"]]],
              [" = "],
              ["-2", [["b"]]],
              [". So it will remain unchanged. Again, when "],
              ["k", [["b"]]],
              [" = "],
              ["1", [["b"]]],
              [", "],
              ["i", [["b"]]],
              [" = "],
              ["4", [["b"]]],
              [" and "],
              ["j", [["b"]]],
              [" = "],
              ["2", [["b"]]],
              [", "],
              ["distance[i][j]", [["b"]]],
              [" = "],
              ["infinity", [["b"]]],
              [", which is greater than "],
              ["distance[i][k]", [["b"]]],
              [" + "],
              ["distance[k][j]", [["b"]]],
              [" = "],
              ["1", [["b"]]],
              [" + "],
              ["3", [["b"]]],
              [" = "],
              ["4", [["b"]]],
              [". So we put "],
              ["distance[i][j]", [["b"]]],
              [" = "],
              ["4", [["b"]]],
              [", and we put "],
              ["path[i][j]", [["b"]]],
              [" = "],
              ["path[k][j]", [["b"]]],
              [" = "],
              ["1", [["b"]]],
              [". What this means is, to go from "],
              ["vertex-4", [["b"]]],
              [" to "],
              ["vertex-2", [["b"]]],
              [", the path "],
              ["4->1->2", [["b"]]],
              [
                " is shorter than the existing path. This is how we populate both matrices. The calculation for each step is shown "
              ],
              ["here", [["a", "http://imgur.com/a/NU6Hg"]]],
              [". After making necessary changes, our matrices will look like:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "7eda1e24-fe48-4d04-9bdf-3aaaecd7ead2": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514646,
          "id": "7eda1e24-fe48-4d04-9bdf-3aaaecd7ead2",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514646,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "To find out if there is a negative edge cycle, we’ll need to check the main diagonal of "
              ],
              ["distance", [["b"]]],
              [
                " matrix. If any value on the diagonal is negative, that means there is a negative cycle in the graph."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "8b56e6e6-fa6e-4681-b833-fcb0fbfc7e25": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514640,
          "id": "8b56e6e6-fa6e-4681-b833-fcb0fbfc7e25",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514640,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|     |  1  |  2  |  3  |  4  |            |     |  1  |  2  |  3  |  4  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  1  |  0  |  3  |  6  |  15 |            |  1  |  N  |  1  |  1  |  1  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  2  | inf |  0  | -2  | inf |            |  2  |  N  |  N  |  2  |  N  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  3  | inf | inf |  0  |  2  |            |  3  |  N  |  N  |  N  |  3  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  4  |  1  | inf | inf |  0  |            |  4  |  4  |  N  |  N  |  N  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n            distance                                     path"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "8b9f07ac-6d26-43cd-acd8-a8810c8eade9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514645,
          "id": "8b9f07ac-6d26-43cd-acd8-a8810c8eade9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514645,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [["Printing the path:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "901b796d-905d-4cf1-bd22-c4e06f7ad23f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514640,
          "id": "901b796d-905d-4cf1-bd22-c4e06f7ad23f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514640,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["First thing we do is, we take two 2D matrices. These are "],
              [
                "adjacency matrices",
                [
                  [
                    "a",
                    "http://stackoverflow.com/documentation/algorithm/2299/graphs/23963/storing-graphs-adjacency-matrix"
                  ]
                ]
              ],
              [
                ". The size of the matrices is going to be the total number of vertices. For our graph, we will take "
              ],
              ["4 * 4", [["b"]]],
              [" matrices. The "],
              ["Distance Matrix", [["b"]]],
              [
                " is going to store the minimum distance found so far between two vertices. At first, for the edges, if there is an edge between "
              ],
              ["u-v", [["b"]]],
              [" and the distance/weight is "],
              ["w", [["b"]]],
              [", we’ll store: "],
              ["distance[u][v] = w", [["c"]]],
              [". For all the edges that doesn’t exist, we’re gonna put "],
              ["infinity", [["i"]]],
              [". The "],
              ["Path Matrix", [["b"]]],
              [
                " is for regenerating minimum distance path between two vertices. So initially, if there is a path between "
              ],
              ["u", [["b"]]],
              [" and "],
              ["v", [["b"]]],
              [", we’re going to put "],
              ["path[u][v] = u", [["c"]]],
              [". This means the best way to come to "],
              ["vertex-v", [["b"]]],
              [" from "],
              ["vertex-u", [["b"]]],
              [" is to use the edge that connects "],
              ["v", [["b"]]],
              [" with "],
              ["u", [["b"]]],
              [
                ". If there is no path between two vertices, we’re going to put "
              ],
              ["N", [["b"]]],
              [
                " there indicating there is no path available now. The two tables for our graph will look like:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "b1bf866a-b039-4937-a73d-f82c614e275f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514642,
          "id": "b1bf866a-b039-4937-a73d-f82c614e275f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514642,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["So what we’re basically checking is, "],
              [
                "for every pair of vertices, do we get a shorter distance by going through another vertex?",
                [["i"]]
              ],
              [" The total number of operations for our graph will be "],
              ["4 * 4 * 4", [["b"]]],
              [" = "],
              ["64", [["b"]]],
              [". That means we’re going to do this check "],
              ["64", [["b"]]],
              [" times. Let’s look at a few of them:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "b8a1357c-2844-443a-8f06-4000619f327d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514642,
          "id": "b8a1357c-2844-443a-8f06-4000619f327d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514642,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "To apply Floyd-Warshall algorithm, we’re going to select a middle vertex "
              ],
              ["k", [["b"]]],
              [". Then for each vertex "],
              ["i", [["b"]]],
              [", we’re going to check if we can go from "],
              ["i", [["b"]]],
              [" to "],
              ["k", [["b"]]],
              [" and then "],
              ["k", [["b"]]],
              [" to "],
              ["j", [["b"]]],
              [", where "],
              ["j", [["b"]]],
              [" is another vertex and minimize the cost of going from "],
              ["i", [["b"]]],
              [" to "],
              ["j", [["b"]]],
              [". If the current "],
              ["distance[i][j]", [["b"]]],
              [" is greater than "],
              ["distance[i][k]", [["b"]]],
              [" + "],
              ["distance[k][j]", [["b"]]],
              [", we’re going to put "],
              ["distance[i][j]", [["b"]]],
              [" equals to the summation of those two distances. And the "],
              ["path[i][j]", [["b"]]],
              [" will be set to "],
              ["path[k][j]", [["b"]]],
              [", as it is better to go from "],
              ["i", [["b"]]],
              [" to "],
              ["k", [["b"]]],
              [", and then "],
              ["k", [["b"]]],
              [" to "],
              ["j", [["b"]]],
              [". All the vertices will be selected as "],
              ["k", [["b"]]],
              [". We’ll have 3 nested loops: for "],
              ["k", [["b"]]],
              [" going from 1 to 4, "],
              ["i", [["b"]]],
              [" going from 1 to 4 and "],
              ["j", [["b"]]],
              [" going from 1 to 4. We’re going check:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "c2a1bcf6-616a-4e73-996e-08609f6b08fa": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514642,
          "id": "c2a1bcf6-616a-4e73-996e-08609f6b08fa",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514642,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "if distance[i][j] > distance[i][k] + distance[k][j]\n    distance[i][j] := distance[i][k] + distance[k][j]\n    path[i][j] := path[k][j]\nend if"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "d8ffb110-1e84-4b62-a5df-7a402b777150": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514645,
          "id": "d8ffb110-1e84-4b62-a5df-7a402b777150",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514645,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This is our shortest distance matrix. For example, the shortest distance from "
              ],
              ["1", [["b"]]],
              [" to "],
              ["4", [["b"]]],
              [" is "],
              ["3", [["b"]]],
              [" and the shortest distance between "],
              ["4", [["b"]]],
              [" to "],
              ["3", [["b"]]],
              [" is "],
              ["2", [["b"]]],
              [". Our pseudo-code will be:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "e783d78f-4372-4adc-b53d-d7d5608b0c74": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514644,
          "id": "e783d78f-4372-4adc-b53d-d7d5608b0c74",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514644,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|     |  1  |  2  |  3  |  4  |            |     |  1  |  2  |  3  |  4  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  1  |  0  |  3  |  1  |  3  |            |  1  |  N  |  1  |  2  |  3  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  2  |  1  |  0  | -2  |  0  |            |  2  |  4  |  N  |  2  |  3  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  3  |  3  |  6  |  0  |  2  |            |  3  |  4  |  1  |  N  |  3  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n|  4  |  1  |  4  |  2  |  0  |            |  4  |  4  |  1  |  2  |  N  |\n+-----+-----+-----+-----+-----+            +-----+-----+-----+-----+-----+\n            distance                                     path"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "f506e2f3-5706-4faa-a548-33c7327d3679": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595140500000,
          "file_ids": ["720981bf-8e48-4762-a541-c1023903f125"],
          "format": {
            "block_aspect_ratio": 0.6081730769230769,
            "block_full_width": false,
            "block_height": 253,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 416,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/720981bf-8e48-4762-a541-c1023903f125/Untitled.png"
          },
          "id": "f506e2f3-5706-4faa-a548-33c7327d3679",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595140500000,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/720981bf-8e48-4762-a541-c1023903f125/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "fa1d43a3-c6cb-4667-a6da-91061e3c1d6e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928514647,
          "id": "fa1d43a3-c6cb-4667-a6da-91061e3c1d6e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928514647,
          "parent_id": "278c23a5-0168-477a-b844-aee556976c8b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["The complexity of Floyd-Warshall algorithm is "],
              ["O(V³)", [["b"]]],
              [" and the space complexity is: "],
              ["O(V²)", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      }
    },
    "space": {}
  }
}
