3081 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "7956c785-647f-4a9e-84be-b0c435b63abf"
      },
      "version": -1
    }
  ]
}
Response:+2829
{
  "recordMap": {
    "block": {
      "7956c785-647f-4a9e-84be-b0c435b63abf": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "a28cb6ab-33f1-418c-9a13-111743009b5e",
            "d99635ac-88bd-44a1-a8c5-10370c9b52f7",
            "00763389-02a3-4fa8-82c4-472e9d80b62d",
            "169715fb-0bf4-4ac1-8452-d8302ef17bcb",
            "39898fc1-4751-4c58-ba6c-9c1e7f70955b",
            "aa3723dd-a7ff-4ae3-becd-8b7d936d38a1",
            "b0a2d7d4-8d62-48cd-a449-c68171611077",
            "4ccf1cef-a223-448d-80c0-7d6abcd43cfc",
            "3e879e2a-514a-49e5-907d-cb3a62c985db",
            "1c10004c-08de-4f26-8c3d-8a57cdfbd1c4",
            "8c170c7a-08bf-43d0-9ea9-972428ff0c28",
            "67d39263-5481-4249-8da8-65f90d115ab3",
            "46916987-e2c1-4b3b-8552-02d5f70408ae",
            "cbd376ab-3953-42aa-9cb0-02dce1d1a0dd",
            "f8a0e0e0-4ca9-4484-925b-b52891256f92",
            "b418ccd7-2d1a-443d-b2de-9ab2828655a8",
            "feb096b4-287b-42f8-a048-d5195075038e",
            "c3c31bd5-6563-4548-a186-4b7f6ab1c665",
            "61270d3f-d5d6-4048-b761-cc7e2f256ac4",
            "96913a19-6c5c-4071-9ada-8db7ffcdafe1",
            "a2129a29-1b27-434a-8042-bbb9d3e4b68e",
            "325b16c5-2e4b-454e-a441-53c82bfc7361",
            "9b2dc1a6-3d10-4fdc-9b0f-95e375729e84",
            "13398a53-8b36-49a0-ae85-141c992fa37a",
            "41c6830c-757f-4626-993e-a701b31fd22a",
            "8e408cf3-3b78-49ee-a974-a8bb6b2b1e3b",
            "8fef74a6-4fd6-4e78-beed-48d8df622315",
            "00d0a35a-e27e-4bdc-9e2f-cb555b619d03",
            "079f04d0-cf28-4e53-8099-8794596648be",
            "ab3fff2f-e793-4c21-9820-012bcb103660",
            "02d3a24e-3274-4dab-8fd5-3ee6da5098a5",
            "4173b746-ff56-45eb-87c1-1ee4614f51a4"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082488,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595147160000,
          "parent_id": "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b",
          "parent_table": "block",
          "properties": {
            "title": [["Huffman Coding"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 8
        }
      }
    }
  }
}
50945 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "7956c785-647f-4a9e-84be-b0c435b63abf"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+50685
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "00763389-02a3-4fa8-82c4-472e9d80b62d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082474,
          "id": "00763389-02a3-4fa8-82c4-472e9d80b62d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082474,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "+------------------------+-----+-----+-----+-----+-----+-----+\n|        Character       |  a  |  b  |  c  |  d  |  e  |  f  |\n+------------------------+-----+-----+-----+-----+-----+-----+\n|Frequency (in thousands)|  45 |  13 |  12 |  16 |  9  |  5  |\n+------------------------+-----+-----+-----+-----+-----+-----+"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "00d0a35a-e27e-4bdc-9e2f-cb555b619d03": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082487,
          "id": "00d0a35a-e27e-4bdc-9e2f-cb555b619d03",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082487,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Huffman coding looks at the occurrence of each character and stores it as a binary string in an optimal way. The idea is to assign variable-length codes to input input characters, length of the assigned codes are based on the frequencies of corresponding characters. We create a binary tree and operate on it in bottom-up manner so that the least two frequent characters are as far as possible from the root. In this way, the most frequent character gets the smallest code and the least frequent character gets the largest code."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "02d3a24e-3274-4dab-8fd5-3ee6da5098a5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082488,
          "id": "02d3a24e-3274-4dab-8fd5-3ee6da5098a5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082488,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Huffman Coding",
                [["a", "https://en.wikipedia.org/wiki/Huffman_coding"]]
              ],
              [" - Wikipedia"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "039ec42e-e62f-412e-983e-6d5b6b201b60": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "91fee7b5-614e-44ac-9c69-2c43b78c7706",
            "1b2f4c66-4ea6-4d7b-a266-531792730534",
            "6eb693f8-f70b-45c9-a6db-644dea3bc144",
            "ee1a4539-5889-4a51-bc45-1ed4ce501170",
            "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
            "0483f45c-fa31-493e-bd1b-b9e924123210",
            "e737c451-edb2-4ee1-8b50-4891f751f559",
            "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b",
            "c8277fc4-6841-459e-81f4-c90a99fd83fa",
            "adfec1cf-4941-4483-b98d-9550de7e3916",
            "2bfd570f-dc07-4daa-b3b2-a794ef12f08e",
            "a034d8c3-224b-46dc-bc26-d44b569e39e0",
            "8c1be630-50c9-4162-b355-a5d6917f9e65",
            "56228e72-edf0-4f14-b6c7-1d113093b22a",
            "2885c26f-5511-47a5-900d-5d725326f99d",
            "e800516e-b244-4000-89c7-0041f1acd148",
            "7c62ae2d-e334-4dc4-a641-184b79672747",
            "ec9d0bba-8ded-4256-866e-28adfde6676e",
            "f00ac53f-26f5-4356-bd05-744ca9c233b1",
            "07b6aee1-86e2-4b06-9533-93f2f24dd419",
            "3104f50a-b7e2-41fe-97d7-f6e02201ccb8",
            "aed1f400-b221-4067-80e6-2fda841c33f0",
            "a747cf00-d05a-4132-9b34-4cea62968a38",
            "0abdd157-bda8-4285-b8a7-5aa4dd7e132b",
            "e79c088d-5ede-4b22-b5dc-16273a672796",
            "721fb53c-f240-4ce6-aaaa-9f4be08c3460",
            "38ae0e5d-81ea-45b2-b7f4-8eb197662514",
            "c06d75d6-1a6d-48da-8e09-4d63502dedee",
            "3cca89f6-4b6c-48b0-957b-2efc26b23041",
            "db10fdd2-ea0b-4236-ae14-94781b2f7586",
            "9bd5a67d-2c30-4b51-a6b7-b9eb3583b888",
            "29a89f00-863f-4084-8ec5-db4c455fc788",
            "2734ccd8-075a-412f-8976-e67dfd9416da",
            "a5ee9280-35d0-4aac-89a2-decbe44f483e",
            "790101e3-fd8c-47e3-bcc4-54b18dc2fd9a",
            "aa2725ad-e1d1-40ed-ab4f-0042fe8e222f",
            "7261d2a3-9d9d-43cb-9e3a-4b432a018d9e",
            "7e7202cf-172e-479e-b1d4-2842091d8b3e",
            "ee364118-8538-4817-87be-3e716db337cb",
            "4ee11beb-a38d-47e3-8227-7414b7e09239",
            "f82e52a5-bc15-4106-8c59-2d323c6aa2f1",
            "547abd24-965c-44ce-b5f0-e452aeea3821",
            "d33782ab-d4ee-4ba9-938d-2922e11247be",
            "0c0e3472-dac8-416a-833b-40ef5e725f54",
            "c677c530-6036-4f08-810c-5e2b963b6ded",
            "d1c46e3a-31cb-41e0-acf1-907b405548a3",
            "24e66a7f-c2cb-4c77-b424-5e08b603ee59",
            "15b863c2-28b5-4b31-9379-ff8091b43c28",
            "5eb1332d-741d-47f8-ad4c-da01f28ef2ed",
            "88259ac2-4526-4ea5-b9e9-d03f7dd06c8e",
            "0652a44d-8a63-47b5-b7cf-af85d0c3655a",
            "61f46cc6-d7e0-4aeb-ae8a-47f4eb52c2bc",
            "a3747844-afb9-4883-bbb2-bea5662e919d",
            "e567adff-577f-4fa6-849a-1a112f689048",
            "c96af0be-a3eb-4385-a674-0f83049a23fd",
            "1357e166-4a61-43ab-a4f0-d9cbd7ba53de",
            "e7f85180-91d1-4075-8feb-5b5f495422a9",
            "2a8a00f4-a540-41b4-87f7-465c42e6a071",
            "f11f3084-c84d-4f6e-91d0-8c55df0d8c59",
            "491070bf-06ff-4de8-bf7f-3e121c11c49f",
            "2a95e83b-1c1e-40d2-b8e0-8917aa02703e",
            "a30ef162-2edd-4b12-90d7-25d5049ed098",
            "eaba21c7-6ac1-482f-bdc2-9410e7140b3d",
            "1f7d7534-a522-4df6-a495-44f1c3e4179d",
            "924ef53c-fe52-4d0f-8233-1cbc0f7eb8f7",
            "d9ba24fd-508b-4ddc-9d8c-15467083ba43"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928257468,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571298780000,
          "parent_id": "d79ccaee-4168-4c48-920b-7005c81675ea",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            },
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Algorithms"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 135
        }
      },
      "079f04d0-cf28-4e53-8099-8794596648be": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082487,
          "id": "079f04d0-cf28-4e53-8099-8794596648be",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082487,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["References:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "13398a53-8b36-49a0-ae85-141c992fa37a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082478,
          "id": "13398a53-8b36-49a0-ae85-141c992fa37a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082478,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["Decompression Technique:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "169715fb-0bf4-4ac1-8452-d8302ef17bcb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082475,
          "id": "169715fb-0bf4-4ac1-8452-d8302ef17bcb",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082475,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "We have many options for how to represent such a file of information. Here, we consider the problem of designing a "
              ],
              ["Binary Character Code", [["i"]]],
              [
                " in which each character is represented by a unique binary string, which we call a "
              ],
              ["codeword", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "1c10004c-08de-4f26-8c3d-8a57cdfbd1c4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082475,
          "id": "1c10004c-08de-4f26-8c3d-8a57cdfbd1c4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082475,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "One thing to remember, we consider here only codes in which no codeword is also a prefix of some other codeword. These are called "
              ],
              ["prefix codes.", [["i"]]],
              [" For variable-length coding, we code the 3-character file "],
              ["abc", [["i"]]],
              [
                " as 0.101.100 = 0101100, where “.” denotes the concatenation."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "325b16c5-2e4b-454e-a441-53c82bfc7361": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "325b16c5-2e4b-454e-a441-53c82bfc7361",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Although linear-time given sorted input, in general cases of arbitrary input, using this algorithm requires pre-sorting. Thus, since sorting takes "
              ],
              ["O(nlogn)", [["b"]]],
              [" time in general cases, both methods have same complexity."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "39898fc1-4751-4c58-ba6c-9c1e7f70955b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595147160000,
          "file_ids": ["3c9034b0-999f-4047-ba5e-99de88815980"],
          "format": {
            "block_aspect_ratio": 0.43888242142025613,
            "block_full_width": false,
            "block_page_width": true,
            "block_preserve_scale": true,
            "block_width": 859,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3c9034b0-999f-4047-ba5e-99de88815980/Untitled.png"
          },
          "id": "39898fc1-4751-4c58-ba6c-9c1e7f70955b",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595147160000,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3c9034b0-999f-4047-ba5e-99de88815980/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "3e879e2a-514a-49e5-907d-cb3a62c985db": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082475,
          "id": "3e879e2a-514a-49e5-907d-cb3a62c985db",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082475,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              ["A "],
              ["variable-length code", [["b"]]],
              [
                " can do considerably better than a fixed-length code, by giving frequent characters short codewords and infrequent characters long codewords. This code requires: (45 X 1 + 13 X 3 + 12 X 3 + 16 X 3 + 9 X 4 + 5 X 4) X 1000 = 224000 bits to represent the file, which saves approximately 25% of memory."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "4173b746-ff56-45eb-87c1-1ee4614f51a4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082488,
          "id": "4173b746-ff56-45eb-87c1-1ee4614f51a4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082488,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Discrete Mathematics and Its Applications - Kenneth H. Rosen"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      },
      "41c6830c-757f-4626-993e-a701b31fd22a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082478,
          "id": "41c6830c-757f-4626-993e-a701b31fd22a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082478,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The process of decompression is simply a matter of translating the stream of prefix codes to individual byte value, usually by traversing the Huffman tree node by node as each bit is read from the input stream. Reaching a leaf node necessarily terminates the search for that particular byte value. The leaf value represents the desired character. Usually the Huffman Tree is constructed using statistically adjusted data on each compression cycle, thus the reconstruction is fairly simple. Otherwise, the information to reconstruct the tree must be sent separately. The pseudo-code:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "46916987-e2c1-4b3b-8552-02d5f70408ae": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082476,
          "id": "46916987-e2c1-4b3b-8552-02d5f70408ae",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082476,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              ["The technique works by creating a "],
              ["binary tree", [["i"]]],
              [
                " of nodes. These can stored in a regular array, the size of which depends on the number of symbols, "
              ],
              ["n", [["b"]]],
              [". A node can either be a "],
              ["leaf node", [["i"]]],
              [" or an "],
              ["internal node", [["i"]]],
              [
                ". Initially all nodes are leaf nodes, which contain the symbol itself, its frequency and optionally, a link to its child nodes. As a convention, bit ‘0’ represents left child and bit ‘1’ represents right child. "
              ],
              ["Priority queue", [["i"]]],
              [
                " is used to store the nodes, which provides the node with lowest frequency when popped. The process is described below:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "4ccf1cef-a223-448d-80c0-7d6abcd43cfc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082475,
          "id": "4ccf1cef-a223-448d-80c0-7d6abcd43cfc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082475,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If we use a "],
              ["fixed-length code", [["b"]]],
              [
                ", we need three bits to represent 6 characters. This method requires 300,000 bits to code the entire file. Now the question is, can we do better?"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "61270d3f-d5d6-4048-b761-cc7e2f256ac4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595147160000,
          "file_ids": ["c2dc9b73-ed2c-4a71-9d65-f152f86751cb"],
          "format": {
            "block_aspect_ratio": 0.6895388076490439,
            "block_full_width": false,
            "block_page_width": true,
            "block_preserve_scale": true,
            "block_width": 889,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c2dc9b73-ed2c-4a71-9d65-f152f86751cb/Untitled.png"
          },
          "id": "61270d3f-d5d6-4048-b761-cc7e2f256ac4",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595147160000,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c2dc9b73-ed2c-4a71-9d65-f152f86751cb/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "67d39263-5481-4249-8da8-65f90d115ab3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082476,
          "id": "67d39263-5481-4249-8da8-65f90d115ab3",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082476,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["Compression Technique:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "7956c785-647f-4a9e-84be-b0c435b63abf": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "a28cb6ab-33f1-418c-9a13-111743009b5e",
            "d99635ac-88bd-44a1-a8c5-10370c9b52f7",
            "00763389-02a3-4fa8-82c4-472e9d80b62d",
            "169715fb-0bf4-4ac1-8452-d8302ef17bcb",
            "39898fc1-4751-4c58-ba6c-9c1e7f70955b",
            "aa3723dd-a7ff-4ae3-becd-8b7d936d38a1",
            "b0a2d7d4-8d62-48cd-a449-c68171611077",
            "4ccf1cef-a223-448d-80c0-7d6abcd43cfc",
            "3e879e2a-514a-49e5-907d-cb3a62c985db",
            "1c10004c-08de-4f26-8c3d-8a57cdfbd1c4",
            "8c170c7a-08bf-43d0-9ea9-972428ff0c28",
            "67d39263-5481-4249-8da8-65f90d115ab3",
            "46916987-e2c1-4b3b-8552-02d5f70408ae",
            "cbd376ab-3953-42aa-9cb0-02dce1d1a0dd",
            "f8a0e0e0-4ca9-4484-925b-b52891256f92",
            "b418ccd7-2d1a-443d-b2de-9ab2828655a8",
            "feb096b4-287b-42f8-a048-d5195075038e",
            "c3c31bd5-6563-4548-a186-4b7f6ab1c665",
            "61270d3f-d5d6-4048-b761-cc7e2f256ac4",
            "96913a19-6c5c-4071-9ada-8db7ffcdafe1",
            "a2129a29-1b27-434a-8042-bbb9d3e4b68e",
            "325b16c5-2e4b-454e-a441-53c82bfc7361",
            "9b2dc1a6-3d10-4fdc-9b0f-95e375729e84",
            "13398a53-8b36-49a0-ae85-141c992fa37a",
            "41c6830c-757f-4626-993e-a701b31fd22a",
            "8e408cf3-3b78-49ee-a974-a8bb6b2b1e3b",
            "8fef74a6-4fd6-4e78-beed-48d8df622315",
            "00d0a35a-e27e-4bdc-9e2f-cb555b619d03",
            "079f04d0-cf28-4e53-8099-8794596648be",
            "ab3fff2f-e793-4c21-9820-012bcb103660",
            "02d3a24e-3274-4dab-8fd5-3ee6da5098a5",
            "4173b746-ff56-45eb-87c1-1ee4614f51a4"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082488,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595147160000,
          "parent_id": "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b",
          "parent_table": "block",
          "properties": {
            "title": [["Huffman Coding"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 8
        }
      },
      "8c170c7a-08bf-43d0-9ea9-972428ff0c28": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082476,
          "id": "8c170c7a-08bf-43d0-9ea9-972428ff0c28",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082476,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Prefix codes are desirable because they simplify decoding. Since no codeword is a prefix of any other, the codeword that begins an encoded file is unambiguous. We can simply identify the initial codeword, translate it back to the original character, and repeat the decoding process on the remainder of the encoded file. For example, 001011101 parses uniquely as 0.0.101.1101, which decodes to "
              ],
              ["aabe", [["i"]]],
              [
                ". In short, all the combinations of binary representations are unique. Say for example, if one letter is denoted by 110, no other letter will be denoted by 1101 or 1100. This is because you might face confusion on whether to select 110 or to continue on concatenating the next bit and select that one."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "8e408cf3-3b78-49ee-a974-a8bb6b2b1e3b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082478,
          "id": "8e408cf3-3b78-49ee-a974-a8bb6b2b1e3b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082478,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Procedure HuffmanDecompression(root, S):   // root represents the root of Huffman Tree\nn := S.length                              // S refers to bit-stream to be decompressed\nfor i := 1 to n\n    current = root\n    while current.left != NULL and current.right != NULL\n        if S[i] is equal to '0'\n            current := current.left\n        else\n            current := current.right\n        endif\n        i := i+1\n    endwhile\n    print current.symbol\nendfor"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "8fef74a6-4fd6-4e78-beed-48d8df622315": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082478,
          "id": "8fef74a6-4fd6-4e78-beed-48d8df622315",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082478,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["Greedy Explanation:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "96913a19-6c5c-4071-9ada-8db7ffcdafe1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "96913a19-6c5c-4071-9ada-8db7ffcdafe1",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["The pseudo-code looks like:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "9b2dc1a6-3d10-4fdc-9b0f-95e375729e84": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "9b2dc1a6-3d10-4fdc-9b0f-95e375729e84",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Since "],
              ["n", [["b"]]],
              [
                " here is the number of symbols in the alphabet, which is typically very small number (compared to the length of the message to be encoded), time complexity is not very important in the choice of this algorithm."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "a2129a29-1b27-434a-8042-bbb9d3e4b68e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "a2129a29-1b27-434a-8042-bbb9d3e4b68e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Procedure Huffman(C):     // C is the set of n characters and related information\nn = C.size\nQ = priority_queue()\nfor i = 1 to n\n    n = node(C[i])\n    Q.push(n)\nend for\nwhile Q.size() is not equal to 1\n    Z = new node()\n    Z.left = x = Q.pop\n    Z.right = y = Q.pop\n    Z.frequency = x.frequency + y.frequency\n    Q.push(Z)\nend while\nReturn Q"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "a28cb6ab-33f1-418c-9a13-111743009b5e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082474,
          "id": "a28cb6ab-33f1-418c-9a13-111743009b5e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082474,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Huffman code",
                [["a", "https://en.wikipedia.org/wiki/Huffman_coding"]]
              ],
              [
                " is a particular type of optimal prefix code that is commonly used for lossless data compression. It compresses data very effectively saving from 20% to 90% memory, depending on the characteristics of the data being compressed. We consider the data to be a sequence of characters. Huffman’s greedy algorithm uses a table giving how often each character occurs (i.e., its frequency) to build up an optimal way of representing each character as a binary string. Huffman code was proposed by "
              ],
              [
                "David A. Huffman",
                [["a", "https://en.wikipedia.org/wiki/David_A._Huffman"]]
              ],
              [" in 1951."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "aa3723dd-a7ff-4ae3-becd-8b7d936d38a1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082475,
          "id": "aa3723dd-a7ff-4ae3-becd-8b7d936d38a1",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082475,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["The constructed tree will provide us with:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ab3fff2f-e793-4c21-9820-012bcb103660": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082487,
          "id": "ab3fff2f-e793-4c21-9820-012bcb103660",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082487,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Introduction to Algorithms - Charles E. Leiserson, Clifford Stein, Ronald Rivest, and Thomas H. Cormen"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "b0a2d7d4-8d62-48cd-a449-c68171611077": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082475,
          "id": "b0a2d7d4-8d62-48cd-a449-c68171611077",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082475,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "+------------------------+-----+-----+-----+-----+-----+-----+\n|        Character       |  a  |  b  |  c  |  d  |  e  |  f  |\n+------------------------+-----+-----+-----+-----+-----+-----+\n| Fixed-length Codeword  | 000 | 001 | 010 | 011 | 100 | 101 |\n+------------------------+-----+-----+-----+-----+-----+-----+\n|Variable-length Codeword|  0  | 101 | 100 | 111 | 1101| 1100|\n+------------------------+-----+-----+-----+-----+-----+-----+"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "b418ccd7-2d1a-443d-b2de-9ab2828655a8": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "b418ccd7-2d1a-443d-b2de-9ab2828655a8",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "1. Remove the two nodes of highest priority from the queue.\n2. Create a new internal node with these two nodes as children and with frequency equal to the sum of the two nodes' frequency.\n3. Add the new node to the queue."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "c3c31bd5-6563-4548-a186-4b7f6ab1c665": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "c3c31bd5-6563-4548-a186-4b7f6ab1c665",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["For our example:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "cbd376ab-3953-42aa-9cb0-02dce1d1a0dd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082476,
          "id": "cbd376ab-3953-42aa-9cb0-02dce1d1a0dd",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082476,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Create a leaf node for each symbol and add it to the priority queue."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "d99635ac-88bd-44a1-a8c5-10370c9b52f7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082474,
          "id": "d99635ac-88bd-44a1-a8c5-10370c9b52f7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082474,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Suppose we have a 100,000-character data file that we wish to store compactly. We assume that there are only 6 different characters in that file. The frequency of the characters are given by:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "f8a0e0e0-4ca9-4484-925b-b52891256f92": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "f8a0e0e0-4ca9-4484-925b-b52891256f92",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [["While there is more than one node in the queue:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 5
        }
      },
      "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "13943645-172e-4b34-a6c1-9a349f03423a",
            "7956c785-647f-4a9e-84be-b0c435b63abf",
            "a5d6d500-030e-4dbd-ae1e-0a94f2997d29",
            "f1cc6d1a-de71-451b-acba-4f152ae030a0",
            "66f74ce1-9305-441a-a05d-3181120a91ac"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928080000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928320000,
          "parent_id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Greedy algorithms"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 32
        }
      },
      "feb096b4-287b-42f8-a048-d5195075038e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928082477,
          "id": "feb096b4-287b-42f8-a048-d5195075038e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928082477,
          "parent_id": "7956c785-647f-4a9e-84be-b0c435b63abf",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The remaining node is the root node and the Huffman tree is complete."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
