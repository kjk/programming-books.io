3203 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "b4428435-6873-415d-9c1e-d463668d107b"
      },
      "version": -1
    }
  ]
}
Response:+2951
{
  "recordMap": {
    "block": {
      "b4428435-6873-415d-9c1e-d463668d107b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "1303fd5b-48cc-4312-bae5-a93604304ff5",
            "0aa86ec2-0cb2-4bbc-8e99-15c3c8cb3d66",
            "83756a9d-d6e5-48ae-a88f-6e4a262d696c",
            "3767cc12-fdfa-452d-bcfe-fa6da017b357",
            "2ad92e46-0ec9-4b70-b6a1-f45e34411f35",
            "f9609d3a-b5c7-48d1-84c8-6065d3d3014f",
            "3cb4e196-34f8-4557-890f-7185b121b8eb",
            "0d977662-a4f9-4554-a81a-38df17c6c8d6",
            "bfa75bf7-d739-4a4a-8050-13d2897b206d",
            "a6a4231f-e52c-4181-98ef-c1eb9fcc26bc",
            "3fafb042-01fe-4cfa-a309-44bda3fb2b10",
            "4c627fcd-e100-4bc8-a3d8-d3bc6cd00817",
            "c65e73bb-fbe5-44e4-b47c-2ad7440d4163",
            "a46f41af-49a7-441c-a5bc-1b7e9f2858f0",
            "5de5435b-ef72-4012-adf8-d8cb751f6fca",
            "ecf21af0-a61b-4d14-96a2-c61b6a836a92",
            "34ef0f82-6877-4dc0-bae0-2f350422eabd",
            "7c61f83f-1d21-4161-8903-028a54d0ca1b",
            "1af6b5b2-99ce-488e-b921-9ec2a07623a2",
            "c195cd09-87b1-44f0-b1f6-5c16521f21a9",
            "bfe6b020-bb12-4393-bee7-e6a87efc0d66",
            "8d4c158c-7831-4e82-9bb5-e60677234b71",
            "5be1e8be-303b-4b6f-a9bb-0ede69c5fcd3",
            "8ec62663-ba0b-407f-bf8a-7c74306a824d",
            "00b08806-6cdf-4928-a065-e0a5724ce014",
            "bfc2bb8e-7fe6-4a4a-8df2-91b015a77d35",
            "c07467ca-61f2-4d68-9bca-de57ba13e86f",
            "55d8c398-7216-4205-93aa-97f40934efc1",
            "d5f1b37b-1a55-4f0c-a0bd-fff1d02a8168",
            "6008df9f-5f01-44e8-a446-ccd5903b4c6a",
            "1a3ca01d-438f-4d6c-b160-f9b2433a661e",
            "d2106344-053f-4328-83f7-ccc250cdbd36",
            "43cb0214-14ce-476c-819f-d8225e08e730",
            "1adf21fb-b2dd-43fa-b656-90a628334f3e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "b4428435-6873-415d-9c1e-d463668d107b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142900000,
          "parent_id": "3cca89f6-4b6c-48b0-957b-2efc26b23041",
          "parent_table": "block",
          "properties": {
            "title": [["Introduction To Prims Algorithm"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 30
        }
      }
    }
  }
}
59501 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "b4428435-6873-415d-9c1e-d463668d107b"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+59241
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "00b08806-6cdf-4928-a065-e0a5724ce014": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829465,
          "id": "00b08806-6cdf-4928-a065-e0a5724ce014",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829465,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [["Complexity:", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "039ec42e-e62f-412e-983e-6d5b6b201b60": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "91fee7b5-614e-44ac-9c69-2c43b78c7706",
            "1b2f4c66-4ea6-4d7b-a266-531792730534",
            "6eb693f8-f70b-45c9-a6db-644dea3bc144",
            "ee1a4539-5889-4a51-bc45-1ed4ce501170",
            "8ae5c9b5-b80d-4e27-930b-0dbbf5b2a075",
            "0483f45c-fa31-493e-bd1b-b9e924123210",
            "e737c451-edb2-4ee1-8b50-4891f751f559",
            "fb292c5c-1e2c-4d16-9d29-fce0aff04b2b",
            "c8277fc4-6841-459e-81f4-c90a99fd83fa",
            "adfec1cf-4941-4483-b98d-9550de7e3916",
            "2bfd570f-dc07-4daa-b3b2-a794ef12f08e",
            "a034d8c3-224b-46dc-bc26-d44b569e39e0",
            "8c1be630-50c9-4162-b355-a5d6917f9e65",
            "56228e72-edf0-4f14-b6c7-1d113093b22a",
            "2885c26f-5511-47a5-900d-5d725326f99d",
            "e800516e-b244-4000-89c7-0041f1acd148",
            "7c62ae2d-e334-4dc4-a641-184b79672747",
            "ec9d0bba-8ded-4256-866e-28adfde6676e",
            "f00ac53f-26f5-4356-bd05-744ca9c233b1",
            "07b6aee1-86e2-4b06-9533-93f2f24dd419",
            "3104f50a-b7e2-41fe-97d7-f6e02201ccb8",
            "aed1f400-b221-4067-80e6-2fda841c33f0",
            "a747cf00-d05a-4132-9b34-4cea62968a38",
            "0abdd157-bda8-4285-b8a7-5aa4dd7e132b",
            "e79c088d-5ede-4b22-b5dc-16273a672796",
            "721fb53c-f240-4ce6-aaaa-9f4be08c3460",
            "38ae0e5d-81ea-45b2-b7f4-8eb197662514",
            "c06d75d6-1a6d-48da-8e09-4d63502dedee",
            "3cca89f6-4b6c-48b0-957b-2efc26b23041",
            "db10fdd2-ea0b-4236-ae14-94781b2f7586",
            "9bd5a67d-2c30-4b51-a6b7-b9eb3583b888",
            "29a89f00-863f-4084-8ec5-db4c455fc788",
            "2734ccd8-075a-412f-8976-e67dfd9416da",
            "a5ee9280-35d0-4aac-89a2-decbe44f483e",
            "790101e3-fd8c-47e3-bcc4-54b18dc2fd9a",
            "aa2725ad-e1d1-40ed-ab4f-0042fe8e222f",
            "7261d2a3-9d9d-43cb-9e3a-4b432a018d9e",
            "7e7202cf-172e-479e-b1d4-2842091d8b3e",
            "ee364118-8538-4817-87be-3e716db337cb",
            "4ee11beb-a38d-47e3-8227-7414b7e09239",
            "f82e52a5-bc15-4106-8c59-2d323c6aa2f1",
            "547abd24-965c-44ce-b5f0-e452aeea3821",
            "d33782ab-d4ee-4ba9-938d-2922e11247be",
            "0c0e3472-dac8-416a-833b-40ef5e725f54",
            "c677c530-6036-4f08-810c-5e2b963b6ded",
            "d1c46e3a-31cb-41e0-acf1-907b405548a3",
            "24e66a7f-c2cb-4c77-b424-5e08b603ee59",
            "15b863c2-28b5-4b31-9379-ff8091b43c28",
            "5eb1332d-741d-47f8-ad4c-da01f28ef2ed",
            "88259ac2-4526-4ea5-b9e9-d03f7dd06c8e",
            "0652a44d-8a63-47b5-b7cf-af85d0c3655a",
            "61f46cc6-d7e0-4aeb-ae8a-47f4eb52c2bc",
            "a3747844-afb9-4883-bbb2-bea5662e919d",
            "e567adff-577f-4fa6-849a-1a112f689048",
            "c96af0be-a3eb-4385-a674-0f83049a23fd",
            "1357e166-4a61-43ab-a4f0-d9cbd7ba53de",
            "e7f85180-91d1-4075-8feb-5b5f495422a9",
            "2a8a00f4-a540-41b4-87f7-465c42e6a071",
            "f11f3084-c84d-4f6e-91d0-8c55df0d8c59",
            "491070bf-06ff-4de8-bf7f-3e121c11c49f",
            "2a95e83b-1c1e-40d2-b8e0-8917aa02703e",
            "a30ef162-2edd-4b12-90d7-25d5049ed098",
            "eaba21c7-6ac1-482f-bdc2-9410e7140b3d",
            "1f7d7534-a522-4df6-a495-44f1c3e4179d",
            "924ef53c-fe52-4d0f-8233-1cbc0f7eb8f7",
            "d9ba24fd-508b-4ddc-9d8c-15467083ba43"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928257468,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571298780000,
          "parent_id": "d79ccaee-4168-4c48-920b-7005c81675ea",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            },
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Algorithms"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 135
        }
      },
      "0aa86ec2-0cb2-4bbc-8e99-15c3c8cb3d66": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595142780000,
          "file_ids": ["70ddfcc3-1234-467e-b757-cb1cedf5e5ef"],
          "format": {
            "block_aspect_ratio": 0.7013651877133106,
            "block_full_width": false,
            "block_height": 411,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 586,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/70ddfcc3-1234-467e-b757-cb1cedf5e5ef/Untitled.png"
          },
          "id": "0aa86ec2-0cb2-4bbc-8e99-15c3c8cb3d66",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142780000,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/70ddfcc3-1234-467e-b757-cb1cedf5e5ef/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "0d977662-a4f9-4554-a81a-38df17c6c8d6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829461,
          "id": "0d977662-a4f9-4554-a81a-38df17c6c8d6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829461,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["There are "],
              ["(n-1)", [["b"]]],
              [" edges in the tree, where "],
              ["n", [["b"]]],
              [" is the number of nodes in "],
              ["G", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "1303fd5b-48cc-4312-bae5-a93604304ff5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829452,
          "id": "1303fd5b-48cc-4312-bae5-a93604304ff5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829452,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Let’s say we have "],
              ["8", [["b"]]],
              [
                " houses. We want to setup telephone lines between these houses. The edge between the houses represent the cost of setting line between two houses."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "1a3ca01d-438f-4d6c-b160-f9b2433a661e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "id": "1a3ca01d-438f-4d6c-b160-f9b2433a661e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829466,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "import java.util.*;\n\npublic class Graph\n{\n   private static int infinite = 9999999;\n   int[][]  LinkCost;\n   int      NNodes;\n   Graph(int[][] mat)\n   {\n      int i, j;\n      NNodes = mat.length;\n      LinkCost = new int[NNodes][NNodes];\n      for ( i=0; i < NNodes; i++)\n      {\n         for ( j=0; j < NNodes; j++)\n         {\n            LinkCost[i][j] = mat[i][j];\n            if ( LinkCost[i][j] == 0 )\n               LinkCost[i][j] = infinite;\n         }\n      }\n      for ( i=0; i < NNodes; i++)\n      {\n         for ( j=0; j < NNodes; j++)\n            if ( LinkCost[i][j] < infinite )\n               System.out.print( \" \" + LinkCost[i][j] + \" \" );\n            else\n               System.out.print(\" * \" );\n         System.out.println();\n      }\n   }\n   public int unReached(boolean[] r)\n   {\n      boolean done = true;\n      for ( int i = 0; i < r.length; i++ )\n         if ( r[i] == false )\n            return i;\n      return -1;\n   }\n   public void Prim( )\n   {\n      int i, j, k, x, y;\n      boolean[] Reached = new boolean[NNodes];\n      int[] predNode = new int[NNodes];\n      Reached[0] = true;\n      for ( k = 1; k < NNodes; k++ )\n      {\n         Reached[k] = false;\n      }\n      predNode[0] = 0;\n      printReachSet( Reached );\n      for (k = 1; k < NNodes; k++)\n      {\n         x = y = 0;\n         for ( i = 0; i < NNodes; i++ )\n            for ( j = 0; j < NNodes; j++ )\n            {\n                if ( Reached[i] && !Reached[j] &&\n                     LinkCost[i][j] < LinkCost[x][y] )\n                {\n                   x = i;\n                   y = j;\n                }\n            }\n         System.out.println(\"Min cost edge: (\" +\n                                + x + \",\" +\n                                + y + \")\" +\n                                \"cost = \" + LinkCost[x][y]);\n         predNode[y] = x;\n         Reached[y] = true;\n         printReachSet( Reached );\n         System.out.println();\n      }\n      int[] a= predNode;\n   for ( i = 0; i < NNodes; i++ )\n          System.out.println( a[i] + \" --> \" + i );\n   }\n   void printReachSet(boolean[] Reached )\n   {\n      System.out.print(\"ReachSet = \");\n      for (int i = 0; i < Reached.length; i++ )\n         if ( Reached[i] )\n           System.out.print( i + \" \");\n      //System.out.println();\n   }\n public static void main(String[] args)\n   {\n      int[][] conn = {{0,3,0,2,0,0,0,0,4},  // 0\n                      {3,0,0,0,0,0,0,4,0},  // 1\n                      {0,0,0,6,0,1,0,2,0},  // 2\n                      {2,0,6,0,1,0,0,0,0},  // 3\n                      {0,0,0,1,0,0,0,0,8},  // 4\n                      {0,0,1,0,0,0,8,0,0},  // 5\n                      {0,0,0,0,0,8,0,0,0},  // 6\n                      {0,4,2,0,0,0,0,0,0},  // 7\n                      {4,0,0,0,8,0,0,0,0}   // 8\n                     };\n      Graph G = new Graph(conn);\n      G.Prim();\n   }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "1adf21fb-b2dd-43fa-b656-90a628334f3e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "id": "1adf21fb-b2dd-43fa-b656-90a628334f3e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829466,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "$ java Graph\n *  3  *  2  *  *  *  *  4\n 3  *  *  *  *  *  *  4  *\n *  *  *  6  *  1  *  2  *\n 2  *  6  *  1  *  *  *  *\n *  *  *  1  *  *  *  *  8\n *  *  1  *  *  *  8  *  *\n *  *  *  *  *  8  *  *  *\n *  4  2  *  *  *  *  *  *\n 4  *  *  *  8  *  *  *  *\nReachSet = 0 Min cost edge: (0,3)cost = 2\nReachSet = 0 3\nMin cost edge: (3,4)cost = 1\nReachSet = 0 3 4\nMin cost edge: (0,1)cost = 3\nReachSet = 0 1 3 4\nMin cost edge: (0,8)cost = 4\nReachSet = 0 1 3 4 8\nMin cost edge: (1,7)cost = 4\nReachSet = 0 1 3 4 7 8\nMin cost edge: (7,2)cost = 2\nReachSet = 0 1 2 3 4 7 8\nMin cost edge: (2,5)cost = 1\nReachSet = 0 1 2 3 4 5 7 8\nMin cost edge: (5,6)cost = 8\nReachSet = 0 1 2 3 4 5 6 7 8\n0 --> 0\n0 --> 1\n7 --> 2\n0 --> 3\n3 --> 4\n2 --> 5\n5 --> 6\n1 --> 7\n0 --> 8"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "1af6b5b2-99ce-488e-b921-9ec2a07623a2": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595142900000,
          "file_ids": ["2b1eac05-566a-45a6-b778-1ddbf4c4be81"],
          "format": {
            "block_aspect_ratio": 0.7013651877133106,
            "block_full_width": false,
            "block_height": 411,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 586,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2b1eac05-566a-45a6-b778-1ddbf4c4be81/Untitled.png"
          },
          "id": "1af6b5b2-99ce-488e-b921-9ec2a07623a2",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142900000,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2b1eac05-566a-45a6-b778-1ddbf4c4be81/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "2ad92e46-0ec9-4b70-b6a1-f45e34411f35": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829459,
          "id": "2ad92e46-0ec9-4b70-b6a1-f45e34411f35",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829459,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Now let’s look at the technical terms first. If we create a graph, "
              ],
              ["S", [["b"]]],
              [" using some nodes and edges of an undirected graph "],
              ["G", [["b"]]],
              [", then "],
              ["S", [["b"]]],
              [" is called a "],
              ["subgraph", [["b"]]],
              [" of the graph "],
              ["G", [["b"]]],
              [". Now "],
              ["S", [["b"]]],
              [" will be called a "],
              ["Spanning Tree", [["b"]]],
              [" if and only if:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "34ef0f82-6877-4dc0-bae0-2f350422eabd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595142900000,
          "file_ids": ["a0aed473-4371-4eac-b648-faf9fade291a"],
          "format": {
            "block_aspect_ratio": 0.7013651877133106,
            "block_full_width": false,
            "block_height": 411,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 586,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a0aed473-4371-4eac-b648-faf9fade291a/Untitled.png"
          },
          "id": "34ef0f82-6877-4dc0-bae0-2f350422eabd",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142900000,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a0aed473-4371-4eac-b648-faf9fade291a/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "3767cc12-fdfa-452d-bcfe-fa6da017b357": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829459,
          "id": "3767cc12-fdfa-452d-bcfe-fa6da017b357",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829459,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Prim’s Algorithm",
                [["a", "https://en.wikipedia.org/wiki/Prim's_algorithm"]]
              ],
              [
                " is a greedy algorithm that finds a minimum spanning tree for a weighted undirected graph. This means it finds a subset of the edges that forms a tree that includes every node, where the total weight of all the edges in the tree are minimized. The algorithm was developed in 1930 by Czech mathematician "
              ],
              [
                "Vojtěch Jarník",
                [
                  [
                    "a",
                    "https://en.wikipedia.org/wiki/Vojt%C4%9Bch_Jarn%C3%ADk"
                  ]
                ]
              ],
              [" and later rediscovered and republished by computer scientist "],
              [
                "Robert Clay Prim",
                [["a", "https://en.wikipedia.org/wiki/Robert_C._Prim"]]
              ],
              [" in 1957 and "],
              [
                "Edsger Wybe Dijkstra",
                [["a", "https://en.wikipedia.org/wiki/Edsger_W._Dijkstra"]]
              ],
              [" in 1959. It is also known as "],
              ["DJP algorithm", [["b"]]],
              [", "],
              ["Jarnik’s algorithm", [["b"]]],
              [", "],
              ["Prim-Jarnik algorithm", [["b"]]],
              [" or "],
              ["Prim-Dijsktra algorithm", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "3cb4e196-34f8-4557-890f-7185b121b8eb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829460,
          "id": "3cb4e196-34f8-4557-890f-7185b121b8eb",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829460,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It is a tree, that means there is no cycle and all the nodes are connected."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "3cca89f6-4b6c-48b0-957b-2efc26b23041": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4f56fc07-9aa7-4e02-adc4-25b6a5ca1811",
            "b4428435-6873-415d-9c1e-d463668d107b"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928800000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "3cca89f6-4b6c-48b0-957b-2efc26b23041",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551929100000,
          "parent_id": "039ec42e-e62f-412e-983e-6d5b6b201b60",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Prims Algorithm"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 27
        }
      },
      "3fafb042-01fe-4cfa-a309-44bda3fb2b10": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595142780000,
          "file_ids": ["7204040f-50d3-4cfa-b74b-6fdfaad5dbb7"],
          "format": {
            "block_aspect_ratio": 0.7013651877133106,
            "block_full_width": false,
            "block_height": 411,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 586,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7204040f-50d3-4cfa-b74b-6fdfaad5dbb7/Untitled.png"
          },
          "id": "3fafb042-01fe-4cfa-a309-44bda3fb2b10",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142780000,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7204040f-50d3-4cfa-b74b-6fdfaad5dbb7/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "43cb0214-14ce-476c-819f-d8225e08e730": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "id": "43cb0214-14ce-476c-819f-d8225e08e730",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829466,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [["Output:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "4c627fcd-e100-4bc8-a3d8-d3bc6cd00817": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829462,
          "id": "4c627fcd-e100-4bc8-a3d8-d3bc6cd00817",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829462,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Now we consider all the edges from "],
              ["node-1", [["b"]]],
              [" and "],
              ["node-5", [["b"]]],
              [" and take the minimum. Since "],
              ["1-5", [["b"]]],
              [" is already marked, we take "],
              ["1-2", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "55d8c398-7216-4205-93aa-97f40934efc1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829465,
          "id": "55d8c398-7216-4205-93aa-97f40934efc1",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829465,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Procedure MSTPrim(Graph, source):\nfor each u in V\n    key[u] := inf\n    parent[u] := NULL\nend for\nkey[source] := 0\nQ = Priority_Queue()\nQ = V\nwhile Q is not empty\n    u -> Q.pop\n    for each v adjacent to i\n        if v belongs to Q and Edge(u,v) < key[v]    // here Edge(u, v) represents\n                                                    // cost of edge(u, v)\n            parent[v] := u\n            key[v] := Edge(u, v)\n        end if\n    end for\nend while"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "5be1e8be-303b-4b6f-a9bb-0ede69c5fcd3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829464,
          "id": "5be1e8be-303b-4b6f-a9bb-0ede69c5fcd3",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829464,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [["The pseudo-code of the algorithm is given below:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5de5435b-ef72-4012-adf8-d8cb751f6fca": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595142900000,
          "file_ids": ["72367bfd-c4fc-4ed2-bf42-33d9061563e3"],
          "format": {
            "block_aspect_ratio": 0.7013651877133106,
            "block_full_width": false,
            "block_height": 411,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 586,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/72367bfd-c4fc-4ed2-bf42-33d9061563e3/Untitled.png"
          },
          "id": "5de5435b-ef72-4012-adf8-d8cb751f6fca",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142900000,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/72367bfd-c4fc-4ed2-bf42-33d9061563e3/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "6008df9f-5f01-44e8-a446-ccd5903b4c6a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "id": "6008df9f-5f01-44e8-a446-ccd5903b4c6a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829466,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [["Below is a simple program in Java:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "7c61f83f-1d21-4161-8903-028a54d0ca1b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829463,
          "id": "7c61f83f-1d21-4161-8903-028a54d0ca1b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829463,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If we continue this way, we’ll select edge "],
              ["8-6", [["b"]]],
              [", "],
              ["6-7", [["b"]]],
              [" and "],
              ["4-3", [["b"]]],
              [". Our subgraph will look like:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "83756a9d-d6e5-48ae-a88f-6e4a262d696c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829455,
          "id": "83756a9d-d6e5-48ae-a88f-6e4a262d696c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829455,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Our task is to set up lines in such a way that all the houses are connected and the cost of setting up the whole connection is minimum. Now how do we find that out? We can use "
              ],
              ["Prim’s Algorithm", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "8d4c158c-7831-4e82-9bb5-e60677234b71": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829464,
          "id": "8d4c158c-7831-4e82-9bb5-e60677234b71",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829464,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["This is our "],
              ["minimum spanning tree", [["b"]]],
              [
                " (MST). So the cost of setting up the telephone connections is: "
              ],
              ["4", [["b"]]],
              [" + "],
              ["2", [["b"]]],
              [" + "],
              ["5", [["b"]]],
              [" + "],
              ["11", [["b"]]],
              [" + "],
              ["9", [["b"]]],
              [" + "],
              ["2", [["b"]]],
              [" + "],
              ["1", [["b"]]],
              [" = "],
              ["34", [["b"]]],
              [
                ". And the set of houses and their connections are shown in the graph. There can be multiple "
              ],
              ["MST", [["b"]]],
              [" of a graph. It depends on the "],
              ["source", [["b"]]],
              [" node we choose."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "8ec62663-ba0b-407f-bf8a-7c74306a824d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829465,
          "id": "8ec62663-ba0b-407f-bf8a-7c74306a824d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829465,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "Procedure PrimsMST(Graph):     // here Graph is a non-empty connected weighted graph\nVnew[] = {x}                   // New subgraph Vnew with source node x\nEnew[] = {}\nwhile Vnew is not equal to V\n    u -> a node from Vnew\n    v -> a node that is not in Vnew such that edge u-v has the minimum cost\n                               // if two nodes have same weight, pick any of them\n    add v to Vnew\n    add edge (u, v) to Enew\nend while\nReturn Vnew and Enew"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "a46f41af-49a7-441c-a5bc-1b7e9f2858f0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829462,
          "id": "a46f41af-49a7-441c-a5bc-1b7e9f2858f0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829462,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["This time, we consider "],
              ["node-1", [["b"]]],
              [", "],
              ["node-2", [["b"]]],
              [" and "],
              ["node-5", [["b"]]],
              [" and take the minimum edge which is "],
              ["5-4", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "a6a4231f-e52c-4181-98ef-c1eb9fcc26bc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829461,
          "id": "a6a4231f-e52c-4181-98ef-c1eb9fcc26bc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829461,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["At first we’ll select a "],
              ["source", [["b"]]],
              [" node. Let’s say, "],
              ["node-1", [["b"]]],
              [" is our "],
              ["source", [["b"]]],
              [". Now we’ll add the edge from "],
              ["node-1", [["b"]]],
              [
                " that has the minimum cost to our subgraph. Here we mark the edges that are in the subgraph using the color "
              ],
              ["blue", [["b"]]],
              [". Here "],
              ["1-5", [["b"]]],
              [" is our desired edge."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "b4428435-6873-415d-9c1e-d463668d107b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "1303fd5b-48cc-4312-bae5-a93604304ff5",
            "0aa86ec2-0cb2-4bbc-8e99-15c3c8cb3d66",
            "83756a9d-d6e5-48ae-a88f-6e4a262d696c",
            "3767cc12-fdfa-452d-bcfe-fa6da017b357",
            "2ad92e46-0ec9-4b70-b6a1-f45e34411f35",
            "f9609d3a-b5c7-48d1-84c8-6065d3d3014f",
            "3cb4e196-34f8-4557-890f-7185b121b8eb",
            "0d977662-a4f9-4554-a81a-38df17c6c8d6",
            "bfa75bf7-d739-4a4a-8050-13d2897b206d",
            "a6a4231f-e52c-4181-98ef-c1eb9fcc26bc",
            "3fafb042-01fe-4cfa-a309-44bda3fb2b10",
            "4c627fcd-e100-4bc8-a3d8-d3bc6cd00817",
            "c65e73bb-fbe5-44e4-b47c-2ad7440d4163",
            "a46f41af-49a7-441c-a5bc-1b7e9f2858f0",
            "5de5435b-ef72-4012-adf8-d8cb751f6fca",
            "ecf21af0-a61b-4d14-96a2-c61b6a836a92",
            "34ef0f82-6877-4dc0-bae0-2f350422eabd",
            "7c61f83f-1d21-4161-8903-028a54d0ca1b",
            "1af6b5b2-99ce-488e-b921-9ec2a07623a2",
            "c195cd09-87b1-44f0-b1f6-5c16521f21a9",
            "bfe6b020-bb12-4393-bee7-e6a87efc0d66",
            "8d4c158c-7831-4e82-9bb5-e60677234b71",
            "5be1e8be-303b-4b6f-a9bb-0ede69c5fcd3",
            "8ec62663-ba0b-407f-bf8a-7c74306a824d",
            "00b08806-6cdf-4928-a065-e0a5724ce014",
            "bfc2bb8e-7fe6-4a4a-8df2-91b015a77d35",
            "c07467ca-61f2-4d68-9bca-de57ba13e86f",
            "55d8c398-7216-4205-93aa-97f40934efc1",
            "d5f1b37b-1a55-4f0c-a0bd-fff1d02a8168",
            "6008df9f-5f01-44e8-a446-ccd5903b4c6a",
            "1a3ca01d-438f-4d6c-b160-f9b2433a661e",
            "d2106344-053f-4328-83f7-ccc250cdbd36",
            "43cb0214-14ce-476c-819f-d8225e08e730",
            "1adf21fb-b2dd-43fa-b656-90a628334f3e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "b4428435-6873-415d-9c1e-d463668d107b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142900000,
          "parent_id": "3cca89f6-4b6c-48b0-957b-2efc26b23041",
          "parent_table": "block",
          "properties": {
            "title": [["Introduction To Prims Algorithm"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 30
        }
      },
      "bfa75bf7-d739-4a4a-8050-13d2897b206d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829461,
          "id": "bfa75bf7-d739-4a4a-8050-13d2897b206d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829461,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["There can be many "],
              ["Spanning Tree", [["b"]]],
              ["‘s of a graph. The "],
              ["Minimum Spanning Tree", [["b"]]],
              [
                " of a weighted undirected graph is a tree, such that sum of the weight of the edges is minimum. Now we’ll use "
              ],
              ["Prim’s algorithm", [["b"]]],
              [
                " to find out the minimum spanning tree, that is how to set up the telephone lines in our example graph in such way that the cost of set up is minimum."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "bfc2bb8e-7fe6-4a4a-8df2-91b015a77d35": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829465,
          "id": "bfc2bb8e-7fe6-4a4a-8df2-91b015a77d35",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829465,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Time complexity of the above naive approach is "],
              ["O(V²)", [["b"]]],
              [
                ". It uses adjacency matrix. We can reduce the complexity using priority queue. When we add a new node to "
              ],
              ["Vnew", [["b"]]],
              [
                ", we can add its adjacent edges in the priority queue. Then pop the minimum weighted edge from it. Then the complexity will be: "
              ],
              ["O(ElogE)", [["b"]]],
              [", where "],
              ["E", [["b"]]],
              [
                " is the number of edges. Again a Binary Heap can be constructed to reduce the complexity to "
              ],
              ["O(ElogV)", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "bfe6b020-bb12-4393-bee7-e6a87efc0d66": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595142900000,
          "file_ids": ["a037e9d3-27d9-45d1-82ac-85deb39b0cd1"],
          "format": {
            "block_aspect_ratio": 0.7013651877133106,
            "block_full_width": false,
            "block_height": 411,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 586,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a037e9d3-27d9-45d1-82ac-85deb39b0cd1/Untitled.png"
          },
          "id": "bfe6b020-bb12-4393-bee7-e6a87efc0d66",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142900000,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a037e9d3-27d9-45d1-82ac-85deb39b0cd1/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "c07467ca-61f2-4d68-9bca-de57ba13e86f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829465,
          "id": "c07467ca-61f2-4d68-9bca-de57ba13e86f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829465,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [["The pseudo-code using Priority Queue is given below:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "c195cd09-87b1-44f0-b1f6-5c16521f21a9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829464,
          "id": "c195cd09-87b1-44f0-b1f6-5c16521f21a9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829464,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This is our desired subgraph, that’ll give us the minimum spanning tree. If we remove the edges that we didn’t select, we’ll get:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "c65e73bb-fbe5-44e4-b47c-2ad7440d4163": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1595142780000,
          "file_ids": ["2912f21c-44c3-4bdc-8b2a-753fe4a954ca"],
          "format": {
            "block_aspect_ratio": 0.7013651877133106,
            "block_full_width": false,
            "block_height": 411,
            "block_page_width": false,
            "block_preserve_scale": true,
            "block_width": 586,
            "display_source": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2912f21c-44c3-4bdc-8b2a-753fe4a954ca/Untitled.png"
          },
          "id": "c65e73bb-fbe5-44e4-b47c-2ad7440d4163",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595142780000,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "source": [
              [
                "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2912f21c-44c3-4bdc-8b2a-753fe4a954ca/Untitled.png"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 13
        }
      },
      "d2106344-053f-4328-83f7-ccc250cdbd36": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "id": "d2106344-053f-4328-83f7-ccc250cdbd36",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829466,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Compile the above code using "],
              ["javac Graph.java", [["c"]]]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "d5f1b37b-1a55-4f0c-a0bd-fff1d02a8168": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829466,
          "id": "d5f1b37b-1a55-4f0c-a0bd-fff1d02a8168",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829466,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Here "],
              ["key[]", [["b"]]],
              [" stores the minimum cost of traversing "],
              ["node-v", [["b"]]],
              [". "],
              ["parent[]", [["b"]]],
              [
                " is used to store the parent node. It is useful for traversing and printing the tree."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ecf21af0-a61b-4d14-96a2-c61b6a836a92": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829463,
          "id": "ecf21af0-a61b-4d14-96a2-c61b6a836a92",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829463,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [
              ["The next step is important. From "],
              ["node-1", [["b"]]],
              [", "],
              ["node-2", [["b"]]],
              [", "],
              ["node-5", [["b"]]],
              [" and "],
              ["node-4", [["b"]]],
              [", the minimum edge is "],
              ["2-4", [["b"]]],
              [
                ". But if we select that one, it’ll create a cycle in our subgraph. This is because "
              ],
              ["node-2", [["b"]]],
              [" and "],
              ["node-4", [["b"]]],
              [" are already in our subgraph. So taking edge "],
              ["2-4", [["b"]]],
              [" doesn’t benefit us. "],
              [
                "We’ll select the edges in such way that it adds a new node in our subgraph",
                [["i"]]
              ],
              [". So we select edge "],
              ["4-8", [["b"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "f9609d3a-b5c7-48d1-84c8-6065d3d3014f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1551928829460,
          "id": "f9609d3a-b5c7-48d1-84c8-6065d3d3014f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551928829460,
          "parent_id": "b4428435-6873-415d-9c1e-d463668d107b",
          "parent_table": "block",
          "properties": {
            "title": [["It contains all the nodes of "], ["G", [["b"]]], ["."]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      }
    },
    "space": {}
  }
}
