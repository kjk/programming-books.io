2464 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6"
      },
      "version": -1
    }
  ]
}
Response:+2212
{
  "recordMap": {
    "block": {
      "aefb61c8-d1b7-472c-b81c-80a805ff78c6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "55742996-585d-483a-81f6-d12fa91d71f1",
            "91a7cd0f-4ee6-4117-b19c-30917145d74b",
            "7a4aef7d-ef5a-45fc-90cd-a8d2f1855e4d",
            "82edbcc1-fab6-4eff-abbf-5c104d086ee0",
            "1418c264-981e-47fe-91b0-4a5cc7007d9a",
            "ef985c0a-b083-47c9-9b86-db57f733926a",
            "5a132292-4f45-480e-8337-53d6d87522c0",
            "bcbcd72a-8847-4a36-b7a9-16a3369d29c7",
            "b20f0530-302f-402b-a187-de5156c7aae6",
            "3001e29b-2e15-4879-88c0-284a679abe8c",
            "7e2fddc8-2820-4286-bb71-2bf5dac1503f",
            "52fbfbe8-76a8-4dab-9b5f-897e6fc63aba",
            "6511e884-7b3a-4773-8c4d-c2d36cc3264d",
            "9946ffe9-1d81-468b-8501-e8e83ada3159",
            "69a9cb8b-7426-4237-a872-f928fc3ff624",
            "f5533485-ba7a-4c10-b73c-a8d73e974b3a",
            "8e8ce87a-857d-4a41-a742-5c41652cf0af",
            "8b572415-b814-46a4-b956-80e56ac35135"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714057,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550713320000,
          "parent_id": "468b0602-725a-4cb6-810e-ca88f35bd501",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Shade Transition with Real-World Physics Using UIDynamicBehaviors"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 8
        }
      }
    }
  }
}
60720 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+60460
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "1418c264-981e-47fe-91b0-4a5cc7007d9a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "1418c264-981e-47fe-91b0-4a5cc7007d9a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "class ViewController: UIViewController\n{\n    var presentingAnimator: ShadeAnimator!\n    var dismissingAnimator: ShadeAnimator!\n    let shadeVC = ShadeViewController()\n    \n    lazy var label: UILabel =\n    {\n        let label = UILabel()\n        label.textColor = .blue\n        label.translatesAutoresizingMaskIntoConstraints = false\n        self.view.addSubview(label)\n        label.centerXAnchor.constraint(equalTo: self.view.centerXAnchor).isActive = true\n        label.centerYAnchor.constraint(equalTo: self.view.centerYAnchor).isActive = true\n        return label\n    }()\n    \n    override func viewDidLoad()\n    {\n        super.viewDidLoad()\n        label.text = \"Swipe Down From Top\"\n        presentingAnimator = ShadeAnimator(isAppearing: true, presentingVC: self, presentedVC: shadeVC, transitionDelegate: self)\n        dismissingAnimator = ShadeAnimator(isAppearing: false, presentingVC: self, presentedVC: shadeVC, transitionDelegate: self)\n    }\n}\nextension ViewController: UIViewControllerTransitioningDelegate\n{\n    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning?\n    {\n        return EmptyAnimator()\n    }\n    \n    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning?\n    {\n        return EmptyAnimator()\n    }\n    \n    func interactionControllerForPresentation(using animator: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning?\n    {\n        return presentingAnimator\n    }\n    \n    func interactionControllerForDismissal(using animator: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning?\n    {\n        return dismissingAnimator\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "3001e29b-2e15-4879-88c0-284a679abe8c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "3001e29b-2e15-4879-88c0-284a679abe8c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "class EmptyAnimator: NSObject\n{\n\n}\n\nextension EmptyAnimator: UIViewControllerAnimatedTransitioning\n{\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning)\n    {\n        \n    }\n    \n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval\n    {\n        return 0.0\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "3626edc1-bd04-4431-afdd-c89648a7050f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "a5af1143-929b-47c9-9f11-f0339ebc9527",
            "507d8674-6569-42dd-8593-e80c9a53fdd8",
            "8c7bb37f-5fb6-45cd-b737-2eafb1a5cad2",
            "378b8c4b-615f-49cc-b272-6560a0b45048",
            "9aa8d1a9-074b-4599-9180-730b73cffa87",
            "f66ddbbe-f64d-49b6-b58c-064a51f37ad0",
            "8b631b09-13dd-423c-badd-4f689f60482c",
            "c0d09481-5218-4dda-bfe6-545ea61abcd8",
            "617ce87f-342c-4508-8060-64e96ea6829f",
            "e7e31a29-bf79-49d6-ba44-e09d1c896f24",
            "b7001b29-07c4-4eb6-a871-c66ebe2f51b1",
            "ff52502a-1a62-4615-9240-59266795e3cb",
            "f61c20e3-b986-483f-b8a1-4e7e26e443f7",
            "bf302578-5638-4b71-90e4-b0285c8d6b5b",
            "c21a56d6-07e0-4613-9800-14573c1e52e2",
            "8f113f49-b67b-443b-8457-519cda2513be",
            "e53c314d-8a34-4c36-8e8d-2f9f5c463738",
            "508a2ecb-183a-4fb4-b7e9-5dc621630efd",
            "2d98a507-fb06-4608-aa93-e65f9befc841",
            "ef1171bc-6dc0-4b79-a175-2ec143d37689",
            "e1a08c1c-c84f-4c65-ad80-3f4273841b57",
            "4b42e68c-0953-487c-8cf0-d8946283c2ea",
            "ac4e65ca-494a-4bc4-8e84-6508401d0760",
            "167fa3ac-e5a1-4223-9bf6-4451084a3bd2",
            "458606bd-6213-46bd-aaab-dcb8dbc1d5fc",
            "586fdbe7-c83e-44ea-9d8f-78e81c746dd3",
            "3a20abc9-acc0-4dbb-9b73-b4cbb4f1a829",
            "ab4dcbe6-9aca-4b6c-8649-f4bc5f82ebb4",
            "70285e23-8a3d-4791-9548-c1fb5ea195dc",
            "6322ab3e-c9a3-49a0-8146-3403ca605342",
            "b0d929fa-86c7-42fa-be42-10d70a6eecc3",
            "ef263014-bda3-40f6-bf71-d92405ecc883",
            "72b9755c-2fb0-40e9-bbe1-9e1dc991a815",
            "c05487c7-8854-4aec-8625-17129611e0b3",
            "4bb5da49-2abd-458e-a752-28b6f09f8259",
            "773b6f96-ffaf-4351-9c90-f5ce8c465bf3",
            "0ff3c3ad-ebbf-49a8-9738-406cae0aa48f",
            "376a847e-7f0c-468c-9e79-0f0948997637",
            "bd6930c5-69f6-41e6-97fd-c9dd073c68ba",
            "a7f937f4-36c0-42f5-8ab8-c9d208148af4",
            "f201afae-b539-4cee-a0e4-ee8405dcf919",
            "09f0e272-51ac-432f-a485-5f272ce058d6",
            "943929e1-0314-4523-a623-310918ccc622",
            "2ea198f9-ccd0-48dc-8c00-885293d6cd73",
            "8ec08eef-b3bf-4ed2-831e-f121a18abf8b",
            "154495b9-532b-4074-985f-059c30a6ff25",
            "cd6e656a-0998-4859-bcf6-635137b30854",
            "5a2590eb-a5eb-4d4d-9bb8-734f29f98b62",
            "b3127aad-3837-47cb-96f5-ea111e47a2a6",
            "464e82a4-9e05-4202-a5c5-14dceff8619b",
            "b0ed0a5d-7d43-46c4-998d-37710c86435c",
            "bb3b567e-bf4c-4f1a-b3c8-bbaeb5935cfd",
            "a7c90006-fcd8-4f9c-9129-07957fc6d7b8",
            "364d948a-b32a-4a45-b1e3-2e149eca790f",
            "1de88999-582e-454f-bf00-b62aa1e8c6c7",
            "756f49db-23fe-4784-bc16-345d72334010",
            "fbb0fcc5-2edc-4a7f-9db9-8f721d1d618e",
            "3e9fd345-ede2-4221-ab29-02a29f71d19c",
            "621d7607-1161-47a2-a2e2-85dd4b437d1d",
            "e78f1ff3-aef3-4dbe-b387-0d3349d5456e",
            "bc18d381-67f8-4027-ae9b-966c7d186f67",
            "9ba8f818-f42f-4eb2-a68e-67377a9543ce",
            "bdd611c5-cbce-4785-9d84-d23018d63eab",
            "e0be90a3-a70f-45c4-9fcf-e95f41050a71",
            "9cb08a2a-428d-4197-9569-66e693d603d8",
            "31ec28e4-4764-4c70-9411-216e1e5b70dc",
            "c908142e-b1bd-4464-8543-44a43929be0f",
            "daadaa42-7b59-4a17-b3af-0310c254d2e5",
            "0ec28f74-9022-4ac7-8d84-a19a3494f947",
            "f4e0fc1e-07d3-4cbd-8e65-bcefd0031b76",
            "d7cd40ee-c8db-49e1-a082-7f44bb1a37bb",
            "1a26d681-ef13-46e2-aeb0-df99b8a48186",
            "ec3b4c9d-97ac-484c-b205-5fe729490cae",
            "30bf9ef1-4efd-4efb-af05-4da373b3c272",
            "e8d0a3b9-30c0-4b30-b014-fea6a3f1c1c1",
            "9594d403-0ff2-42cc-a0e4-6075d4f869e1",
            "a4789cd8-edb8-4ea9-a217-42a296586739",
            "4a1fef4b-2ac9-4300-bf4b-425a6b82f9a7",
            "f3d87c1a-40a6-4b95-8592-90eaaaa9db6e",
            "9b7effe3-3c92-47b3-890a-34980fc6c2ba",
            "c446ba32-f064-4a2c-865a-fe679afd24f2",
            "de060d2a-5edd-4d74-aa93-9a10f5108cbb",
            "429a9b47-5f46-400a-b2c8-4915d2928b9b",
            "37452658-309f-4211-997e-ba7770e870b5",
            "7f229db5-64ee-45de-a6ab-0d61f675f6ff",
            "2c543993-7ee2-4035-9f63-ddd4de543fde",
            "25182a98-2d66-4298-8b39-71e23ab1ece4",
            "5265ac03-99db-4793-939c-1f4527e3dddc",
            "652de3ae-3b9e-4364-b4df-f861bab62742",
            "903fb5dd-a312-4f4e-80d7-612320135a0f",
            "f1c74aaa-2f08-4bc4-8519-01d4ca0bb7d5",
            "fd4852d9-10a3-457e-87aa-9be417584c87",
            "cd185718-00e1-4055-82db-654c8985c5a6",
            "0e3a98fa-3804-44cc-bd1b-1f55a9eae49d",
            "0a0f8fe3-ca06-4e0c-bf39-1e7c20e930d7",
            "cdea920c-ea3f-4c82-a7c0-54b300b11844",
            "a611ae19-6fe2-41db-84b2-aaf3937f742a",
            "59964cbb-2130-467c-aea4-81a2e963277d",
            "356a18ee-c88b-4763-be3f-36bfe1fbdf1a",
            "ac1527ac-26d8-4320-9652-d9d201b17026",
            "4ea4fd2d-3ed9-4da9-bbdc-00d277b59da1",
            "4c28c4b4-4b5c-4bee-a36e-0943b23b8fdc",
            "d5c372a9-5d4c-45f8-987c-a4f4c3727526",
            "c1d49004-2113-43e5-bec7-521bc6eda162",
            "e097ad83-05f2-4ba8-bac4-71c4d0b9dae8",
            "e145631c-a5c5-420a-a66a-8644c1a84d6c",
            "a86b05ef-a1e2-4169-91f8-3a6ffc7c127c",
            "412bcab7-8ba9-49f8-b92b-85545a0eff2a",
            "01d9ad72-5b37-4e4d-96ef-12541877ae55",
            "13746bb4-8e21-4cac-b126-fa1053d99ce5",
            "b5a324d7-bc78-4248-862e-18d76525e6ff",
            "ec2465ef-1d99-4aa2-aed0-12926b09bd1b",
            "a8d33480-b9e2-4db7-9e65-3241d9234f91",
            "38e6ff51-74c3-4a6e-8bb8-337b4df809f1",
            "816f799b-b145-4080-8c7b-59d441ea7611",
            "cffa9234-a8a5-42ea-a239-318800b722af",
            "38e1567f-9314-412d-8751-09ef7aaaee15",
            "eebd19bb-b45b-41c9-80e3-bddca0462d95",
            "9163750c-05c0-41a5-a347-b1d61085b7c8",
            "d219b2ed-8b80-43df-af87-c7056d275085",
            "8b055c18-65b8-44bd-93de-3f6853c8e88d",
            "2271c0f0-7b44-4845-a940-9b148a77ca5e",
            "3f86d524-b4e9-4909-972c-1b697a79898d",
            "48aa8251-6704-499e-9d43-6b571e771d32",
            "700d27b7-5d4b-47ff-abde-321ded732d61",
            "ecdeab5c-5d89-4f07-8a9d-3425f5e26e44",
            "268bd7f2-babb-4bdb-84f5-0dbf14e493ec",
            "af5267c7-21cb-4ae5-8a18-37c55c089715",
            "65adc4e0-7172-4277-a751-e6fbc60e5556",
            "61129e40-4b30-4080-9c05-fddea2874917",
            "8bb6db06-110e-4da5-a873-03004d0b018f",
            "e12aa083-07ca-4400-bddd-f814c6408490",
            "95bf2b82-5a26-44ab-8811-2b793708838f",
            "04b33a50-b352-42af-b013-4bb7d6cc53a5",
            "ba3eb74a-5a9c-470f-8570-b42a3e4615d2",
            "4d0bc171-666d-4011-91cc-35ada0815e6c",
            "89a8006e-e11e-41f0-be2a-f75b45cac04b",
            "56c78c8b-9070-4aac-925d-8a7d9ad40920",
            "847c272f-114e-41a8-ab2c-710754cbdf1a",
            "9e8d1004-e1d8-4e20-a199-f4e926c84945",
            "95d92daa-9086-4b6d-84fe-55e366e8d733",
            "44263bf7-2a18-423c-83fd-12b7304c9fb2",
            "7ce14f86-29be-46b5-b685-4f6d94259e09",
            "9574d17f-c1a7-42a7-9bfd-4aa1b5a11c24",
            "09f79be5-0207-46af-9894-b012f4cd8b28",
            "c0eec5a3-fda6-43b2-89c0-e6e298abbd4a",
            "b5f1c3f6-93c9-445d-882e-7e0b2821589a",
            "95004bf6-2de3-43cd-9c8f-148f5c80a5c5",
            "ac103a8f-5ae8-46f2-b260-680041442621",
            "f8959fe8-c6c0-43bf-b119-a204d400f7e3",
            "92332108-ac3a-4416-851e-b74328cd6cd3",
            "e9b75dc1-aa91-4870-a97c-903b327e12bc",
            "df86b4df-37ba-4d5e-bd83-80ef00c5983e",
            "12be2d52-9f43-4af3-9391-97b4c872653a",
            "e10567d9-4820-4d19-a89e-64d790f8a6a2",
            "c1a44650-6bd4-4064-9ab2-e370661c09f2",
            "6c0c16e2-cabf-4700-a91e-ff98681e30a4",
            "37a76baf-c0cb-4fca-9d29-52c69486b76a",
            "027db969-1832-48b0-9cae-5c215b45db87",
            "da6dea88-3208-42b8-9b30-f9d3f2dfb69a",
            "39522883-4ade-49d4-b21e-b7b60a133095",
            "f9664b17-97c8-4e5a-b19e-5027bb4abf2e",
            "f562fd86-1511-4b7b-8b5f-0bc31006abbc",
            "e42d494a-2375-4b37-920c-eab18d7e57e4",
            "afd320bd-3564-4367-9b59-ab9ae1d6a0a9",
            "5a7e3afb-64c2-4a15-8d2e-5f567c36424a",
            "5aa71e1f-99a6-44cb-9027-513bb5538289",
            "6ad358dd-fa86-41cc-ab80-7e138d125431",
            "6ea10b66-18a6-4bce-a7e3-5e6d48566644",
            "09a50530-90ab-4b4d-a937-6b974f063191",
            "56eeb7f8-8740-470c-b6ca-9ced00716b55",
            "acf782e7-6803-4e63-931f-895b6743a588",
            "e8c7e534-6b29-4776-91ff-1593e9bd6ff7",
            "cbac01a1-36d1-413c-af76-05b73711fafe",
            "468b0602-725a-4cb6-810e-ca88f35bd501",
            "7a56372d-fe11-400f-a027-df8c53584a7f",
            "a9319a1a-6ef7-4f69-9827-423bba1ebc3c",
            "71f71c73-6193-4e89-a63b-b7662d6e178a",
            "afa7082f-8037-499c-9c25-d8de44aeabb6",
            "edceef9b-446f-49b6-801b-444b155bb56c",
            "bc0a3c54-c970-4e70-9523-e069ba074e1a",
            "e430e55a-3d8e-4e3c-9869-9ce1b53e6fa4",
            "c65b7e00-f791-4f60-b501-fae4b825a166",
            "57b1a2aa-a531-4ad8-82ef-726a4cacdc88",
            "43538d33-f7fe-45b2-8ba7-bb5cf81a0ebb",
            "2b404ec5-be2d-4675-ab68-6fedcdca3bab",
            "25b599fb-7044-4e3c-a603-f884a6da9616",
            "80878da6-79ac-4ae3-b4ee-719e3e215987",
            "6fdc376a-c2bb-4c7c-abe1-f8dcffd133b9",
            "28e0a317-2515-4bb6-9408-4708535f868a",
            "380fc5fa-f930-4b28-8a76-819026b24346",
            "4e73988d-2cf8-4e3c-8ffc-6b2186d1dfd1",
            "521f8346-9197-4556-87c6-5fac50ff72d6",
            "9dda7a1a-881c-4c8e-9319-248534575bdb",
            "19cebc81-0504-47ae-87a1-26efb4712729",
            "63b092a2-190c-4b6d-b4c5-f227f136fbd9",
            "84329087-8614-4d9a-aa20-be012394b2e9",
            "32d11ee6-213b-4d34-9db9-a19e2d5e209c",
            "f381714a-782f-406a-ae00-cfa22899f875",
            "74e493df-4b36-450e-8b37-ed5523b6900d",
            "8b6ab10a-9ab5-4df1-b6a1-8d18cb9d3d8a",
            "fcb73185-91d1-4210-adea-dbbd2857920b",
            "05ad15e6-c0d6-4e79-b95b-c4dc5f834109",
            "b496eb6d-a677-4e1f-94a9-96f5881118b9",
            "fb26e620-8732-4182-8890-8cde57288290",
            "1c7d0afd-964c-4b18-a54f-77c4ea09f8f2",
            "e1621bc4-3129-41fe-8272-9f98ee34095c",
            "4e7f3250-f994-421d-ae43-93e687dcec25",
            "6b3e628c-8baa-405b-9e95-ac4553904020",
            "32466aa8-da8e-4c68-905d-b787606ff491",
            "05f80628-5dd6-4542-9fa7-02369c6aa696",
            "a6677ea4-b47a-4e94-9e0d-7d3f33d59c4d"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550394106834,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "3626edc1-bd04-4431-afdd-c89648a7050f",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1571298000000,
          "parent_id": "93230d97-d1d1-4ec4-bc18-7322135ae6ec",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential iOS"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 337
        }
      },
      "468b0602-725a-4cb6-810e-ca88f35bd501": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "932eae0d-4cde-4c0d-9744-365105e27ec7",
            "269173dd-667a-4b82-a1cd-36e3717f93ba",
            "3d9a20a4-2d9f-4e4a-b7c2-d91e859a3611",
            "c9cb570c-3044-4fd6-8b80-8dec4e0f2e31",
            "b29f520a-f34f-47de-8247-0e132e4f3da9",
            "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
            "1b053edc-5ef9-4916-8e4b-baf036baaacb"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441700000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "468b0602-725a-4cb6-810e-ca88f35bd501",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550442120000,
          "parent_id": "3626edc1-bd04-4431-afdd-c89648a7050f",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["UIKit Dynamics"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 32
        }
      },
      "52fbfbe8-76a8-4dab-9b5f-897e6fc63aba": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "52fbfbe8-76a8-4dab-9b5f-897e6fc63aba",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "@implementation EmptyAnimator\n\n- (void)animateTransition:(id<UIViewControllerContextTransitioning>)transitionContext\n{\n    \n}\n\n- (NSTimeInterval)transitionDuration:(id<UIViewControllerContextTransitioning>)transitionContext\n{\n    return 0.0;\n}\n\n@end"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "55742996-585d-483a-81f6-d12fa91d71f1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714042,
          "id": "55742996-585d-483a-81f6-d12fa91d71f1",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714042,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This example shows how to make an interactive presentation transition with “real-world” physics similar to iOS’s notifications screen."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5a132292-4f45-480e-8337-53d6d87522c0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "5a132292-4f45-480e-8337-53d6d87522c0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "@interface ObjCViewController () <UIViewControllerTransitioningDelegate>\n@property (nonatomic, strong) ShadeAnimator *presentingAnimator;\n@property (nonatomic, strong) ShadeAnimator *dismissingAnimator;\n@property (nonatomic, strong) UILabel *label;\n@property (nonatomic, strong) ShadeViewController *shadeVC;\n@end\n\n@implementation ObjCViewController\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    self.label.text = @\"Swipe Down From Top\";\n    self.shadeVC = [[ShadeViewController alloc] init];\n    self.presentingAnimator = [[ShadeAnimator alloc] initWithIsAppearing:YES presentingVC:self presentedVC:self.shadeVC transitionDelegate:self];\n    self.dismissingAnimator = [[ShadeAnimator alloc] initWithIsAppearing:NO presentingVC:self presentedVC:self.shadeVC transitionDelegate:self];\n}\n\n- (UILabel *)label\n{\n    if (!_label)\n    {\n        _label = [[UILabel alloc] init];\n        _label.textColor = [UIColor blueColor];\n        _label.translatesAutoresizingMaskIntoConstraints = NO;\n        [self.view addSubview:_label];\n        [_label.centerXAnchor constraintEqualToAnchor:self.view.centerXAnchor].active = YES;\n        [_label.centerYAnchor constraintEqualToAnchor:self.view.centerYAnchor].active = YES;\n    }\n    return _label;\n}\n\n#pragma mark - UIViewControllerTransitioningDelegate\n\n- (id<UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)presented presentingController:(UIViewController *)presenting sourceController:(UIViewController *)source\n{\n    return [[EmptyAnimator alloc] init];\n}\n\n- (id<UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)dismissed\n{\n    return [[EmptyAnimator alloc] init];\n}\n\n- (id<UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id<UIViewControllerAnimatedTransitioning>)animator\n{\n    return self.presentingAnimator;\n}\n\n- (id<UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id<UIViewControllerAnimatedTransitioning>)animator\n{\n    return self.dismissingAnimator;\n}\n\n@end"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "6511e884-7b3a-4773-8c4d-c2d36cc3264d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714046,
          "id": "6511e884-7b3a-4773-8c4d-c2d36cc3264d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714046,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Finally we need to actually create the "],
              ["ShadeAnimator", [["c"]]],
              [" which is a subclass of "],
              ["UIDynamicBehavior", [["c"]]],
              [" which conforms to "],
              ["UIViewControllerInteractiveTransitioning", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "69a9cb8b-7426-4237-a872-f928fc3ff624": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714046,
          "id": "69a9cb8b-7426-4237-a872-f928fc3ff624",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714046,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "class ShadeAnimator: UIDynamicBehavior\n{\n    // Whether we are presenting or dismissing\n    let isAppearing: Bool\n\n    // The view controller that is not the shade\n    weak var presentingVC: UIViewController?\n\n    // The view controller that is the shade\n    weak var presentedVC: UIViewController?\n\n    // The delegate will vend the animator\n    weak var transitionDelegate: UIViewControllerTransitioningDelegate?\n    \n    // Feedback generator for haptics on collisions\n    let impactFeedbackGenerator = UIImpactFeedbackGenerator(style: .light)\n    \n    // The context given to the animator at the start of the transition\n    var transitionContext: UIViewControllerContextTransitioning?\n    \n    // Time limit of the dynamic part of the animation\n    var finishTime: TimeInterval = 4.0\n    \n    // The Pan Gesture that drives the transition. Not using EdgePan because triggers Notifications screen\n    lazy var pan: UIPanGestureRecognizer =\n    {\n        let pan = UIPanGestureRecognizer(target: self, action: #selector(self.handlePan(sender:)))\n        return pan\n    }()\n    \n    // The dynamic animator that we add `ShadeAnimator` to\n    lazy var animator: UIDynamicAnimator! =\n    {\n        let animator = UIDynamicAnimator(referenceView: self.transitionContext!.containerView)\n        return animator\n    }()\n    \n    // init with all of our dependencies\n    init(isAppearing: Bool, presentingVC: UIViewController, presentedVC: UIViewController, transitionDelegate: UIViewControllerTransitioningDelegate)\n    {\n        self.isAppearing = isAppearing\n        self.presentingVC = presentingVC\n        self.presentedVC = presentedVC\n        self.transitionDelegate = transitionDelegate\n        super.init()\n        self.impactFeedbackGenerator.prepare()\n        \n        if isAppearing\n        {\n            self.presentingVC?.view.addGestureRecognizer(pan)\n        }\n        else\n        {\n            self.presentedVC?.view.addGestureRecognizer(pan)\n        }\n        \n    }\n    \n    // Setup and moves shade view controller to just above screen if appearing\n    func setupViewsForTransition(with transitionContext: UIViewControllerContextTransitioning)\n    {\n        // Get relevant views and view controllers from transitionContext\n        guard let fromVC = transitionContext.viewController(forKey: .from),\n            let toVC = transitionContext.viewController(forKey: .to),\n            let toView = toVC.view else { return }\n        \n        let containerView = transitionContext.containerView\n        \n        // Hold refrence to transitionContext to notify it of completion\n        self.transitionContext = transitionContext\n        if isAppearing\n        {\n            // Position toView  just off-screen\n            let fromViewInitialFrame = transitionContext.initialFrame(for: fromVC)\n            var toViewInitialFrame = toView.frame\n            toViewInitialFrame.origin.y -= toViewInitialFrame.height\n            toViewInitialFrame.origin.x = fromViewInitialFrame.width * 0.5 - toViewInitialFrame.width * 0.5\n            toView.frame = toViewInitialFrame\n            \n            containerView.addSubview(toView)\n        }\n        else\n        {\n            fromVC.view.addGestureRecognizer(pan)\n        }\n    }\n    \n    // Handles the entire interaction from presenting/dismissing to completion\n    func handlePan(sender: UIPanGestureRecognizer)\n    {\n        let location = sender.location(in: transitionContext?.containerView)\n        let velocity = sender.velocity(in: transitionContext?.containerView)\n        let fromVC = transitionContext?.viewController(forKey: .from)\n        let toVC = transitionContext?.viewController(forKey: .to)\n        \n        let touchStartHeight: CGFloat = 90.0\n        let touchLocationFromBottom: CGFloat = 20.0\n        \n        switch sender.state\n        {\n        case .began:\n            let beginLocation = sender.location(in: sender.view)\n            if isAppearing\n            {\n                guard beginLocation.y <= touchStartHeight,\n                      let presentedVC = self.presentedVC else { break }\n                presentedVC.modalPresentationStyle = .custom\n                presentedVC.transitioningDelegate = transitionDelegate\n                presentingVC?.present(presentedVC, animated: true)\n            }\n            else\n            {\n                guard beginLocation.y >= (sender.view?.frame.height ?? 0.0) - touchStartHeight else { break }\n                presentedVC?.dismiss(animated: true)\n            }\n        case .changed:\n            guard let view = isAppearing ? toVC?.view : fromVC?.view else { return }\n            UIView.animate(withDuration: 0.2)\n            {\n                view.frame.origin.y = location.y - view.bounds.height + touchLocationFromBottom\n            }\n            \n            transitionContext?.updateInteractiveTransition(view.frame.maxY / view.frame.height\n            )\n        case .ended, .cancelled:\n            guard let view = isAppearing ? toVC?.view : fromVC?.view else { return }\n            let isCancelled = isAppearing ? (velocity.y < 0.5 || view.center.y < 0.0) : (velocity.y > 0.5 || view.center.y > 0.0)\n            addAttachmentBehavior(with: view, isCancelled: isCancelled)\n            addCollisionBehavior(with: view)\n            addItemBehavior(with: view)\n            \n            animator.addBehavior(self)\n            animator.delegate = self\n            \n            self.action =\n            { [weak self] in\n                guard let strongSelf = self else { return }\n                if strongSelf.animator.elapsedTime > strongSelf.finishTime\n                {\n                    strongSelf.animator.removeAllBehaviors()\n                }\n                else\n                {\n                    strongSelf.transitionContext?.updateInteractiveTransition(view.frame.maxY / view.frame.height\n                    )\n                }\n            }\n        default:\n            break\n        }\n    }\n    \n    // Add collision behavior that causes bounce when finished\n    func addCollisionBehavior(with view: UIView)\n    {\n        let collisionBehavior = UICollisionBehavior(items: [view])\n        let insets = UIEdgeInsets(top: -view.bounds.height, left: 0.0, bottom: 0.0, right: 0.0)\n        collisionBehavior.setTranslatesReferenceBoundsIntoBoundary(with: insets)\n        collisionBehavior.collisionDelegate = self\n        self.addChildBehavior(collisionBehavior)\n    }\n    \n    // Add attachment behavior that pulls shade either to top or bottom\n    func addAttachmentBehavior(with view: UIView, isCancelled: Bool)\n    {\n        let anchor: CGPoint\n        switch (isAppearing, isCancelled)\n        {\n        case (true, true), (false, false):\n            anchor = CGPoint(x: view.center.x, y: -view.frame.height)\n        case (true, false), (false, true):\n            anchor = CGPoint(x: view.center.x, y: view.frame.height)\n        }\n        let attachmentBehavior = UIAttachmentBehavior(item: view, attachedToAnchor: anchor)\n        attachmentBehavior.damping = 0.1\n        attachmentBehavior.frequency = 3.0\n        attachmentBehavior.length = 0.5 * view.frame.height\n        self.addChildBehavior(attachmentBehavior)\n    }\n    \n    // Makes view more bouncy \n    func addItemBehavior(with view: UIView)\n    {\n        let itemBehavior = UIDynamicItemBehavior(items: [view])\n        itemBehavior.allowsRotation = false\n        itemBehavior.elasticity = 0.6\n        self.addChildBehavior(itemBehavior)\n    }\n    \n}\nextension ShadeAnimator: UIDynamicAnimatorDelegate\n{\n    // Determines transition has ended\n    func dynamicAnimatorDidPause(_ animator: UIDynamicAnimator)\n    {\n        guard let transitionContext = self.transitionContext else { return }\n        let fromVC = transitionContext.viewController(forKey: .from)\n        let toVC = transitionContext.viewController(forKey: .to)\n        guard let view = isAppearing ? toVC?.view : fromVC?.view else { return }\n        switch (view.center.y < 0.0, isAppearing)\n        {\n        case (true, true), (true, false):\n            view.removeFromSuperview()\n            transitionContext.finishInteractiveTransition()\n            transitionContext.completeTransition(!isAppearing)\n        case (false, true):\n            toVC?.view.frame = transitionContext.finalFrame(for: toVC!)\n            transitionContext.finishInteractiveTransition()\n            transitionContext.completeTransition(true)\n        case (false, false):\n            fromVC?.view.frame = transitionContext.initialFrame(for: fromVC!)\n            transitionContext.cancelInteractiveTransition()\n            transitionContext.completeTransition(false)\n        }\n        childBehaviors.forEach { removeChildBehavior($0) }\n        animator.removeAllBehaviors()\n        self.animator = nil\n        self.transitionContext = nil\n    }\n}\nextension ShadeAnimator: UICollisionBehaviorDelegate\n{\n    // Triggers haptics\n    func collisionBehavior(_ behavior: UICollisionBehavior, beganContactFor item: UIDynamicItem, withBoundaryIdentifier identifier: NSCopying?, at p: CGPoint)\n    {\n        guard p.y > 0.0 else { return }\n        impactFeedbackGenerator.impactOccurred()\n    }\n}\nextension ShadeAnimator: UIViewControllerInteractiveTransitioning\n{\n    // Starts transition\n    func startInteractiveTransition(_ transitionContext: UIViewControllerContextTransitioning)\n    {\n        setupViewsForTransition(with: transitionContext)\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "7a4aef7d-ef5a-45fc-90cd-a8d2f1855e4d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714044,
          "id": "7a4aef7d-ef5a-45fc-90cd-a8d2f1855e4d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714044,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "To start with, we need a presenting view controller that the shade will appear over. This view controller will also act as our "
              ],
              ["UIViewControllerTransitioningDelegate", [["c"]]],
              [
                " for our presented view controller and will vend animators for our transition. So we’ll create instances of our interactive animators (one for presenting, one for dismissing). We’ll also create an instance of the shade view controller, which, in this example, is just a view controller with a label. Because we want the same pan gesture to drive the entire interaction we pass references to the presenting view controller and the shade into our interactive animators."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "7e2fddc8-2820-4286-bb71-2bf5dac1503f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "7e2fddc8-2820-4286-bb71-2bf5dac1503f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [["Objective-C"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 1
        }
      },
      "82edbcc1-fab6-4eff-abbf-5c104d086ee0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714044,
          "id": "82edbcc1-fab6-4eff-abbf-5c104d086ee0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714044,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [["Swift"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 1
        }
      },
      "8b572415-b814-46a4-b956-80e56ac35135": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714047,
          "id": "8b572415-b814-46a4-b956-80e56ac35135",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714047,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The animator triggers the start of the transition when the pan gesture begins. And simply moves the view as the gesture changes. But when the gesture ends that is when "
              ],
              ["UIDynamicBehaviors", [["c"]]],
              [
                " determines if the transition should be completed or cancelled. To do so it uses an attachment and collision behavior. For more information see the "
              ],
              [
                "2013 WWDC Session “Advanced Techniques with UIKit Dynamics",
                [["a", "https://developer.apple.com/videos/play/wwdc2013/221/"]]
              ],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "8e8ce87a-857d-4a41-a742-5c41652cf0af": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714046,
          "id": "8e8ce87a-857d-4a41-a742-5c41652cf0af",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714046,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "@interface ShadeAnimator() <UIDynamicAnimatorDelegate, UICollisionBehaviorDelegate>\n@property (nonatomic, assign) BOOL isAppearing;\n@property (nonatomic, weak) UIViewController *presentingVC;\n@property (nonatomic, weak) UIViewController *presentedVC;\n@property (nonatomic, weak) NSObject<UIViewControllerTransitioningDelegate> *transitionDelegate;\n@property (nonatomic, strong) UIImpactFeedbackGenerator *impactFeedbackGenerator;\n@property (nonatomic, strong) id<UIViewControllerContextTransitioning> transitionContext;\n@property (nonatomic, assign) NSTimeInterval finishTime;\n@property (nonatomic, strong) UIPanGestureRecognizer *pan;\n@property (nonatomic, strong) UIDynamicAnimator *animator;\n@end\n\n@implementation ShadeAnimator\n\n- (instancetype)initWithIsAppearing:(BOOL)isAppearing presentingVC:(UIViewController *)presentingVC presentedVC:(UIViewController *)presentedVC transitionDelegate:(id<UIViewControllerTransitioningDelegate>)transitionDelegate\n{\n    self = [super init];\n    if (self)\n    {\n        _isAppearing = isAppearing;\n        _presentingVC = presentingVC;\n        _presentedVC = presentedVC;\n        _transitionDelegate = transitionDelegate;\n        _impactFeedbackGenerator = [[UIImpactFeedbackGenerator alloc]initWithStyle:UIImpactFeedbackStyleLight];\n        [_impactFeedbackGenerator prepare];\n        if (_isAppearing)\n        {\n            [_presentingVC.view addGestureRecognizer:self.pan];\n        }\n        else\n        {\n            [_presentedVC.view addGestureRecognizer:self.pan];\n        }\n    }\n    return self;\n}\n\n#pragma mark - Lazy Init\n- (UIPanGestureRecognizer *)pan\n{\n    if (!_pan)\n    {\n        _pan = [[UIPanGestureRecognizer alloc]initWithTarget:self action:@selector(handlePan:)];\n    }\n    return _pan;\n}\n\n- (UIDynamicAnimator *)animator\n{\n    if (!_animator)\n    {\n        _animator = [[UIDynamicAnimator alloc]initWithReferenceView:self.transitionContext.containerView];\n    }\n    return _animator;\n}\n\n#pragma mark - Setup\n- (void)setupViewForTransitionWithContext:(id<UIViewControllerContextTransitioning>)transitionContext\n{\n    UIViewController *fromVC = [transitionContext viewControllerForKey:UITransitionContextFromViewControllerKey];\n    UIViewController *toVC = [transitionContext viewControllerForKey:UITransitionContextToViewControllerKey];\n    UIView *toView = toVC.view;\n    UIView *containerView = transitionContext.containerView;\n    self.transitionContext = transitionContext;\n    if (self.isAppearing)\n    {\n        CGRect fromViewInitialFrame = [transitionContext initialFrameForViewController:fromVC];\n        CGRect toViewInitialFrame = toView.frame;\n        toViewInitialFrame.origin.y -= CGRectGetHeight(toViewInitialFrame);\n        toViewInitialFrame.origin.x = CGRectGetWidth(fromViewInitialFrame) * 0.5 - CGRectGetWidth(toViewInitialFrame) * 0.5;\n        \n        [containerView addSubview:toView];\n    }\n    else\n    {\n        [fromVC.view addGestureRecognizer:self.pan];\n    }\n}\n\n#pragma mark - Gesture\n- (void)handlePan:(UIPanGestureRecognizer *)sender\n{\n    CGPoint location = [sender locationInView:self.transitionContext.containerView];\n    CGPoint velocity = [sender velocityInView:self.transitionContext.containerView];\n    UIViewController *fromVC = [self.transitionContext viewControllerForKey:UITransitionContextFromViewControllerKey];\n    UIViewController *toVC = [self.transitionContext viewControllerForKey:UITransitionContextToViewControllerKey];\n    \n    CGFloat touchStartHeight = 90.0;\n    CGFloat touchLocationFromBottom = 20.0;\n    \n    if (sender.state == UIGestureRecognizerStateBegan)\n    {\n        CGPoint beginLocation = [sender locationInView:sender.view];\n        if (self.isAppearing)\n        {\n            if (beginLocation.y <= touchStartHeight)\n            {\n                self.presentedVC.modalPresentationStyle = UIModalPresentationCustom;\n                self.presentedVC.transitioningDelegate = self.transitionDelegate;\n                [self.presentingVC presentViewController:self.presentedVC animated:YES completion:nil];\n            }\n        }\n        else\n        {\n            if (beginLocation.y >= [sender locationInView:sender.view].y - touchStartHeight)\n            {\n                [self.presentedVC dismissViewControllerAnimated:true completion:nil];\n            }\n        }\n    }\n    else if (sender.state == UIGestureRecognizerStateChanged)\n    {\n        UIView *view = self.isAppearing ? toVC.view : fromVC.view;\n        [UIView animateWithDuration:0.2 animations:^{\n            CGRect frame = view.frame;\n            frame.origin.y = location.y - CGRectGetHeight(view.bounds) + touchLocationFromBottom;\n            view.frame = frame;\n        }];\n        [self.transitionContext updateInteractiveTransition:CGRectGetMaxY(view.frame) / CGRectGetHeight(view.frame)];\n    }\n    else if (sender.state == UIGestureRecognizerStateEnded || sender.state == UIGestureRecognizerStateCancelled)\n    {\n        UIView *view = self.isAppearing ? toVC.view : fromVC.view;\n        BOOL isCancelled = self.isAppearing ? (velocity.y < 0.5 || view.center.y < 0.0) : (velocity.y > 0.5 || view.center.y > 0.0);\n        [self addAttachmentBehaviorWithView:view isCancelled:isCancelled];\n        [self addCollisionBehaviorWithView:view];\n        [self addItemBehaviorWithView:view];\n        \n        [self.animator addBehavior:self];\n        self.animator.delegate = self;\n        \n        __weak ShadeAnimator *weakSelf = self;\n        self.action =\n        ^{\n            if (weakSelf.animator.elapsedTime > weakSelf.finishTime)\n            {\n                [weakSelf.animator removeAllBehaviors];\n            }\n            else\n            {\n                [weakSelf.transitionContext updateInteractiveTransition:CGRectGetMaxY(view.frame) / CGRectGetHeight(view.frame)];\n            }\n        };\n    }\n}\n\n#pragma mark - UIViewControllerInteractiveTransitioning\n- (void)startInteractiveTransition:(id<UIViewControllerContextTransitioning>)transitionContext\n{\n    [self setupViewForTransitionWithContext:transitionContext];\n}\n\n#pragma mark - Behaviors\n- (void)addCollisionBehaviorWithView:(UIView *)view\n{\n    UICollisionBehavior *collisionBehavior = [[UICollisionBehavior alloc]initWithItems:@[view]];\n    UIEdgeInsets insets = UIEdgeInsetsMake(-CGRectGetHeight(view.bounds), 0.0, 0.0, 0.0);\n    [collisionBehavior setTranslatesReferenceBoundsIntoBoundaryWithInsets:insets];\n    collisionBehavior.collisionDelegate = self;\n    [self addChildBehavior:collisionBehavior];\n}\n\n- (void)addItemBehaviorWithView:(UIView *)view\n{\n    UIDynamicItemBehavior *itemBehavior = [[UIDynamicItemBehavior alloc]initWithItems:@[view]];\n    itemBehavior.allowsRotation = NO;\n    itemBehavior.elasticity = 0.6;\n    [self addChildBehavior:itemBehavior];\n}\n\n- (void)addAttachmentBehaviorWithView:(UIView *)view isCancelled:(BOOL)isCancelled\n{\n    CGPoint anchor;\n    if ((self.isAppearing && isCancelled) || (!self.isAppearing && isCancelled))\n    {\n        anchor = CGPointMake(view.center.x, -CGRectGetHeight(view.frame));\n    }\n    else\n    {\n        anchor = CGPointMake(view.center.x, -CGRectGetHeight(view.frame));\n    }\n    UIAttachmentBehavior *attachmentBehavior = [[UIAttachmentBehavior alloc]initWithItem:view attachedToAnchor:anchor];\n    attachmentBehavior.damping = 0.1;\n    attachmentBehavior.frequency = 3.0;\n    attachmentBehavior.length = 0.5 * CGRectGetHeight(view.frame);\n    [self addChildBehavior:attachmentBehavior];\n}\n\n#pragma mark - UICollisionBehaviorDelegate\n- (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id<UIDynamicItem>)item withBoundaryIdentifier:(id<NSCopying>)identifier atPoint:(CGPoint)p\n{\n    if (p.y > 0.0)\n    {\n        [self.impactFeedbackGenerator impactOccurred];\n    }\n}\n\n#pragma mark - UIDynamicAnimatorDelegate\n- (void)dynamicAnimatorDidPause:(UIDynamicAnimator *)animator\n{\n    UIViewController *fromVC = [self.transitionContext viewControllerForKey:UITransitionContextFromViewControllerKey];\n    UIViewController *toVC = [self.transitionContext viewControllerForKey:UITransitionContextToViewControllerKey];\n    UIView *view = self.isAppearing ? toVC.view : fromVC.view;\n    if (view.center.y < 0.0 && (self.isAppearing ||  !self.isAppearing))\n    {\n        [view removeFromSuperview];\n        [self.transitionContext finishInteractiveTransition];\n        [self.transitionContext completeTransition:!self.isAppearing];\n    }\n    else if (view.center.y >= 0.0 && self.isAppearing)\n    {\n        toVC.view.frame = [self.transitionContext finalFrameForViewController:toVC];\n        [self.transitionContext finishInteractiveTransition];\n        [self.transitionContext completeTransition:YES];\n    }\n    else\n    {\n        fromVC.view.frame = [self.transitionContext initialFrameForViewController:fromVC];\n        [self.transitionContext cancelInteractiveTransition];\n        [self.transitionContext completeTransition:NO];\n    }\n    for (UIDynamicBehavior *behavior in self.childBehaviors)\n    {\n        [self removeChildBehavior:behavior];\n    }\n    [animator removeAllBehaviors];\n    self.animator = nil;\n    self.transitionContext = nil;\n}\n\n@end"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "91a7cd0f-4ee6-4117-b19c-30917145d74b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714044,
          "id": "91a7cd0f-4ee6-4117-b19c-30917145d74b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714044,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "source": [["https://i.stack.imgur.com/j0oBa.gif"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "image",
          "version": 5
        }
      },
      "9946ffe9-1d81-468b-8501-e8e83ada3159": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714046,
          "id": "9946ffe9-1d81-468b-8501-e8e83ada3159",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714046,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [["Swift"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 5
        }
      },
      "aefb61c8-d1b7-472c-b81c-80a805ff78c6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "55742996-585d-483a-81f6-d12fa91d71f1",
            "91a7cd0f-4ee6-4117-b19c-30917145d74b",
            "7a4aef7d-ef5a-45fc-90cd-a8d2f1855e4d",
            "82edbcc1-fab6-4eff-abbf-5c104d086ee0",
            "1418c264-981e-47fe-91b0-4a5cc7007d9a",
            "ef985c0a-b083-47c9-9b86-db57f733926a",
            "5a132292-4f45-480e-8337-53d6d87522c0",
            "bcbcd72a-8847-4a36-b7a9-16a3369d29c7",
            "b20f0530-302f-402b-a187-de5156c7aae6",
            "3001e29b-2e15-4879-88c0-284a679abe8c",
            "7e2fddc8-2820-4286-bb71-2bf5dac1503f",
            "52fbfbe8-76a8-4dab-9b5f-897e6fc63aba",
            "6511e884-7b3a-4773-8c4d-c2d36cc3264d",
            "9946ffe9-1d81-468b-8501-e8e83ada3159",
            "69a9cb8b-7426-4237-a872-f928fc3ff624",
            "f5533485-ba7a-4c10-b73c-a8d73e974b3a",
            "8e8ce87a-857d-4a41-a742-5c41652cf0af",
            "8b572415-b814-46a4-b956-80e56ac35135"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714057,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550713320000,
          "parent_id": "468b0602-725a-4cb6-810e-ca88f35bd501",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Shade Transition with Real-World Physics Using UIDynamicBehaviors"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 8
        }
      },
      "b20f0530-302f-402b-a187-de5156c7aae6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "b20f0530-302f-402b-a187-de5156c7aae6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [["Swift"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 5
        }
      },
      "bcbcd72a-8847-4a36-b7a9-16a3369d29c7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "bcbcd72a-8847-4a36-b7a9-16a3369d29c7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "We want really only ever want to present our shade through an interactive transition but because of how "
              ],
              ["UIViewControllerTransitioningDelegate", [["c"]]],
              [
                " works if we don’t return a regular animation controller our interactive controller will never be used. Because of that we create an "
              ],
              ["EmptyAnimator", [["c"]]],
              [" class that conforms to "],
              ["UIViewControllerAnimatedTransitioning", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ef985c0a-b083-47c9-9b86-db57f733926a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714045,
          "id": "ef985c0a-b083-47c9-9b86-db57f733926a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714045,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [["Objective-C"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 1
        }
      },
      "f5533485-ba7a-4c10-b73c-a8d73e974b3a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550441714046,
          "id": "f5533485-ba7a-4c10-b73c-a8d73e974b3a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550441714046,
          "parent_id": "aefb61c8-d1b7-472c-b81c-80a805ff78c6",
          "parent_table": "block",
          "properties": {
            "title": [["Objective-C"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
