2047 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "6bba0a02-384b-49ea-8880-5d10a30a1075"
      },
      "version": -1
    }
  ]
}
Response:+1795
{
  "recordMap": {
    "block": {
      "6bba0a02-384b-49ea-8880-5d10a30a1075": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "178cda78-7258-4dd2-9429-6d3b0b96b0a4",
            "0c5acfa0-7d32-46bc-ba37-a50d9f841faf",
            "799afa08-f444-4543-a9e3-63caeb423182",
            "6be5f7bd-15e6-495e-ad63-2f68413d02fa",
            "5aedc29c-9c02-41f8-97c8-c2a44cf8686e",
            "c2383aba-712e-4c62-9dc4-0175f906c00d",
            "f092bdce-e947-4360-8b48-c5e142e6643c",
            "a21f6534-a24b-4298-a546-d8530cf2210b",
            "80a3af2a-8640-4a75-be3f-fe88ba605367",
            "d089082f-735e-48f5-a7da-c22b08157a9e",
            "8604fd2a-ef13-4d05-8a69-78391c06a684",
            "f9e2ffb7-75c9-4fb7-861e-f6852a9b0ba2"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354117,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354117,
          "parent_id": "ce3c34ba-e91e-4ecc-aec0-76d8276ac5fa",
          "parent_table": "block",
          "properties": {
            "title": [["String Literal Types"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      }
    }
  }
}
25245 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "6bba0a02-384b-49ea-8880-5d10a30a1075"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+24985
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0c5acfa0-7d32-46bc-ba37-a50d9f841faf": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354115,
          "id": "0c5acfa0-7d32-46bc-ba37-a50d9f841faf",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354115,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              ["let myFavoritePet: \"dog\";\nmyFavoritePet = \"dog\";"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "178cda78-7258-4dd2-9429-6d3b0b96b0a4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354107,
          "id": "178cda78-7258-4dd2-9429-6d3b0b96b0a4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354107,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "String literal types allow you to specify the exact value a string can have."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5aedc29c-9c02-41f8-97c8-c2a44cf8686e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "5aedc29c-9c02-41f8-97c8-c2a44cf8686e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Together with Type Aliases and Union Types you get a enum-like behavior."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "6bba0a02-384b-49ea-8880-5d10a30a1075": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "178cda78-7258-4dd2-9429-6d3b0b96b0a4",
            "0c5acfa0-7d32-46bc-ba37-a50d9f841faf",
            "799afa08-f444-4543-a9e3-63caeb423182",
            "6be5f7bd-15e6-495e-ad63-2f68413d02fa",
            "5aedc29c-9c02-41f8-97c8-c2a44cf8686e",
            "c2383aba-712e-4c62-9dc4-0175f906c00d",
            "f092bdce-e947-4360-8b48-c5e142e6643c",
            "a21f6534-a24b-4298-a546-d8530cf2210b",
            "80a3af2a-8640-4a75-be3f-fe88ba605367",
            "d089082f-735e-48f5-a7da-c22b08157a9e",
            "8604fd2a-ef13-4d05-8a69-78391c06a684",
            "f9e2ffb7-75c9-4fb7-861e-f6852a9b0ba2"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354117,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354117,
          "parent_id": "ce3c34ba-e91e-4ecc-aec0-76d8276ac5fa",
          "parent_table": "block",
          "properties": {
            "title": [["String Literal Types"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      },
      "6be5f7bd-15e6-495e-ad63-2f68413d02fa": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "6be5f7bd-15e6-495e-ad63-2f68413d02fa",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "// Error: Type '\"rock\"' is not assignable to type '\"dog\"'.\n// myFavoritePet = \"rock\";"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "799afa08-f444-4543-a9e3-63caeb423182": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354115,
          "id": "799afa08-f444-4543-a9e3-63caeb423182",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354115,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "title": [["Any other string will give a error."]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "80a3af2a-8640-4a75-be3f-fe88ba605367": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "80a3af2a-8640-4a75-be3f-fe88ba605367",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "title": [["They works well for User-Defined Type Guards."]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "8604fd2a-ef13-4d05-8a69-78391c06a684": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "8604fd2a-ef13-4d05-8a69-78391c06a684",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "title": [["Full example code"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "9f3a0df9-8557-47b1-ab85-b76637971d62": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "0bb9ee87-fccb-4384-bcb5-0cd8dd8be530",
            "fc960b9a-9367-4d2a-8ddb-08e631981af5",
            "491c594b-205c-4cbf-bc7d-4caca40e4d5d",
            "bcb8cc4c-9223-4de8-b86b-20ff305bd9ee",
            "3ed0aad5-d965-4a1e-8ddd-54de0d698ad8",
            "6bc38731-0ff1-48ea-ad14-ad021c6b1faa",
            "c2126622-f67f-40a4-9ccc-586b8c192c71",
            "f739d352-c00f-4e51-b6f2-1b425ff8f732",
            "9c6afd3d-ff59-4ce1-ab70-504d012c758f",
            "d37c99ee-af9c-4165-85f1-e4b20c9632e0",
            "89322076-647d-40be-9dc6-fcad7f299f62",
            "ce3c34ba-e91e-4ecc-aec0-76d8276ac5fa",
            "0881cd7b-5020-4541-9dea-bcc394fdf53d",
            "28fc94d5-2430-42bb-8f3f-67270c3c85a5",
            "5b2bf0af-10e8-488f-92fc-de5383599b4c",
            "19f1aebd-c780-4856-b18c-c7490fdad251",
            "9d04aa98-ad4e-4010-9d3f-002b3ff21e5f",
            "c14589c3-4f59-4c6c-a29e-b754617639d1",
            "e9f5d93d-6b37-420d-a5fd-bbe803da2372",
            "a56f51cc-cc02-4ad6-8843-348a0c3ff174",
            "60872471-6dce-4887-97ac-cb868a73e2cf",
            "25d32317-e3f4-4f72-8f39-690522bd9823",
            "265bfa11-c991-4a72-9490-3434922ce6b4",
            "b96e73eb-668d-4778-a51e-a512e6ac3c1b",
            "d195a7e1-ea53-4ef2-89da-936b02bdd396",
            "8574a17d-6710-4853-97a3-69d38944b1c2",
            "8cb25cca-8c4d-4a56-96c7-eba0cc892783",
            "de924a60-ad22-44d9-9453-92e13e9a553c",
            "55d3717f-0cea-4953-92ff-d8118212ba86",
            "b09a3b3d-16f0-4069-b7b0-40e8ede341b9",
            "49c6fff9-a062-40da-8d62-3977d31372ae",
            "1ef36357-af1b-4162-90b9-0b809bc3f9c9"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106236513,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "9f3a0df9-8557-47b1-ab85-b76637971d62",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1570605900000,
          "parent_id": "4b8c06e2-f76e-4753-bac6-c77952d764a4",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential TypeScript"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 98
        }
      },
      "a21f6534-a24b-4298-a546-d8530cf2210b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "a21f6534-a24b-4298-a546-d8530cf2210b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "function buyPet(pet: Species, name: string) : Pet;\nfunction buyPet(pet: \"cat\", name: string): Cat;\nfunction buyPet(pet: \"dog\", name: string): Dog;\nfunction buyPet(pet: \"bird\", name: string): Bird;\nfunction buyPet(pet: Species, name: string) : Pet { /*...*/ }\n\nlet dog = buyPet(myFavoritePet /* \"dog\" as defined above */, \"Rocky\");\n// dog is from type Dog (dog: Dog)"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "c2383aba-712e-4c62-9dc4-0175f906c00d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "c2383aba-712e-4c62-9dc4-0175f906c00d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "type Species = \"cat\" | \"dog\" | \"bird\";\n\nfunction buyPet(pet: Species, name: string) : Pet { /*...*/ }\n\nbuyPet(myFavoritePet /* \"dog\" as defined above */, \"Rocky\");\n\n// Error: Argument of type '\"rock\"' is not assignable to parameter of type \"'cat' | \"dog\" | \"bird\". Type '\"rock\"' is not assignable to type '\"bird\"'.\n// buyPet(\"rock\", \"Rocky\");"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "ce3c34ba-e91e-4ecc-aec0-76d8276ac5fa": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4dd0020d-0bea-4a51-a92f-b12e35a0bb55",
            "6bba0a02-384b-49ea-8880-5d10a30a1075",
            "8d26fe6a-d13c-4ade-8af6-3eab3dacf528",
            "28f584c3-2d30-4c95-b73d-29748b74368d",
            "667264dd-2af9-4a25-9c08-7a58767be6de",
            "08e925cc-dc26-428a-a3e3-4ab12a5002ff",
            "0eed9cdf-a3c5-4469-9af4-7a0c7b1e5ba0",
            "b6bc4925-3f95-4b48-b5dd-69988b77582a",
            "401480c7-16db-41fa-9fc1-06584179e3c7",
            "2206817f-3631-47bf-afad-bee3eaa5c5f4",
            "2b928a6f-16f1-41e6-82b1-c85c79514b98",
            "d292d488-3887-4969-816c-e92e4ec6cac6",
            "510e09e5-4826-438a-a93a-765ccca6410f",
            "1ffdb38b-52e0-4863-ad81-36231d819b7a"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106340000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "ce3c34ba-e91e-4ecc-aec0-76d8276ac5fa",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106640000,
          "parent_id": "9f3a0df9-8557-47b1-ab85-b76637971d62",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["TypeScript core types"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 51
        }
      },
      "d089082f-735e-48f5-a7da-c22b08157a9e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "d089082f-735e-48f5-a7da-c22b08157a9e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "interface Pet {\n    species: Species;\n    eat();\n    sleep();\n}\n\ninterface Cat extends Pet {\n    species: \"cat\";\n}\n\ninterface Bird extends Pet {\n    species: \"bird\";\n    sing();\n}\n\nfunction petIsCat(pet: Pet): pet is Cat {\n    return pet.species === \"cat\";\n}\n\nfunction petIsBird(pet: Pet): pet is Bird {\n    return pet.species === \"bird\";\n}\n\nfunction playWithPet(pet: Pet){\n    if(petIsCat(pet)) {\n        // pet is now from type Cat (pet: Cat)\n        pet.eat();\n        pet.sleep();\n    } else if(petIsBird(pet)) {\n        // pet is now from type Bird (pet: Bird)\n        pet.eat();\n        pet.sing();\n        pet.sleep();\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "f092bdce-e947-4360-8b48-c5e142e6643c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354116,
          "id": "f092bdce-e947-4360-8b48-c5e142e6643c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354116,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "title": [
              ["String Literal Types can be used to distinguish overloads."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "f9e2ffb7-75c9-4fb7-861e-f6852a9b0ba2": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552106354117,
          "id": "f9e2ffb7-75c9-4fb7-861e-f6852a9b0ba2",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552106354117,
          "parent_id": "6bba0a02-384b-49ea-8880-5d10a30a1075",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "let myFavoritePet: \"dog\";\nmyFavoritePet = \"dog\";\n\n// Error: Type '\"rock\"' is not assignable to type '\"dog\"'.\n// myFavoritePet = \"rock\";\n\ntype Species = \"cat\" | \"dog\" | \"bird\";\n\ninterface Pet {\n    species: Species;\n    name: string;\n    eat();\n    walk();\n    sleep();\n}\n\ninterface Cat extends Pet {\n    species: \"cat\";\n}\n\ninterface Dog extends Pet {\n    species: \"dog\";\n}\n\ninterface Bird extends Pet {\n    species: \"bird\";\n    sing();\n}\n\n// Error: Interface 'Rock' incorrectly extends interface 'Pet'. Types of property 'species' are incompatible. Type '\"rock\"' is not assignable to type '\"cat\" | \"dog\" | \"bird\"'. Type '\"rock\"' is not assignable to type '\"bird\"'.\n// interface Rock extends Pet { \n//      type: \"rock\"; \n// }\n\nfunction buyPet(pet: Species, name: string) : Pet;\nfunction buyPet(pet: \"cat\", name: string): Cat;\nfunction buyPet(pet: \"dog\", name: string): Dog;\nfunction buyPet(pet: \"bird\", name: string): Bird;\nfunction buyPet(pet: Species, name: string) : Pet {\n    if(pet === \"cat\") { \n        return {\n            species: \"cat\",\n            name: name,\n            eat: function () {\n                console.log(`${this.name} eats.`);\n            }, walk: function () {\n                console.log(`${this.name} walks.`);\n            }, sleep: function () {\n                console.log(`${this.name} sleeps.`);\n            }\n        } as Cat;\n    } else if(pet === \"dog\") { \n        return {\n            species: \"dog\",\n            name: name,\n            eat: function () {\n                console.log(`${this.name} eats.`);\n            }, walk: function () {\n                console.log(`${this.name} walks.`);\n            }, sleep: function () {\n                console.log(`${this.name} sleeps.`);\n            }\n        } as Dog;\n    } else if(pet === \"bird\") { \n        return {\n            species: \"bird\",\n            name: name,\n            eat: function () {\n                console.log(`${this.name} eats.`);\n            }, walk: function () {\n                console.log(`${this.name} walks.`);\n            }, sleep: function () {\n                console.log(`${this.name} sleeps.`);\n            }, sing: function () {\n                console.log(`${this.name} sings.`);\n            }\n        } as Bird;\n    } else {\n        throw `Sorry we don't have a ${pet}. Would you like to buy a dog?`;\n    }\n}\n\nfunction petIsCat(pet: Pet): pet is Cat {\n    return pet.species === \"cat\";\n}\n\nfunction petIsDog(pet: Pet): pet is Dog {\n    return pet.species === \"dog\";\n}\n\nfunction petIsBird(pet: Pet): pet is Bird {\n    return pet.species === \"bird\";\n}\n\nfunction playWithPet(pet: Pet) {\n    console.log(`Hey ${pet.name}, let's play.`);\n    \n    if(petIsCat(pet)) {\n        // pet is now from type Cat (pet: Cat)\n        \n        pet.eat();\n        pet.sleep();\n        \n        // Error: Type '\"bird\"' is not assignable to type '\"cat\"'.\n        // pet.type = \"bird\";\n        \n        // Error: Property 'sing' does not exist on type 'Cat'.\n        // pet.sing();\n        \n    } else if(petIsDog(pet)) {\n        // pet is now from type Dog (pet: Dog)\n        \n        pet.eat();\n        pet.walk();\n        pet.sleep();\n        \n    } else if(petIsBird(pet)) {\n        // pet is now from type Bird (pet: Bird)\n    \n        pet.eat();\n        pet.sing();\n        pet.sleep();\n    } else {\n        throw \"An unknown pet. Did you buy a rock?\";\n    }\n}\n\nlet dog = buyPet(myFavoritePet /* \"dog\" as defined above */, \"Rocky\");\n// dog is from type Dog (dog: Dog)\n\n// Error: Argument of type '\"rock\"' is not assignable to parameter of type \"'cat' | \"dog\" | \"bird\". Type '\"rock\"' is not assignable to type '\"bird\"'.\n// buyPet(\"rock\", \"Rocky\");\n\nplayWithPet(dog);\n// Output: Hey Rocky, let's play.\n//         Rocky eats.\n//         Rocky walks.\n//         Rocky sleeps."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      }
    },
    "space": {}
  }
}
