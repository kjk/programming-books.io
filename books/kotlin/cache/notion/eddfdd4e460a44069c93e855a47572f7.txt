1758 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "eddfdd4e-460a-4406-9c93-e855a47572f7"
      },
      "version": -1
    }
  ]
}
Response:+1506
{
  "recordMap": {
    "block": {
      "eddfdd4e-460a-4406-9c93-e855a47572f7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "f2608ea9-33c6-4748-8348-8b52243b1bac",
            "f3d9c2a8-45f3-4a04-999f-650d2e11f1bd",
            "c9954afe-3891-4f9f-8605-2a22c456e519",
            "708a0f47-ce9a-4864-b975-3548220894ab",
            "04efc95f-b23a-431c-89c7-5fc7e2b84e64",
            "21939735-e0d3-4276-af5a-18f6f8aa1a9e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272253,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550479620000,
          "parent_id": "7b416f2b-f26d-4f20-87fe-64ec020e1f51",
          "parent_table": "block",
          "properties": {
            "title": [["Setting values of all properties of a class"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 9
        }
      }
    }
  }
}
15786 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "eddfdd4e-460a-4406-9c93-e855a47572f7"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+15526
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "04efc95f-b23a-431c-89c7-5fc7e2b84e64": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272253,
          "id": "04efc95f-b23a-431c-89c7-5fc7e2b84e64",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550459272253,
          "parent_id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "parent_table": "block",
          "properties": {
            "title": [
              ["To set all "],
              ["String", [["c"]]],
              [" properties to "],
              ["\"Our Value\"", [["c"]]],
              [
                " we can additionally filter by the return type. Since Kotlin is based on Java VM, "
              ],
              [
                "Type Erasure",
                [
                  [
                    "a",
                    "http://stackoverflow.com/questions/339699/java-generics-type-erasure-when-and-what-happens"
                  ]
                ]
              ],
              [
                " is in effect, and thus Properties returning generic types such as "
              ],
              ["List<String>", [["c"]]],
              [" will be the same as "],
              ["List<Any>", [["c"]]],
              [
                ". Sadly reflection is not a golden bullet and there is no sensible way to avoid this, so you need to watch out in your use-cases."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "21939735-e0d3-4276-af5a-18f6f8aa1a9e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272253,
          "id": "21939735-e0d3-4276-af5a-18f6f8aa1a9e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550479620000,
          "parent_id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "parent_table": "block",
          "properties": {
            "language": [["Kotlin"]],
            "title": [
              [
                "val instance = TestClass()\nTestClass::class.memberProperties\n        .filter{ prop.visibility == KVisibility.PUBLIC }\n        // We only want strings\n        .filter{ it.returnType.isSubtypeOf(String::class.starProjectedType) }\n        .filterIsInstance<KMutableProperty<*>>()\n        .forEach { prop ->\n            // Instead of printing the property we set it to some value\n            prop.setter.call(instance, \"Our Value\")\n        }"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 7
        }
      },
      "2bdd4731-8f3a-4e86-81dd-a289a8b3472b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "1359654b-9556-43ef-bf63-de48b2cff751",
            "bf06f063-9d35-4ff3-93ad-8c89caa1b064",
            "ee8e0a58-ce4d-49f2-95cf-589d789b64da",
            "9714a780-3ee8-4e3d-95bb-973e02de4953",
            "1caac65f-a4f5-4488-ad6e-0bd2a6e67806",
            "7281119a-d541-456a-97f4-05918821013e",
            "90982c65-15f5-4292-b068-36b5b5bca394",
            "80bde4e7-5e0e-4d44-9888-69827930ae4c",
            "6b53e974-40cc-4aad-aa35-242fe987be21",
            "64d7f30a-e774-4b02-9b81-9540827f0b16",
            "7b416f2b-f26d-4f20-87fe-64ec020e1f51",
            "e6ec2d63-43a4-46d2-acc7-6037ff62cb66",
            "82527ce9-51fc-40d4-a471-3651f67a34fc",
            "716dedee-50c9-4551-9864-fe349c4d8440",
            "6bea5b0c-fdb6-4aef-b022-5744e194ca39",
            "445f7a57-1e8a-4756-98ce-49fae305153c",
            "8d0f8f9a-0e91-4551-b7d3-823bfb56a679",
            "a57555d7-3370-40f1-81b7-a942632f3821",
            "6b7a5a4b-6b09-4ff7-880c-500c3f66ff92",
            "c87a3e01-adad-43f2-8d7a-9d5cac84d110",
            "83469c67-be7b-4cae-b8d7-577c63088f72",
            "391a9aac-912b-4a51-b760-da788ee5a397",
            "94c4fd36-6fad-419e-90ca-41fafaf8b5db",
            "414c9278-cc1d-4a76-84f1-23a39297c8ae",
            "16e8a060-7187-407e-95eb-8ef4095522cc",
            "bcd0d2a7-7420-4503-b628-69e879b06bc1",
            "0fc3a590-ba5f-4e12-8e7c-750e8ecc961d",
            "a3cc1306-3473-4220-aecd-82dd08eb51fb",
            "a3bc1338-335b-4470-9bc6-e404b755af2b",
            "289317b1-5df0-44ed-a3f5-3a0515b870a6",
            "65a73e60-8d33-4409-b198-cf2968df0b79",
            "4c7e663c-2eba-44a5-aaf1-7872e3395001",
            "7d03ab7a-df07-40cd-a346-e96855ec1330",
            "403fb950-f4ce-476b-b9d7-932c7cbc7960",
            "835e74a4-f35b-4d01-b478-b03db962feef",
            "a03ca250-5702-45c4-9719-ab00e6080e3a",
            "b878c32d-f615-4eb0-9797-a851f3adeaf7",
            "b6abbc4b-2885-4b32-a201-5028dc8d3f2c",
            "816a9f9a-3176-4638-bb37-c3fa017f03ea",
            "715bbf1b-83e5-4ab6-9259-a92a040e3e47"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459141617,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "2bdd4731-8f3a-4e86-81dd-a289a8b3472b",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1570605240000,
          "parent_id": "399e8682-de13-4b75-8438-f567a6ed7b6d",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Kotlin"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 89
        }
      },
      "708a0f47-ce9a-4864-b975-3548220894ab": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272251,
          "id": "708a0f47-ce9a-4864-b975-3548220894ab",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550479620000,
          "parent_id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "parent_table": "block",
          "properties": {
            "language": [["Kotlin"]],
            "title": [
              [
                "val instance = TestClass()\nTestClass::class.memberProperties\n        .filter{ prop.visibility == KVisibility.PUBLIC }\n        .filterIsInstance<KMutableProperty<*>>()\n        .forEach { prop ->\n            System.out.println(\"${prop.name} -> ${prop.get(instance)\")\n        }"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 7
        }
      },
      "7b416f2b-f26d-4f20-87fe-64ec020e1f51": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "a1e469c8-7b7b-48da-99fe-4c08a65498a3",
            "707a833a-4ca3-4475-9821-c42500d5a7fa",
            "436a5185-c688-413a-ba79-48634a0838e8",
            "41e61e0e-c6d6-43b5-ae44-5595a3bd217e",
            "f9cfbec8-1f3e-4e5e-8ef8-7ef7bbaa3944",
            "eddfdd4e-460a-4406-9c93-e855a47572f7"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459220000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "7b416f2b-f26d-4f20-87fe-64ec020e1f51",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550459460000,
          "parent_id": "2bdd4731-8f3a-4e86-81dd-a289a8b3472b",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Reflection"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 28
        }
      },
      "c9954afe-3891-4f9f-8605-2a22c456e519": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272251,
          "id": "c9954afe-3891-4f9f-8605-2a22c456e519",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550459272251,
          "parent_id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Getting mutable properties builds on getting all properties, filtering mutable properties by type. We also need to check visibility, as reading private properties results in run time exception."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "eddfdd4e-460a-4406-9c93-e855a47572f7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "f2608ea9-33c6-4748-8348-8b52243b1bac",
            "f3d9c2a8-45f3-4a04-999f-650d2e11f1bd",
            "c9954afe-3891-4f9f-8605-2a22c456e519",
            "708a0f47-ce9a-4864-b975-3548220894ab",
            "04efc95f-b23a-431c-89c7-5fc7e2b84e64",
            "21939735-e0d3-4276-af5a-18f6f8aa1a9e"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272253,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550479620000,
          "parent_id": "7b416f2b-f26d-4f20-87fe-64ec020e1f51",
          "parent_table": "block",
          "properties": {
            "title": [["Setting values of all properties of a class"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 9
        }
      },
      "f2608ea9-33c6-4748-8348-8b52243b1bac": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272248,
          "id": "f2608ea9-33c6-4748-8348-8b52243b1bac",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550459272248,
          "parent_id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "As an example we want to set all string properties of a sample class"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "f3d9c2a8-45f3-4a04-999f-650d2e11f1bd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550459272251,
          "id": "f3d9c2a8-45f3-4a04-999f-650d2e11f1bd",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550479620000,
          "parent_id": "eddfdd4e-460a-4406-9c93-e855a47572f7",
          "parent_table": "block",
          "properties": {
            "language": [["Kotlin"]],
            "title": [
              [
                "class TestClass {\n    val readOnlyProperty: String\n        get() = \"Read only!\"\n\n    var readWriteString = \"asd\"\n    var readWriteInt = 23\n\n    var readWriteBackedStringProperty: String = \"\"\n        get() = field + '5'\n        set(value) { field = value + '5' }\n\n    var readWriteBackedIntProperty: Int = 0\n        get() = field + 1\n        set(value) { field = value - 1 }\n\n    var delegatedProperty: Int by TestDelegate()\n\n    private var privateProperty = \"This should be private\"\n\n    private class TestDelegate {\n        private var backingField = 3\n\n        operator fun getValue(thisRef: Any?, prop: KProperty<*>): Int {\n            return backingField\n        }\n\n        operator fun setValue(thisRef: Any?, prop: KProperty<*>, value: Int) {\n            backingField += value\n        }\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      }
    },
    "space": {}
  }
}
