2580 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50"
      },
      "version": -1
    }
  ]
}
Response:+2328
{
  "recordMap": {
    "block": {
      "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "806055e1-f32d-4c05-a0e9-975be258aa72",
            "e3637cc4-511f-42fc-8c49-d2db67fa212a",
            "d959dc40-dcb7-40ed-a53f-812d84b2ae5b",
            "1ede429a-c58b-4fac-9a0a-1a4e844eaff5",
            "155dc948-2cba-4e1a-85b4-b9d70479c174",
            "19dffda4-d96c-4cb7-85e3-d67abafe1c97",
            "f43117b0-699e-453e-965a-1b1e3f7edece",
            "b301e4ba-b933-4318-870b-f95ac2fff41d",
            "a8df7ab3-1cf8-4386-9d6e-a25b2e4347f0",
            "941c4d67-7c34-4460-9c94-8925fabcd7fd",
            "6d91cb83-7484-4d35-a561-533405d7e47f",
            "e04efe2f-8613-459d-b478-0b08b10763c0",
            "1c7dfc1e-d5a3-49bc-82e4-9a30118284af",
            "b52ac5f2-5853-4e44-a472-8f0feb78a890",
            "6c446b95-6633-49de-9d28-06f753ae5851",
            "4ec4f3c8-94d2-441a-8a8b-6ad4542b49d4",
            "f0470c1d-61e0-4f4c-9223-b65513808cf2",
            "491051cc-9f9a-445b-a21e-203066758fa9",
            "eeb1a642-e9a9-4f88-88c3-a26daaa0bae1",
            "f2d73ba8-c98e-4100-82d1-0d2cfc3a484c",
            "d1264c0c-3f46-4dd2-a4b3-9e68ba84f6ee",
            "18277463-69a6-4414-905d-425a856feeea"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952586,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "94bfa868-4e02-4b90-841b-817c34132524",
          "parent_table": "block",
          "properties": {
            "title": [["Variadic template data structures"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 9
        }
      }
    }
  }
}
44916 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+44656
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "155dc948-2cba-4e1a-85b4-b9d70479c174": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952581,
          "id": "155dc948-2cba-4e1a-85b4-b9d70479c174",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "template<typename T, typename ... Rest>\nstruct DataStructure<T, Rest ...>\n{\n    DataStructure(const T& first, const Rest& ... rest)\n        : first(first)\n        , rest(rest...)\n    {}\n    \n    T first;                                \n    DataStructure<Rest ... > rest;\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "18277463-69a6-4414-905d-425a856feeea": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952586,
          "id": "18277463-69a6-4414-905d-425a856feeea",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "#include <iostream>\n\ntemplate<size_t idx, typename T>\nstruct GetHelper;\n\ntemplate<typename ... T>\nstruct DataStructure\n{\n};\n\ntemplate<typename T, typename ... Rest>\nstruct DataStructure<T, Rest ...>\n{\n    DataStructure(const T& first, const Rest& ... rest)\n        : first(first)\n        , rest(rest...)\n    {}\n    \n    T first;\n    DataStructure<Rest ... > rest;\n    \n    template<size_t idx>\n    auto get()\n    {\n        return GetHelper<idx, DataStructure<T,Rest...>>::get(*this);\n    }\n};\n\ntemplate<typename T, typename ... Rest>\nstruct GetHelper<0, DataStructure<T, Rest ... >>\n{\n    static T get(DataStructure<T, Rest...>& data)\n    {\n        return data.first;\n    }\n};\n\ntemplate<size_t idx, typename T, typename ... Rest>\nstruct GetHelper<idx, DataStructure<T, Rest ... >>\n{\n    static auto get(DataStructure<T, Rest...>& data)\n    {\n        return GetHelper<idx-1, DataStructure<Rest ...>>::get(data.rest);\n    }\n};\n\nint main()\n{\n    DataStructure<int, float, std::string> data(1, 2.1, \"Hello\");\n        \n    std::cout << data.get<0>() << std::endl;\n    std::cout << data.get<1>() << std::endl;\n    std::cout << data.get<2>() << std::endl;\n    \n    return 0;\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 7
        }
      },
      "19dffda4-d96c-4cb7-85e3-d67abafe1c97": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952582,
          "id": "19dffda4-d96c-4cb7-85e3-d67abafe1c97",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952582,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This is now sufficient for us to create arbitrary data structures, like "
              ],
              [
                "DataStructure<int, float, std::string> data(1, 2.1, \"hello\")",
                [["c"]]
              ],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "1c7dfc1e-d5a3-49bc-82e4-9a30118284af": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952584,
          "id": "1c7dfc1e-d5a3-49bc-82e4-9a30118284af",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952584,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              ["As you can see this "],
              ["get", [["c"]]],
              [
                " member function is itself templated - this time on the index of the member that is needed (so usage can be things like "
              ],
              ["data.get<1>()", [["c"]]],
              [", similar to "],
              ["std::tuple", [["c"]]],
              [
                "). The actual work is done by a static function in a helper class, "
              ],
              ["GetHelper", [["c"]]],
              [
                ". The reason we can’t define the required functionality directly in "
              ],
              ["DataStructure", [["c"]]],
              ["‘s "],
              ["get", [["c"]]],
              [
                " is because (as we will shortly see) we would need to specialise on "
              ],
              ["idx", [["c"]]],
              [
                " - but it isn’t possible to specialise a template member function without specialising the containing class template. Note also the use of a C++14-style "
              ],
              ["auto", [["c"]]],
              [
                " here makes our lives significantly simpler as otherwise we would need quite a complicated expression for the return type."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "1ede429a-c58b-4fac-9a0a-1a4e844eaff5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952581,
          "id": "1ede429a-c58b-4fac-9a0a-1a4e844eaff5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952581,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [["Next comes the recursive case specialisation:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "491051cc-9f9a-445b-a21e-203066758fa9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952585,
          "id": "491051cc-9f9a-445b-a21e-203066758fa9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952585,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              ["In the recursive case, we decrement "],
              ["idx", [["c"]]],
              [" and invoke the "],
              ["GetHelper", [["c"]]],
              [" for the "],
              ["rest", [["c"]]],
              [" member:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "4ec4f3c8-94d2-441a-8a8b-6ad4542b49d4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952585,
          "id": "4ec4f3c8-94d2-441a-8a8b-6ad4542b49d4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952585,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Now the base-case (when "],
              ["idx==0", [["c"]]],
              ["). In this case we just return the "],
              ["first", [["c"]]],
              [" member:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "6c446b95-6633-49de-9d28-06f753ae5851": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952584,
          "id": "6c446b95-6633-49de-9d28-06f753ae5851",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [["template<size_t idx, typename T>\nstruct GetHelper;"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "6d91cb83-7484-4d35-a561-533405d7e47f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952583,
          "id": "6d91cb83-7484-4d35-a561-533405d7e47f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952583,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Now we have the data structure, but its not terribly useful yet as we cannot easily access the individual data elements (for example to access the last member of "
              ],
              ["DataStructure<int, float, std::string> data", [["c"]]],
              [" we would have to use "],
              ["data.rest.rest.first", [["c"]]],
              [", which is not exactly user-friendly). So we add a "],
              ["get", [["c"]]],
              [
                " method to it (only needed in the specialisation as the base-case structure has no data to "
              ],
              ["get", [["c"]]],
              ["):"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "806055e1-f32d-4c05-a0e9-975be258aa72": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952579,
          "id": "806055e1-f32d-4c05-a0e9-975be258aa72",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952579,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It is often useful to define classes or structures that have a variable number and type of data members which are defined at compile time. The canonical example is "
              ],
              ["std::tuple", [["c"]]],
              [
                ", but sometimes is it is necessary to define your own custom structures. Here is an example that defines the structure using compounding (rather than inheritance as with "
              ],
              ["std::tuple", [["c"]]],
              [
                ". Start with the general (empty) definition, which also serves as the base-case for recrusion termination in the later specialisation:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "806055e1-f32d-4c05-a0e9-975be258aa72",
            "e3637cc4-511f-42fc-8c49-d2db67fa212a",
            "d959dc40-dcb7-40ed-a53f-812d84b2ae5b",
            "1ede429a-c58b-4fac-9a0a-1a4e844eaff5",
            "155dc948-2cba-4e1a-85b4-b9d70479c174",
            "19dffda4-d96c-4cb7-85e3-d67abafe1c97",
            "f43117b0-699e-453e-965a-1b1e3f7edece",
            "b301e4ba-b933-4318-870b-f95ac2fff41d",
            "a8df7ab3-1cf8-4386-9d6e-a25b2e4347f0",
            "941c4d67-7c34-4460-9c94-8925fabcd7fd",
            "6d91cb83-7484-4d35-a561-533405d7e47f",
            "e04efe2f-8613-459d-b478-0b08b10763c0",
            "1c7dfc1e-d5a3-49bc-82e4-9a30118284af",
            "b52ac5f2-5853-4e44-a472-8f0feb78a890",
            "6c446b95-6633-49de-9d28-06f753ae5851",
            "4ec4f3c8-94d2-441a-8a8b-6ad4542b49d4",
            "f0470c1d-61e0-4f4c-9223-b65513808cf2",
            "491051cc-9f9a-445b-a21e-203066758fa9",
            "eeb1a642-e9a9-4f88-88c3-a26daaa0bae1",
            "f2d73ba8-c98e-4100-82d1-0d2cfc3a484c",
            "d1264c0c-3f46-4dd2-a4b3-9e68ba84f6ee",
            "18277463-69a6-4414-905d-425a856feeea"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952586,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "94bfa868-4e02-4b90-841b-817c34132524",
          "parent_table": "block",
          "properties": {
            "title": [["Variadic template data structures"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 9
        }
      },
      "941c4d67-7c34-4460-9c94-8925fabcd7fd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952583,
          "id": "941c4d67-7c34-4460-9c94-8925fabcd7fd",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952583,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "DataStructure<int, float>\n   -> int first\n   -> DataStructure<float> rest\n         -> float first\n         -> DataStructure<> rest\n              -> (empty)"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "94bfa868-4e02-4b90-841b-817c34132524": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "090c8624-b58e-466c-a35f-e09553a6c2cc",
            "eef0876e-4662-42d7-9a36-9ff9a83492df",
            "e16e7ebd-d0b0-4a80-9f48-5d17268ad6be",
            "ff672478-a69f-4d06-9776-9fbbae75a548",
            "909910fb-151b-407e-a007-22d17f23ea21",
            "ad7c6ad8-6911-402f-a4fa-faba0944f7ab",
            "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
            "429615c6-583b-480a-8eb2-6f0413b0a1ff",
            "ad766ada-295f-430b-aabd-9a1168fa909e",
            "760e0a6e-f58c-47c1-819c-3a76618d63c8",
            "39cac0d7-a6d3-4ca5-8ffd-281d8b340323",
            "94a483d4-33e4-436f-9577-1aa12a0c973a",
            "f1bd470f-f5a8-468b-bff4-4bb1e330b9c6",
            "a0d14351-9e82-45f5-b55f-74b3976ea99c",
            "b0a145a4-a715-4726-8b21-19e9ac5266ef",
            "8c55b85a-8422-4925-8276-26a10afccfee",
            "4adad083-1d84-4768-96c7-034fafce2e07"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521920000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "94bfa868-4e02-4b90-841b-817c34132524",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347840000,
          "parent_id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Templates"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 41
        }
      },
      "a8df7ab3-1cf8-4386-9d6e-a25b2e4347f0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952583,
          "id": "a8df7ab3-1cf8-4386-9d6e-a25b2e4347f0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952583,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [["You can visualise this as follows:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ad527dc6-d4a7-420b-9234-94d0b9bfb560": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c97e2222-373b-4879-ba1e-de9da33c4b9c",
            "069713c9-355d-43e5-bbe3-fe65ccc5d89f",
            "f6fb0c70-b2a7-438e-8fd0-214354d4363c",
            "cad79b8f-8e22-4786-b522-3ce3f7989dfb",
            "9582f39a-18d4-4387-a429-d2d9d9c1c0a3",
            "4e7523ec-807e-469b-846d-6f0e98a9f133",
            "c48a63c8-822c-4a23-a960-60de4face6ae",
            "99e19430-5cdd-423f-8fa9-0e2f0bf264ab",
            "ea4c768f-8ffd-48a6-bc20-bd19b214545c",
            "3724ad56-a879-48bf-847e-5adcfcb60c18",
            "52470773-ddd6-4b1b-ad39-7b26f7b28f00",
            "6fdcface-f439-4f73-87ef-255a8f378573",
            "ee10cf45-84c7-467c-8068-ea9076a2401a",
            "4dc21607-5d04-4a95-bced-ba855fbfa11f",
            "546689ba-7cc0-49cb-ae94-05172f20d6dc",
            "193b149e-733b-4344-8898-29dc4a2ef0b0",
            "7b3003e0-5331-46e9-a216-03a87845d9e4",
            "fe5135d2-0f28-4675-bccd-611b7222102a",
            "a47adf4d-f2bb-4f72-84ee-798641440dfd",
            "903c7a47-fbc0-4b12-81a4-646b290a4e1e",
            "40e8450d-4736-4ad0-be7d-a2d9307ddf4f",
            "b886ff5d-614b-4aa9-9e99-851b7998439b",
            "89d591b2-5143-487b-8a09-144b6b266e4c",
            "ede1fd12-0013-4e8b-a92d-109c2ef39c10",
            "8655f492-9c51-4f68-ad52-8b6c1e02a277",
            "f2a0f008-68d4-4ef0-b159-b4601056dc66",
            "db03800f-1091-419f-bb8b-e6357b79b0ee",
            "50a27510-120b-4da0-9ecb-cf15396a0108",
            "bd95f7bc-834a-4faf-992f-446d54f5fc91",
            "0789dc55-0210-4292-957d-ed83df8e73af",
            "d5d40e50-c234-4e34-8c36-6916f8e79960",
            "5644241e-ceec-479a-8322-e9c1780f1515",
            "de2aa703-c2f6-4f94-bc50-eb5201c26ac3",
            "333099ca-9ef1-4569-b9ad-a7a9275c368b",
            "263edcef-95ee-480a-8c67-1e74662a250a",
            "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
            "1146c4bd-8317-421d-b231-ebcb0eff5721",
            "ee86edbe-8dd9-497a-a24c-fa516272404e",
            "13fedea6-df65-4996-9280-9cedb29d5f94",
            "b96c747c-3d87-49a0-b2bb-264f7c11b216",
            "2457e2b5-2a2a-4489-9eac-adb5cebfd9b8",
            "ecf8cc46-eac4-4c36-a422-ed2cca054451",
            "cbd900b3-1684-4f0d-977a-5a5b2a20aff3",
            "26e69b2d-1c6d-47ea-af87-47fa9cfbdf56",
            "cb822004-fe61-4bd8-91b8-d45b2acf0576",
            "efdc4616-d5e4-4dce-b49c-941c07a9ac4b",
            "43b2d3b6-c6aa-4441-b665-3932542c711c",
            "6980d61a-f1fa-491f-8409-409e295a4b03",
            "e197edf1-7913-4c71-bf9f-78feec182413",
            "a3104ba4-9a8b-4f2a-ad89-25f36d3b9595",
            "c0487639-ff5b-4e90-a0b3-9fe411676c2c",
            "402ef4da-a4e3-4503-ab08-9a4aa56821b5",
            "3b939fe5-bf07-416e-b626-9b4dcfb5abc4",
            "94bfa868-4e02-4b90-841b-817c34132524",
            "8a295383-3e95-42dc-b126-f5d5d4d9927a",
            "afe087c6-fdaf-4e79-b087-b5329772ae68",
            "139ade48-e995-4c51-9c31-2edc9475f16e",
            "3b14aac5-20b3-4de0-9a04-adc1cc273aec",
            "2be9c7d5-be12-439a-8968-ad057c67187a",
            "71517390-0244-456d-87c4-82c582ca8abf",
            "f1b860db-be5a-41ed-a67b-b7b0181ec59f",
            "d548e856-41b8-49c8-a801-044c518c9fe5",
            "83f01298-2804-4599-8deb-99728a5d557a",
            "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
            "eb50f34f-bfa8-4e16-9ad9-d114eb1d34d9",
            "96325b08-db02-4f4f-a7a3-7510a746dbe2",
            "5a1044bb-eec6-47e0-932c-1a000fc67e20",
            "48a240ac-2fc8-4208-bd39-82f2c3d27cb4",
            "2ed71a30-e220-47b0-b0e7-1bc14fce30c0",
            "ea515dbf-689d-48fb-bfb8-93f8853d7ec0",
            "899c3027-a75e-4a44-9144-10a53c6a2c11",
            "e1dd94ae-aa5a-4f89-b959-f2ec61771796",
            "fcd2d991-afe0-4c4f-a9fe-760a139ae1f3",
            "d0bc06f8-edea-49a0-bdbb-c1bef0d073bd",
            "6c5aa9dd-7698-4690-bd9e-644763376917",
            "5fbdea23-a3bd-48e3-9bb9-c7ca69fd9aa2",
            "44b9891c-fe65-4aa6-8ac6-b623709b7c02",
            "904db18b-f9e4-4135-accd-8cab1b7efd09",
            "a29d7b5a-3989-43f1-8efa-86ef82101f43",
            "c477f25f-108c-44a4-88a0-7be0b1a8f442",
            "1c542776-d859-4f7e-889a-d3f2c5b93f45",
            "f05fc49e-c44c-4e93-b1f0-a05de793c5bd",
            "6770e597-215e-480b-b658-f449f175ed3c",
            "d3696e4f-8789-4401-af6c-2f073d356228",
            "5dbd715a-2e96-4062-9cda-4e181e63af5e",
            "1e5df2e7-ee0b-4037-ab62-15139a784f28",
            "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
            "bd2b6b7e-15fe-4593-9be0-b9cb97312af0",
            "106e396c-5cd1-4e4b-a70c-30ba85edca56",
            "9a0f90cc-6905-4660-8751-556567fcd897",
            "1b4aabcd-82e1-426e-b2cd-5f1a6cfa8e60",
            "e6a35ae0-352c-42a0-9c74-633d5c76667f",
            "e2db6936-0727-4a61-bd9e-8712c9355a28",
            "02d273f3-3937-4a5b-86af-fbaa7082fc98",
            "5eb58f1d-da3c-4ebe-aff3-c98a60cca1a7",
            "289db939-0630-4d39-8987-cd9042ba485d",
            "5b32901d-2e27-4970-ba74-be06a103aa30",
            "4f03abce-5ffe-4575-9601-52e18b342ca2",
            "4a738092-15a0-42a9-8178-c62e1f86c80c",
            "f6be37ea-b1ea-4d12-902e-1e55a74f3c28",
            "66d100a7-32a0-4479-9f62-57e81c004eb6",
            "b7131d5c-8602-4af3-82a7-7c00e59ad384",
            "2d35c52b-5348-43d8-baf3-741d0b68c7ff",
            "8f46fba9-ba8b-4eaf-bb5f-2370fa61981b",
            "3b6d2215-7c30-4151-b9f1-7d1dc6e9d0de",
            "b41d10e9-7c12-482e-a1ff-612580407bc1",
            "5080976c-532d-492c-9735-9abf7dc903ae",
            "a0e8b380-dc71-4c5e-9564-5a6a96d413b0",
            "c70aafee-9819-4bd7-9b37-69e9f016666b",
            "2f06e164-6745-4c46-9402-92f51f9f9266",
            "b2086806-a259-48af-adcb-172245e66aa0",
            "0dfb5c8c-d986-4536-97a3-b3f543cfd7fa",
            "14d06bc1-b112-4b2f-a0a3-67a8dd9c958c",
            "4f68e8c3-ce07-490a-ad1e-1605c992a0ab",
            "f2023690-0f94-491a-ac9b-9c913f18d32c",
            "48c65d67-f77e-4b0b-b90a-83ab75bd68a9",
            "fc7b0093-a386-4cfb-9e24-ebd1f41fa3fa",
            "1e648ce1-cc7e-4997-bf6e-9a33d2ac504d",
            "e105eeaa-e8c4-4f5c-b412-90c65bdf217a",
            "d5db2d0f-24c4-4bf6-a1d3-fc170bfb1b75",
            "b4ae7d5c-1d56-46c7-a0d9-9af16a5bad5f",
            "13e1fda6-ad15-4061-a10e-d4a621970eb7",
            "29483c03-d3f3-426c-bd91-6dba06c1c86f",
            "5731e795-bc6e-4f67-a20f-e1ea328ebb4e",
            "ffc91cd7-ce2e-43bd-83f9-dd500633c0a2",
            "50856007-ed7d-41fb-8551-374ecae3e24b",
            "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
            "cbbee582-eb1d-4f69-a297-e10ba2cd83ab",
            "e3f32187-64e1-4609-b294-74d479b50a70",
            "dadb2eed-6939-4a7d-9afa-46a0514a66be",
            "7933074e-4123-4c04-8235-24ded3b719ed",
            "3e515719-4b1e-4dc7-9955-45485e25e7d3",
            "c793f95d-c3c9-4e23-a753-d7b7871c3bbf",
            "f0479f5d-620b-453a-b476-4c9e9418b846",
            "020f0e91-0de0-4617-bb97-e4863949153d",
            "6dc44543-880c-4829-bd86-818b80f5aac6",
            "0cb787c7-79fb-4e4c-a8f2-c95bfa483953",
            "4e04587c-419b-4bb3-bcb4-efe6a43e35e9",
            "46b28c54-a7e1-4286-9bdc-69ae87c3bad3",
            "5e61d351-5c67-4222-b553-e5a42137412d",
            "e819fb9f-77e3-490d-9b3b-288189045e39",
            "b1cbbef7-66d3-49c3-aaff-f598af5cdf47",
            "05715f55-0a2a-4c15-8aa1-b8c1e8aa98a4",
            "f0a4483b-95d9-4c82-8e41-15c96d864674",
            "2dfdecd0-c228-4dc2-941d-0a4e53390d1c",
            "2172f363-6ba3-4c7d-b75a-95189cc14546",
            "6f1bdf3d-1474-4baa-98bd-f39758d46389",
            "03d0218f-3acf-4c09-8902-6b09a4f35be4",
            "5291840b-1ac0-4473-9bc3-691467a51c05",
            "83d53c9b-bf14-42a2-8fb8-238a2fcb905a",
            "8e4180b2-04a8-47ee-8473-9c3c632e261a",
            "10708491-24c3-48f4-b554-d2665157037f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521908832,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1594594920000,
          "parent_id": "204dd4d3-a72c-4a9e-ba37-ebd5fc5ba989",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 637
        }
      },
      "b301e4ba-b933-4318-870b-f95ac2fff41d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952583,
          "id": "b301e4ba-b933-4318-870b-f95ac2fff41d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952583,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "To understand this better, we can work through an example: suppose you have a declaration "
              ],
              ["DataStructure<int, float> data", [["c"]]],
              [
                ". The declaration first matches against the specialisation, yielding a structure with "
              ],
              ["int first", [["c"]]],
              [" and "],
              ["DataStructure<float> rest", [["c"]]],
              [" data members. The "],
              ["rest", [["c"]]],
              [
                " definition again matches this specialisation, creating its own "
              ],
              ["float first", [["c"]]],
              [" and "],
              ["DataStructure<> rest", [["c"]]],
              [" members. Finally this last "],
              ["rest", [["c"]]],
              [
                " matches against the base-case defintion, producing an empty structure."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "b52ac5f2-5853-4e44-a472-8f0feb78a890": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952584,
          "id": "b52ac5f2-5853-4e44-a472-8f0feb78a890",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952584,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "So on to the helper class. This time we will need an empty forward declaration and two specialisations. First the declaration:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "d1264c0c-3f46-4dd2-a4b3-9e68ba84f6ee": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952586,
          "id": "d1264c0c-3f46-4dd2-a4b3-9e68ba84f6ee",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952586,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "So that’s it! Here is the whole functioning code, with some example use in the "
              ],
              ["main", [["c"]]],
              [" function:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "d959dc40-dcb7-40ed-a53f-812d84b2ae5b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952581,
          "id": "d959dc40-dcb7-40ed-a53f-812d84b2ae5b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952581,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              ["This already allows us to define an empty structure, "],
              ["DataStructure<> data", [["c"]]],
              [", albeit that isn’t very useful yet."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "e04efe2f-8613-459d-b478-0b08b10763c0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952583,
          "id": "e04efe2f-8613-459d-b478-0b08b10763c0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "template<typename T, typename ... Rest>\nstruct DataStructure<T, Rest ...>\n{\n    ...\n    template<size_t idx>\n    auto get()\n    {\n        return GetHelper<idx, DataStructure<T,Rest...>>::get(*this);\n    }\n    ...\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 7
        }
      },
      "e3637cc4-511f-42fc-8c49-d2db67fa212a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952581,
          "id": "e3637cc4-511f-42fc-8c49-d2db67fa212a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [["template<typename ... T>\nstruct DataStructure {};"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "eeb1a642-e9a9-4f88-88c3-a26daaa0bae1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952585,
          "id": "eeb1a642-e9a9-4f88-88c3-a26daaa0bae1",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "template<size_t idx, typename T, typename ... Rest>\nstruct GetHelper<idx, DataStructure<T, Rest ... >>\n{\n    static auto get(DataStructure<T, Rest...>& data)\n    {\n        return GetHelper<idx-1, DataStructure<Rest ...>>::get(data.rest);\n    }\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "f0470c1d-61e0-4f4c-9223-b65513808cf2": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952585,
          "id": "f0470c1d-61e0-4f4c-9223-b65513808cf2",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552347780000,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "template<typename T, typename ... Rest>\nstruct GetHelper<0, DataStructure<T, Rest ... >>\n{\n    static T get(DataStructure<T, Rest...>& data)\n    {\n        return data.first;\n    }\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 7
        }
      },
      "f2d73ba8-c98e-4100-82d1-0d2cfc3a484c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952586,
          "id": "f2d73ba8-c98e-4100-82d1-0d2cfc3a484c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952586,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              ["To work through an example, suppose we have "],
              ["DataStructure<int, float> data", [["c"]]],
              [" and we need "],
              ["data.get<1>()", [["c"]]],
              [". This invokes "],
              ["GetHelper<1, DataStructure<int, float>>::get(data)", [["c"]]],
              [" (the 2nd specialisation), which in turn invokes "],
              ["GetHelper<0, DataStructure<float>>::get(data.rest)", [["c"]]],
              [", which finally returns (by the 1st specialisation as now "],
              ["idx", [["c"]]],
              [" is 0) "],
              ["data.rest.first", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "f43117b0-699e-453e-965a-1b1e3f7edece": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521952582,
          "id": "f43117b0-699e-453e-965a-1b1e3f7edece",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550521952582,
          "parent_id": "868c1d5d-e3c5-4333-89c0-ea5d08d5ca50",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "So what’s going on? First, note that this is a specialisation whose requirement is that at least one variadic template parameter (namely "
              ],
              ["T", [["c"]]],
              [
                " above) exists, whilst not caring about the specific makeup of the pack "
              ],
              ["Rest", [["c"]]],
              [". Knowing that "],
              ["T", [["c"]]],
              [" exists allows the definition of its data member, "],
              ["first", [["c"]]],
              [". The rest of the data is recursively packaged as "],
              ["DataStructure<Rest ... > rest", [["c"]]],
              [
                ". The constructor initiates both of those members, including a recursive constructor call to the "
              ],
              ["rest", [["c"]]],
              [" member."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
