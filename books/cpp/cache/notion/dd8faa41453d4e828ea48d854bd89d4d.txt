2194 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d"
      },
      "version": -1
    }
  ]
}
Response:+1942
{
  "recordMap": {
    "block": {
      "dd8faa41-453d-4e82-8ea4-8d854bd89d4d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "fcc4a916-531b-4c1a-ba47-33c49675fcaa",
            "ba432013-5e4e-4404-a565-ac5d5182bd23",
            "60524ce7-3dfb-4069-811c-e84f4393b350",
            "89487fbd-9c8c-4903-965d-9f36a4c17ec4",
            "b74b2aaa-9ecb-4c62-a735-4967a9960495",
            "e2bf4608-3e57-4576-85e2-e092c5351a96",
            "5bd732da-8638-4d10-a071-0bfeab969228",
            "9da14f6b-6cb2-4aab-82dd-cbeaf9a35b4a",
            "0d675155-67c8-4e03-b15e-a9232184448f",
            "e10d25a9-28a9-4a01-bdf0-2471088a1573",
            "32b3d081-b523-453d-8f10-7d59c54e2994",
            "49910dfd-fe72-4119-ac7e-b0984d9857f9",
            "b82b935f-f1fe-4eb9-a2a0-2469e0295663",
            "e864ecec-348c-41f8-8efd-bdfa1f7408cd",
            "1249112d-f376-4370-a2c3-66d29d360803"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161579,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551689000291,
          "parent_id": "6dc44543-880c-4829-bd86-818b80f5aac6",
          "parent_table": "block",
          "properties": {
            "title": [["Class types"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 4
        }
      }
    }
  }
}
38774 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+38514
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0d675155-67c8-4e03-b15e-a9232184448f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161577,
          "id": "0d675155-67c8-4e03-b15e-a9232184448f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161577,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "If padding is inserted in an object due to alignment requirements, the size will be greater than the sum of the sizes of the members and base classes. With "
              ],
              ["n", [["c"]]],
              [
                "-byte alignment, size will typically be the smallest multiple of "
              ],
              ["n", [["c"]]],
              [
                " which is larger than the size of all members & base classes. Each member "
              ],
              ["memN", [["c"]]],
              [
                " will typically be placed at an address which is a multiple of "
              ],
              ["alignof(memN)", [["c"]]],
              [", and "],
              ["n", [["c"]]],
              [" will typically be the largest "],
              ["alignof", [["c"]]],
              [" out of all members’ "],
              ["alignof", [["c"]]],
              ["s. Due to this, if a member with a smaller "],
              ["alignof", [["c"]]],
              [" is followed by a member with a larger "],
              ["alignof", [["c"]]],
              [
                ", there is a possibility that the latter member will not be aligned properly if placed immediately after the former. In this case, padding (also known as an "
              ],
              ["alignment member", [["i"]]],
              [
                " ) will be placed between the two members, such that the latter member can have its desired alignment. Conversely, if a member with a larger "
              ],
              ["alignof", [["c"]]],
              [" is followed by a member with a smaller "],
              ["alignof", [["c"]]],
              [
                ", no padding will usually be necessary. This process is also known as “packing”."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "1249112d-f376-4370-a2c3-66d29d360803": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161579,
          "id": "1249112d-f376-4370-a2c3-66d29d360803",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161579,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "It is unspecified what order the base class subobjects appear in within an object, whether they occur consecutively, and whether they appear before, after, or between member subobjects."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      },
      "32b3d081-b523-453d-8f10-7d59c54e2994": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161577,
          "id": "32b3d081-b523-453d-8f10-7d59c54e2994",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161577,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "// Assume sizeof(short) == 2, sizeof(int) == 4, and sizeof(long long) == 8.\n// Assume 4-byte alignment is specified to the compiler.\nstruct Char { char c; };\n  // sizeof(Char)                == 1 (sizeof(char))\nstruct Int  { int i; };\n  // sizeof(Int)                 == 4 (sizeof(int))\nstruct CharInt { char c; int i; };\n  // sizeof(CharInt)             == 8 (1 (char) + 3 (padding) + 4 (int))\nstruct ShortIntCharInt { short s; int i; char c; int j; };\n  // sizeof(ShortIntCharInt)     == 16 (2 (short) + 2 (padding) + 4 (int) + 1 (char) +\n  //                                    3 (padding) + 4 (int))\nstruct ShortIntCharCharInt { short s; int i; char c; char d; int j; };\n  // sizeof(ShortIntCharCharInt) == 16 (2 (short) + 2 (padding) + 4 (int) + 1 (char) +\n  //                                    1 (char) + 2 (padding) + 4 (int))\nstruct ShortCharShortInt { short s; char c; short t; int i; };\n  // sizeof(ShortCharShortInt)   == 12 (2 (short) + 1 (char) + 1 (padding) + 2 (short) +\n  //                                    2 (padding) + 4 (int))\nstruct IntLLInt { int i; long long l; int j; };\n  // sizeof(IntLLInt)            == 16 (4 (int) + 8 (long long) + 4 (int))\n  // If packing isn't explicitly specified, most compilers will pack this as\n  //   8-byte alignment, such that:\n  // sizeof(IntLLInt)            == 24 (4 (int) + 4 (padding) + 8 (long long) +\n  //                                    4 (int) + 4 (padding))\n\n// Assume sizeof(bool) == 1, sizeof(ShortIntCharInt) == 16, and sizeof(IntLLInt) == 24.\n// Assume default alignment: alignof(ShortIntCharInt) == 4, alignof(IntLLInt) == 8.\nstruct ShortChar3ArrShortInt {\n    short s;\n    char c3[3];\n    short t;\n    int i;\n};\n  // ShortChar3ArrShortInt has 4-byte alignment: alignof(int) >= alignof(char) &&\n  //                                             alignof(int) >= alignof(short)\n  // sizeof(ShortChar3ArrShortInt) == 12 (2 (short) + 3 (char[3]) + 1 (padding) +\n  //                                      2 (short) + 4 (int))\n  // Note that t is placed at alignment of 2, not 4.  alignof(short) == 2.\n\nstruct Large_1 {\n    ShortIntCharInt sici;\n    bool b;\n    ShortIntCharInt tjdj;\n};\n  // Large_1 has 4-byte alignment.\n    // alignof(ShortIntCharInt) == alignof(int) == 4\n    // alignof(b) == 1\n    // Therefore, alignof(Large_1) == 4.\n  // sizeof(Large_1) == 36 (16 (ShortIntCharInt) + 1 (bool) + 3 (padding) +\n  //                        16 (ShortIntCharInt))\nstruct Large_2 {\n    IntLLInt illi;\n    float f;\n    IntLLInt jmmj;\n};\n  // Large_2 has 8-byte alignment.\n    // alignof(IntLLInt) == alignof(long long) == 8\n    // alignof(float) == 4\n    // Therefore, alignof(Large_2) == 8.\n  // sizeof(Large_2) == 56 (24 (IntLLInt) + 4 (float) + 4 (padding) + 24 (IntLLInt))"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "49910dfd-fe72-4119-ac7e-b0984d9857f9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161578,
          "id": "49910dfd-fe72-4119-ac7e-b0984d9857f9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161578,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If strict alignment is forced with "],
              ["alignas", [["c"]]],
              [
                ", padding will be used to force the type to meet the specified alignment, even when it would otherwise be smaller. For example, with the definition below, "
              ],
              ["Chars<5>", [["c"]]],
              [
                " will have three (or possibly more) padding bytes inserted at the end so that its total size is 8. It is not possible for a class with an alignment of 4 to have a size of 5 because it would be impossible to make an array of that class, so the size must be “rounded up” to a multiple of 4 by inserting padding bytes."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      },
      "5bd732da-8638-4d10-a071-0bfeab969228": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161575,
          "id": "5bd732da-8638-4d10-a071-0bfeab969228",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161575,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If a class type has members and/or base classes with types "],
              ["t1, t2,...tN", [["c"]]],
              [", the size must be at least "],
              ["sizeof(t1) + sizeof(t2) + ... + sizeof(tN)", [["c"]]],
              [" given the preceding points. However, depending on the "],
              [
                "alignment",
                [
                  [
                    "a",
                    "http://stackoverflow.com/documentation/c%2B%2B/9249/alignment"
                  ]
                ]
              ],
              [
                " requirements of the members and base classes, the compiler may be forced to insert padding between subobjects, or at the beginning or end of the complete object."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 1
        }
      },
      "60524ce7-3dfb-4069-811c-e84f4393b350": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161573,
          "id": "60524ce7-3dfb-4069-811c-e84f4393b350",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161573,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "class Empty_1 {};                               // sizeof(Empty_1)       == 1\nclass Empty_2 {};                               // sizeof(Empty_2)       == 1\nclass Derived : Empty_1 {};                     // sizeof(Derived)       == 1\nclass DoubleDerived : Empty_1, Empty_2 {};      // sizeof(DoubleDerived) == 1\nclass Holder { Empty_1 e; };                    // sizeof(Holder)        == 1\nclass DoubleHolder { Empty_1 e1; Empty_2 e2; }; // sizeof(DoubleHolder)  == 2\nclass DerivedHolder : Empty_1 { Empty_1 e; };   // sizeof(DerivedHolder) == 2"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "6dc44543-880c-4829-bd86-818b80f5aac6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "0e71b5cc-4d68-410d-b19f-98d2752164c3",
            "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
            "0f9f293d-517f-446d-84e8-e6fdb7003f9c",
            "d970c0b8-29da-4e57-88c1-47a72727161f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525160000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "6dc44543-880c-4829-bd86-818b80f5aac6",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525340000,
          "parent_id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Layout of object types"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 37
        }
      },
      "89487fbd-9c8c-4903-965d-9f36a4c17ec4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161574,
          "id": "89487fbd-9c8c-4903-965d-9f36a4c17ec4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161574,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The object representation of a class type contains the object representations of the base class and non-static member types. Therefore, for example, in the following class:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      },
      "9da14f6b-6cb2-4aab-82dd-cbeaf9a35b4a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161575,
          "id": "9da14f6b-6cb2-4aab-82dd-cbeaf9a35b4a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161575,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "struct AnInt      { int i; };\n  // sizeof(AnInt)        == sizeof(int)\n  // Assuming a typical 32- or 64-bit system, sizeof(AnInt)        == 4 (4).\nstruct TwoInts    { int i, j; };\n  // sizeof(TwoInts)      >= 2 * sizeof(int)\n  // Assuming a typical 32- or 64-bit system, sizeof(TwoInts)      == 8 (4 + 4).\nstruct IntAndChar { int i; char c; };\n  // sizeof(IntAndChar)   >= sizeof(int) + sizeof(char)\n  // Assuming a typical 32- or 64-bit system, sizeof(IntAndChar)   == 8 (4 + 1 + padding).\nstruct AnIntDerived : AnInt { long long l; };\n  // sizeof(AnIntDerived) >= sizeof(AnInt) + sizeof(long long)\n  // Assuming a typical 32- or 64-bit system, sizeof(AnIntDerived) == 16 (4 + padding + 8)."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "ad527dc6-d4a7-420b-9234-94d0b9bfb560": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c97e2222-373b-4879-ba1e-de9da33c4b9c",
            "069713c9-355d-43e5-bbe3-fe65ccc5d89f",
            "f6fb0c70-b2a7-438e-8fd0-214354d4363c",
            "cad79b8f-8e22-4786-b522-3ce3f7989dfb",
            "9582f39a-18d4-4387-a429-d2d9d9c1c0a3",
            "4e7523ec-807e-469b-846d-6f0e98a9f133",
            "c48a63c8-822c-4a23-a960-60de4face6ae",
            "99e19430-5cdd-423f-8fa9-0e2f0bf264ab",
            "ea4c768f-8ffd-48a6-bc20-bd19b214545c",
            "3724ad56-a879-48bf-847e-5adcfcb60c18",
            "52470773-ddd6-4b1b-ad39-7b26f7b28f00",
            "6fdcface-f439-4f73-87ef-255a8f378573",
            "ee10cf45-84c7-467c-8068-ea9076a2401a",
            "4dc21607-5d04-4a95-bced-ba855fbfa11f",
            "546689ba-7cc0-49cb-ae94-05172f20d6dc",
            "193b149e-733b-4344-8898-29dc4a2ef0b0",
            "7b3003e0-5331-46e9-a216-03a87845d9e4",
            "fe5135d2-0f28-4675-bccd-611b7222102a",
            "a47adf4d-f2bb-4f72-84ee-798641440dfd",
            "903c7a47-fbc0-4b12-81a4-646b290a4e1e",
            "40e8450d-4736-4ad0-be7d-a2d9307ddf4f",
            "b886ff5d-614b-4aa9-9e99-851b7998439b",
            "89d591b2-5143-487b-8a09-144b6b266e4c",
            "ede1fd12-0013-4e8b-a92d-109c2ef39c10",
            "8655f492-9c51-4f68-ad52-8b6c1e02a277",
            "f2a0f008-68d4-4ef0-b159-b4601056dc66",
            "db03800f-1091-419f-bb8b-e6357b79b0ee",
            "50a27510-120b-4da0-9ecb-cf15396a0108",
            "bd95f7bc-834a-4faf-992f-446d54f5fc91",
            "0789dc55-0210-4292-957d-ed83df8e73af",
            "d5d40e50-c234-4e34-8c36-6916f8e79960",
            "5644241e-ceec-479a-8322-e9c1780f1515",
            "de2aa703-c2f6-4f94-bc50-eb5201c26ac3",
            "333099ca-9ef1-4569-b9ad-a7a9275c368b",
            "263edcef-95ee-480a-8c67-1e74662a250a",
            "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
            "1146c4bd-8317-421d-b231-ebcb0eff5721",
            "ee86edbe-8dd9-497a-a24c-fa516272404e",
            "13fedea6-df65-4996-9280-9cedb29d5f94",
            "b96c747c-3d87-49a0-b2bb-264f7c11b216",
            "2457e2b5-2a2a-4489-9eac-adb5cebfd9b8",
            "ecf8cc46-eac4-4c36-a422-ed2cca054451",
            "cbd900b3-1684-4f0d-977a-5a5b2a20aff3",
            "26e69b2d-1c6d-47ea-af87-47fa9cfbdf56",
            "cb822004-fe61-4bd8-91b8-d45b2acf0576",
            "efdc4616-d5e4-4dce-b49c-941c07a9ac4b",
            "43b2d3b6-c6aa-4441-b665-3932542c711c",
            "6980d61a-f1fa-491f-8409-409e295a4b03",
            "e197edf1-7913-4c71-bf9f-78feec182413",
            "a3104ba4-9a8b-4f2a-ad89-25f36d3b9595",
            "c0487639-ff5b-4e90-a0b3-9fe411676c2c",
            "402ef4da-a4e3-4503-ab08-9a4aa56821b5",
            "3b939fe5-bf07-416e-b626-9b4dcfb5abc4",
            "94bfa868-4e02-4b90-841b-817c34132524",
            "8a295383-3e95-42dc-b126-f5d5d4d9927a",
            "afe087c6-fdaf-4e79-b087-b5329772ae68",
            "139ade48-e995-4c51-9c31-2edc9475f16e",
            "3b14aac5-20b3-4de0-9a04-adc1cc273aec",
            "2be9c7d5-be12-439a-8968-ad057c67187a",
            "71517390-0244-456d-87c4-82c582ca8abf",
            "f1b860db-be5a-41ed-a67b-b7b0181ec59f",
            "d548e856-41b8-49c8-a801-044c518c9fe5",
            "83f01298-2804-4599-8deb-99728a5d557a",
            "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
            "eb50f34f-bfa8-4e16-9ad9-d114eb1d34d9",
            "96325b08-db02-4f4f-a7a3-7510a746dbe2",
            "5a1044bb-eec6-47e0-932c-1a000fc67e20",
            "48a240ac-2fc8-4208-bd39-82f2c3d27cb4",
            "2ed71a30-e220-47b0-b0e7-1bc14fce30c0",
            "ea515dbf-689d-48fb-bfb8-93f8853d7ec0",
            "899c3027-a75e-4a44-9144-10a53c6a2c11",
            "e1dd94ae-aa5a-4f89-b959-f2ec61771796",
            "fcd2d991-afe0-4c4f-a9fe-760a139ae1f3",
            "d0bc06f8-edea-49a0-bdbb-c1bef0d073bd",
            "6c5aa9dd-7698-4690-bd9e-644763376917",
            "5fbdea23-a3bd-48e3-9bb9-c7ca69fd9aa2",
            "44b9891c-fe65-4aa6-8ac6-b623709b7c02",
            "904db18b-f9e4-4135-accd-8cab1b7efd09",
            "a29d7b5a-3989-43f1-8efa-86ef82101f43",
            "c477f25f-108c-44a4-88a0-7be0b1a8f442",
            "1c542776-d859-4f7e-889a-d3f2c5b93f45",
            "f05fc49e-c44c-4e93-b1f0-a05de793c5bd",
            "6770e597-215e-480b-b658-f449f175ed3c",
            "d3696e4f-8789-4401-af6c-2f073d356228",
            "5dbd715a-2e96-4062-9cda-4e181e63af5e",
            "1e5df2e7-ee0b-4037-ab62-15139a784f28",
            "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
            "bd2b6b7e-15fe-4593-9be0-b9cb97312af0",
            "106e396c-5cd1-4e4b-a70c-30ba85edca56",
            "9a0f90cc-6905-4660-8751-556567fcd897",
            "1b4aabcd-82e1-426e-b2cd-5f1a6cfa8e60",
            "e6a35ae0-352c-42a0-9c74-633d5c76667f",
            "e2db6936-0727-4a61-bd9e-8712c9355a28",
            "02d273f3-3937-4a5b-86af-fbaa7082fc98",
            "5eb58f1d-da3c-4ebe-aff3-c98a60cca1a7",
            "289db939-0630-4d39-8987-cd9042ba485d",
            "5b32901d-2e27-4970-ba74-be06a103aa30",
            "4f03abce-5ffe-4575-9601-52e18b342ca2",
            "4a738092-15a0-42a9-8178-c62e1f86c80c",
            "f6be37ea-b1ea-4d12-902e-1e55a74f3c28",
            "66d100a7-32a0-4479-9f62-57e81c004eb6",
            "b7131d5c-8602-4af3-82a7-7c00e59ad384",
            "2d35c52b-5348-43d8-baf3-741d0b68c7ff",
            "8f46fba9-ba8b-4eaf-bb5f-2370fa61981b",
            "3b6d2215-7c30-4151-b9f1-7d1dc6e9d0de",
            "b41d10e9-7c12-482e-a1ff-612580407bc1",
            "5080976c-532d-492c-9735-9abf7dc903ae",
            "a0e8b380-dc71-4c5e-9564-5a6a96d413b0",
            "c70aafee-9819-4bd7-9b37-69e9f016666b",
            "2f06e164-6745-4c46-9402-92f51f9f9266",
            "b2086806-a259-48af-adcb-172245e66aa0",
            "0dfb5c8c-d986-4536-97a3-b3f543cfd7fa",
            "14d06bc1-b112-4b2f-a0a3-67a8dd9c958c",
            "4f68e8c3-ce07-490a-ad1e-1605c992a0ab",
            "f2023690-0f94-491a-ac9b-9c913f18d32c",
            "48c65d67-f77e-4b0b-b90a-83ab75bd68a9",
            "fc7b0093-a386-4cfb-9e24-ebd1f41fa3fa",
            "1e648ce1-cc7e-4997-bf6e-9a33d2ac504d",
            "e105eeaa-e8c4-4f5c-b412-90c65bdf217a",
            "d5db2d0f-24c4-4bf6-a1d3-fc170bfb1b75",
            "b4ae7d5c-1d56-46c7-a0d9-9af16a5bad5f",
            "13e1fda6-ad15-4061-a10e-d4a621970eb7",
            "29483c03-d3f3-426c-bd91-6dba06c1c86f",
            "5731e795-bc6e-4f67-a20f-e1ea328ebb4e",
            "ffc91cd7-ce2e-43bd-83f9-dd500633c0a2",
            "50856007-ed7d-41fb-8551-374ecae3e24b",
            "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
            "cbbee582-eb1d-4f69-a297-e10ba2cd83ab",
            "e3f32187-64e1-4609-b294-74d479b50a70",
            "dadb2eed-6939-4a7d-9afa-46a0514a66be",
            "7933074e-4123-4c04-8235-24ded3b719ed",
            "3e515719-4b1e-4dc7-9955-45485e25e7d3",
            "c793f95d-c3c9-4e23-a753-d7b7871c3bbf",
            "f0479f5d-620b-453a-b476-4c9e9418b846",
            "020f0e91-0de0-4617-bb97-e4863949153d",
            "6dc44543-880c-4829-bd86-818b80f5aac6",
            "0cb787c7-79fb-4e4c-a8f2-c95bfa483953",
            "4e04587c-419b-4bb3-bcb4-efe6a43e35e9",
            "46b28c54-a7e1-4286-9bdc-69ae87c3bad3",
            "5e61d351-5c67-4222-b553-e5a42137412d",
            "e819fb9f-77e3-490d-9b3b-288189045e39",
            "b1cbbef7-66d3-49c3-aaff-f598af5cdf47",
            "05715f55-0a2a-4c15-8aa1-b8c1e8aa98a4",
            "f0a4483b-95d9-4c82-8e41-15c96d864674",
            "2dfdecd0-c228-4dc2-941d-0a4e53390d1c",
            "2172f363-6ba3-4c7d-b75a-95189cc14546",
            "6f1bdf3d-1474-4baa-98bd-f39758d46389",
            "03d0218f-3acf-4c09-8902-6b09a4f35be4",
            "5291840b-1ac0-4473-9bc3-691467a51c05",
            "83d53c9b-bf14-42a2-8fb8-238a2fcb905a",
            "8e4180b2-04a8-47ee-8473-9c3c632e261a",
            "10708491-24c3-48f4-b554-d2665157037f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521908832,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1594594920000,
          "parent_id": "204dd4d3-a72c-4a9e-ba37-ebd5fc5ba989",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 637
        }
      },
      "b74b2aaa-9ecb-4c62-a735-4967a9960495": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161574,
          "id": "b74b2aaa-9ecb-4c62-a735-4967a9960495",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161574,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [["struct S {\n    int x;\n    char* y;\n};"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "b82b935f-f1fe-4eb9-a2a0-2469e0295663": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161578,
          "id": "b82b935f-f1fe-4eb9-a2a0-2469e0295663",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161578,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "// This type shall always be aligned to a multiple of 4.  Padding shall be inserted as\n// needed.\n// Chars<1>..Chars<4> are 4 bytes, Chars<5>..Chars<8> are 8 bytes, etc.\ntemplate<size_t SZ>\nstruct alignas(4) Chars { char arr[SZ]; };\n\nstatic_assert(sizeof(Chars<1>) == sizeof(Chars<4>), \"Alignment is strict.\\n\");"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "ba432013-5e4e-4404-a565-ac5d5182bd23": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161573,
          "id": "ba432013-5e4e-4404-a565-ac5d5182bd23",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161573,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Even an empty class still occupies at least one byte of storage; it will therefore consist purely of padding. This ensures that if "
              ],
              ["p", [["c"]]],
              [" points to an object of an empty class, then "],
              ["p + 1", [["c"]]],
              [
                " is a distinct address and points to a distinct object. However, it is possible for an empty class to have a size of 0 when used as a base class. See "
              ],
              [
                "empty base optimisation",
                [["a", "http://en.cppreference.com/w/cpp/language/ebo"]]
              ],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      },
      "dd8faa41-453d-4e82-8ea4-8d854bd89d4d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "fcc4a916-531b-4c1a-ba47-33c49675fcaa",
            "ba432013-5e4e-4404-a565-ac5d5182bd23",
            "60524ce7-3dfb-4069-811c-e84f4393b350",
            "89487fbd-9c8c-4903-965d-9f36a4c17ec4",
            "b74b2aaa-9ecb-4c62-a735-4967a9960495",
            "e2bf4608-3e57-4576-85e2-e092c5351a96",
            "5bd732da-8638-4d10-a071-0bfeab969228",
            "9da14f6b-6cb2-4aab-82dd-cbeaf9a35b4a",
            "0d675155-67c8-4e03-b15e-a9232184448f",
            "e10d25a9-28a9-4a01-bdf0-2471088a1573",
            "32b3d081-b523-453d-8f10-7d59c54e2994",
            "49910dfd-fe72-4119-ac7e-b0984d9857f9",
            "b82b935f-f1fe-4eb9-a2a0-2469e0295663",
            "e864ecec-348c-41f8-8efd-bdfa1f7408cd",
            "1249112d-f376-4370-a2c3-66d29d360803"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161579,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1551689000291,
          "parent_id": "6dc44543-880c-4829-bd86-818b80f5aac6",
          "parent_table": "block",
          "properties": {
            "title": [["Class types"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 4
        }
      },
      "e10d25a9-28a9-4a01-bdf0-2471088a1573": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161577,
          "id": "e10d25a9-28a9-4a01-bdf0-2471088a1573",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161577,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Due to classes typically sharing the "],
              ["alignof", [["c"]]],
              [" of their member with the largest "],
              ["alignof", [["c"]]],
              [", classes will typically be aligned to the "],
              ["alignof", [["c"]]],
              [
                " of the largest built-in type they directly or indirectly contain."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "e2bf4608-3e57-4576-85e2-e092c5351a96": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161574,
          "id": "e2bf4608-3e57-4576-85e2-e092c5351a96",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161574,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              ["there is a consecutive sequence of "],
              ["sizeof(int)", [["c"]]],
              [" bytes within an "],
              ["S", [["c"]]],
              [" object, called a "],
              ["subobject,", [["i"]]],
              [" that contain the value of "],
              ["x", [["c"]]],
              [", and another subobject with "],
              ["sizeof(char*)", [["c"]]],
              [" bytes that contains the value of "],
              ["y", [["c"]]],
              [". The two cannot be interleaved."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "e864ecec-348c-41f8-8efd-bdfa1f7408cd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161579,
          "id": "e864ecec-348c-41f8-8efd-bdfa1f7408cd",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161579,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If two non-static members of a class have the same "],
              [
                "access specifier",
                [
                  [
                    "a",
                    "http://stackoverflow.com/documentation/c%2B%2B/508/classes-structures/1668/access-specifiers"
                  ]
                ]
              ],
              [
                ", then the one that comes later in declaration order is guaranteed to come later in the object representation. But if two non-static members have different access specifiers, their relative order within the object is unspecified."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "bulleted_list",
          "version": 5
        }
      },
      "fcc4a916-531b-4c1a-ba47-33c49675fcaa": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550525161568,
          "id": "fcc4a916-531b-4c1a-ba47-33c49675fcaa",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550525161568,
          "parent_id": "dd8faa41-453d-4e82-8ea4-8d854bd89d4d",
          "parent_table": "block",
          "properties": {
            "title": [
              ["By “class”, we mean a type that was defined using the "],
              ["class", [["c"]]],
              [" or "],
              ["struct", [["c"]]],
              [" keyword (but not "],
              ["enum struct", [["c"]]],
              [" or "],
              ["enum class", [["c"]]],
              [")."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
