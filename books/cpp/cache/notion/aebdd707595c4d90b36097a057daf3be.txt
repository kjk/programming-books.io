2245 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "aebdd707-595c-4d90-b360-97a057daf3be"
      },
      "version": -1
    }
  ]
}
Response:+1993
{
  "recordMap": {
    "block": {
      "aebdd707-595c-4d90-b360-97a057daf3be": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "2b925e94-5a68-4307-8bdf-58ee993ac708",
            "d809bc13-dbd3-4893-9bb0-ba8cc6ce7443",
            "63ce645a-4a9a-4229-a11c-7b3d0e607028",
            "2724e281-503c-4dfd-989d-db4ae226d93d",
            "d757e948-52fe-42d2-a28c-98a5790dff1b",
            "2cc02c11-06af-4788-81cc-00beba3e99f6",
            "c6357418-b57d-4d4a-99b7-d3b33356cf71",
            "7e2766a0-ba75-46a0-9de7-9b77c18104ea",
            "33bb3b67-d8c2-4bab-91b0-e2fb7bded17d",
            "4c0ba13f-2777-42fd-a1e0-9551f60cff77",
            "f0dcc0af-9a41-45de-8035-df3b9b949ccc",
            "c0eab11b-56f4-4e73-af11-d1ff2293dfd6",
            "9eedb28b-77a3-4c8e-9fc5-719fedb2e78b",
            "43a5973b-9054-4ed7-be81-7f0fe5b8cd6f",
            "e1b48829-b2ce-4cfa-a082-9bd942b89d49",
            "1638df48-3aa5-4428-9fe4-3064d674ee48"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309496,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550655060000,
          "parent_id": "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
          "parent_table": "block",
          "properties": {
            "title": [["enable_if"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 10
        }
      }
    }
  }
}
34725 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "aebdd707-595c-4d90-b360-97a057daf3be"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+34465
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0b17f7b9-11d1-4229-931e-966fb51d1ba9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "f3639356-e539-4496-9b63-4691a670e10c",
            "0c7c897d-b4eb-4871-9fed-59350129419e",
            "aebdd707-595c-4d90-b360-97a057daf3be",
            "e90da86e-1a2f-4f0b-9c7d-4bffb66a28c8",
            "3a5256c5-9dd0-49fb-afcb-4927fe1b59e5",
            "7e486e28-14ca-40ca-8ce8-789a83b58f6e",
            "3c508140-7de2-4269-97c6-72ae12e7b9f4"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522280000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550655000000,
          "parent_id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "space_permission"
            }
          ],
          "properties": {
            "title": [["SFINAE"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 32
        }
      },
      "1638df48-3aa5-4428-9fe4-3064d674ee48": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309495,
          "id": "1638df48-3aa5-4428-9fe4-3064d674ee48",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309495,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["A strength of "],
              ["std::enable_if", [["c"]]],
              [" is how it plays with refactoring and API design. If "],
              ["is_sizeable<Cont>::value", [["c"]]],
              [" is meant to reflect whether "],
              ["cont.size()", [["c"]]],
              [" is valid then just using the expression as it appears for "],
              ["size1", [["c"]]],
              [" can be more concise, although that could depend on whether "],
              ["is_sizeable", [["c"]]],
              [" would be used in several places or not. Contrast that with "],
              ["std::is_signed", [["c"]]],
              [
                " which reflects its intention much more clearly than when its implementation leaks into the declaration of "
              ],
              ["incr1", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "2724e281-503c-4dfd-989d-db4ae226d93d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309493,
          "id": "2724e281-503c-4dfd-989d-db4ae226d93d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309493,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["std::enable_if", [["c"]]],
              [" can be used to constrain templates:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "2b925e94-5a68-4307-8bdf-58ee993ac708": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309490,
          "id": "2b925e94-5a68-4307-8bdf-58ee993ac708",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309490,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["std::enable_if", [["c"]]],
              [
                " is a convenient utility to use boolean conditions to trigger SFINAE. It is defined as:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "2cc02c11-06af-4788-81cc-00beba3e99f6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309493,
          "id": "2cc02c11-06af-4788-81cc-00beba3e99f6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309493,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Here, a call to "],
              ["negate(1)", [["c"]]],
              [
                " would fail due to ambiguity. But the second overload is not intended to be used for integral types, so we can add:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "33bb3b67-d8c2-4bab-91b0-e2fb7bded17d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309494,
          "id": "33bb3b67-d8c2-4bab-91b0-e2fb7bded17d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309494,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [["When to use it"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "header",
          "version": 1
        }
      },
      "43a5973b-9054-4ed7-be81-7f0fe5b8cd6f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309495,
          "id": "43a5973b-9054-4ed7-be81-7f0fe5b8cd6f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309495,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "// handle signed types\ntemplate<typename Int>\nauto incr1(Int& target, Int amount)\n-> std::void_t<int[static_cast<Int>(-1) < static_cast<Int>(0)]>;\n\n// handle unsigned types by just doing target += amount\n// since unsigned arithmetic already behaves as intended\ntemplate<typename Int>\nauto incr1(Int& target, Int amount)\n-> std::void_t<int[static_cast<Int>(0) < static_cast<Int>(-1)]>;\n \ntemplate<typename Int, std::enable_if_t<std::is_signed<Int>::value, int> = 0>\nvoid incr2(Int& target, Int amount);\n \ntemplate<typename Int, std::enable_if_t<std::is_unsigned<Int>::value, int> = 0>\nvoid incr2(Int& target, Int amount);"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "4c0ba13f-2777-42fd-a1e0-9551f60cff77": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309494,
          "id": "4c0ba13f-2777-42fd-a1e0-9551f60cff77",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309494,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["It’s worth keeping in mind that "],
              ["std::enable_if", [["c"]]],
              [" is a helper "],
              ["on top", [["i"]]],
              [
                " of SFINAE, but it’s not what makes SFINAE work in the first place. Let’s consider these two alternatives for implementing functionality similar to "
              ],
              ["std::size", [["c"]]],
              [", i.e. an overload set "],
              ["size(arg)", [["c"]]],
              [" that produces the size of a container or array:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "63ce645a-4a9a-4229-a11c-7b3d0e607028": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309493,
          "id": "63ce645a-4a9a-4229-a11c-7b3d0e607028",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309493,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["That is, "],
              ["enable_if<true, R>::type", [["c"]]],
              [" is an alias for "],
              ["R", [["c"]]],
              [", whereas "],
              ["enable_if<false, T>::type", [["c"]]],
              [" is ill-formed as that specialization of "],
              ["enable_if", [["c"]]],
              [" does not have a "],
              ["type", [["c"]]],
              [" member type."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "7e2766a0-ba75-46a0-9de7-9b77c18104ea": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309494,
          "id": "7e2766a0-ba75-46a0-9de7-9b77c18104ea",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309494,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Now, instantiating "],
              ["negate<int>", [["c"]]],
              [" would result in a substitution failure since "],
              ["!std::is_arithmetic<int>::value", [["c"]]],
              [" is "],
              ["false", [["c"]]],
              [
                ". Due to SFINAE, this is not a hard error, this candidate is simply removed from the overload set. As a result, "
              ],
              ["negate(1)", [["c"]]],
              [" only has one single viable candidate - which is then called."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "9eedb28b-77a3-4c8e-9fc5-719fedb2e78b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309495,
          "id": "9eedb28b-77a3-4c8e-9fc5-719fedb2e78b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309495,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Now let’s consider how we might want to implement arithmetic helpers that avoid signed integer overflow in favour of wrap around or modular behaviour. Which is to say that e.g. "
              ],
              ["incr(i, 3)", [["c"]]],
              [" would be the same as "],
              ["i += 3", [["c"]]],
              [
                " save for the fact that the result would always be defined even if "
              ],
              ["i", [["c"]]],
              [" is an "],
              ["int", [["c"]]],
              [" with value "],
              ["INT_MAX", [["c"]]],
              [". These are two possible alternatives:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ad527dc6-d4a7-420b-9234-94d0b9bfb560": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c97e2222-373b-4879-ba1e-de9da33c4b9c",
            "069713c9-355d-43e5-bbe3-fe65ccc5d89f",
            "f6fb0c70-b2a7-438e-8fd0-214354d4363c",
            "cad79b8f-8e22-4786-b522-3ce3f7989dfb",
            "9582f39a-18d4-4387-a429-d2d9d9c1c0a3",
            "4e7523ec-807e-469b-846d-6f0e98a9f133",
            "c48a63c8-822c-4a23-a960-60de4face6ae",
            "99e19430-5cdd-423f-8fa9-0e2f0bf264ab",
            "ea4c768f-8ffd-48a6-bc20-bd19b214545c",
            "3724ad56-a879-48bf-847e-5adcfcb60c18",
            "52470773-ddd6-4b1b-ad39-7b26f7b28f00",
            "6fdcface-f439-4f73-87ef-255a8f378573",
            "ee10cf45-84c7-467c-8068-ea9076a2401a",
            "4dc21607-5d04-4a95-bced-ba855fbfa11f",
            "546689ba-7cc0-49cb-ae94-05172f20d6dc",
            "193b149e-733b-4344-8898-29dc4a2ef0b0",
            "7b3003e0-5331-46e9-a216-03a87845d9e4",
            "fe5135d2-0f28-4675-bccd-611b7222102a",
            "a47adf4d-f2bb-4f72-84ee-798641440dfd",
            "903c7a47-fbc0-4b12-81a4-646b290a4e1e",
            "40e8450d-4736-4ad0-be7d-a2d9307ddf4f",
            "b886ff5d-614b-4aa9-9e99-851b7998439b",
            "89d591b2-5143-487b-8a09-144b6b266e4c",
            "ede1fd12-0013-4e8b-a92d-109c2ef39c10",
            "8655f492-9c51-4f68-ad52-8b6c1e02a277",
            "f2a0f008-68d4-4ef0-b159-b4601056dc66",
            "db03800f-1091-419f-bb8b-e6357b79b0ee",
            "50a27510-120b-4da0-9ecb-cf15396a0108",
            "bd95f7bc-834a-4faf-992f-446d54f5fc91",
            "0789dc55-0210-4292-957d-ed83df8e73af",
            "d5d40e50-c234-4e34-8c36-6916f8e79960",
            "5644241e-ceec-479a-8322-e9c1780f1515",
            "de2aa703-c2f6-4f94-bc50-eb5201c26ac3",
            "333099ca-9ef1-4569-b9ad-a7a9275c368b",
            "263edcef-95ee-480a-8c67-1e74662a250a",
            "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
            "1146c4bd-8317-421d-b231-ebcb0eff5721",
            "ee86edbe-8dd9-497a-a24c-fa516272404e",
            "13fedea6-df65-4996-9280-9cedb29d5f94",
            "b96c747c-3d87-49a0-b2bb-264f7c11b216",
            "2457e2b5-2a2a-4489-9eac-adb5cebfd9b8",
            "ecf8cc46-eac4-4c36-a422-ed2cca054451",
            "cbd900b3-1684-4f0d-977a-5a5b2a20aff3",
            "26e69b2d-1c6d-47ea-af87-47fa9cfbdf56",
            "cb822004-fe61-4bd8-91b8-d45b2acf0576",
            "efdc4616-d5e4-4dce-b49c-941c07a9ac4b",
            "43b2d3b6-c6aa-4441-b665-3932542c711c",
            "6980d61a-f1fa-491f-8409-409e295a4b03",
            "e197edf1-7913-4c71-bf9f-78feec182413",
            "a3104ba4-9a8b-4f2a-ad89-25f36d3b9595",
            "c0487639-ff5b-4e90-a0b3-9fe411676c2c",
            "402ef4da-a4e3-4503-ab08-9a4aa56821b5",
            "3b939fe5-bf07-416e-b626-9b4dcfb5abc4",
            "94bfa868-4e02-4b90-841b-817c34132524",
            "8a295383-3e95-42dc-b126-f5d5d4d9927a",
            "afe087c6-fdaf-4e79-b087-b5329772ae68",
            "139ade48-e995-4c51-9c31-2edc9475f16e",
            "3b14aac5-20b3-4de0-9a04-adc1cc273aec",
            "2be9c7d5-be12-439a-8968-ad057c67187a",
            "71517390-0244-456d-87c4-82c582ca8abf",
            "f1b860db-be5a-41ed-a67b-b7b0181ec59f",
            "d548e856-41b8-49c8-a801-044c518c9fe5",
            "83f01298-2804-4599-8deb-99728a5d557a",
            "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
            "eb50f34f-bfa8-4e16-9ad9-d114eb1d34d9",
            "96325b08-db02-4f4f-a7a3-7510a746dbe2",
            "5a1044bb-eec6-47e0-932c-1a000fc67e20",
            "48a240ac-2fc8-4208-bd39-82f2c3d27cb4",
            "2ed71a30-e220-47b0-b0e7-1bc14fce30c0",
            "ea515dbf-689d-48fb-bfb8-93f8853d7ec0",
            "899c3027-a75e-4a44-9144-10a53c6a2c11",
            "e1dd94ae-aa5a-4f89-b959-f2ec61771796",
            "fcd2d991-afe0-4c4f-a9fe-760a139ae1f3",
            "d0bc06f8-edea-49a0-bdbb-c1bef0d073bd",
            "6c5aa9dd-7698-4690-bd9e-644763376917",
            "5fbdea23-a3bd-48e3-9bb9-c7ca69fd9aa2",
            "44b9891c-fe65-4aa6-8ac6-b623709b7c02",
            "904db18b-f9e4-4135-accd-8cab1b7efd09",
            "a29d7b5a-3989-43f1-8efa-86ef82101f43",
            "c477f25f-108c-44a4-88a0-7be0b1a8f442",
            "1c542776-d859-4f7e-889a-d3f2c5b93f45",
            "f05fc49e-c44c-4e93-b1f0-a05de793c5bd",
            "6770e597-215e-480b-b658-f449f175ed3c",
            "d3696e4f-8789-4401-af6c-2f073d356228",
            "5dbd715a-2e96-4062-9cda-4e181e63af5e",
            "1e5df2e7-ee0b-4037-ab62-15139a784f28",
            "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
            "bd2b6b7e-15fe-4593-9be0-b9cb97312af0",
            "106e396c-5cd1-4e4b-a70c-30ba85edca56",
            "9a0f90cc-6905-4660-8751-556567fcd897",
            "1b4aabcd-82e1-426e-b2cd-5f1a6cfa8e60",
            "e6a35ae0-352c-42a0-9c74-633d5c76667f",
            "e2db6936-0727-4a61-bd9e-8712c9355a28",
            "02d273f3-3937-4a5b-86af-fbaa7082fc98",
            "5eb58f1d-da3c-4ebe-aff3-c98a60cca1a7",
            "289db939-0630-4d39-8987-cd9042ba485d",
            "5b32901d-2e27-4970-ba74-be06a103aa30",
            "4f03abce-5ffe-4575-9601-52e18b342ca2",
            "4a738092-15a0-42a9-8178-c62e1f86c80c",
            "f6be37ea-b1ea-4d12-902e-1e55a74f3c28",
            "66d100a7-32a0-4479-9f62-57e81c004eb6",
            "b7131d5c-8602-4af3-82a7-7c00e59ad384",
            "2d35c52b-5348-43d8-baf3-741d0b68c7ff",
            "8f46fba9-ba8b-4eaf-bb5f-2370fa61981b",
            "3b6d2215-7c30-4151-b9f1-7d1dc6e9d0de",
            "b41d10e9-7c12-482e-a1ff-612580407bc1",
            "5080976c-532d-492c-9735-9abf7dc903ae",
            "a0e8b380-dc71-4c5e-9564-5a6a96d413b0",
            "c70aafee-9819-4bd7-9b37-69e9f016666b",
            "2f06e164-6745-4c46-9402-92f51f9f9266",
            "b2086806-a259-48af-adcb-172245e66aa0",
            "0dfb5c8c-d986-4536-97a3-b3f543cfd7fa",
            "14d06bc1-b112-4b2f-a0a3-67a8dd9c958c",
            "4f68e8c3-ce07-490a-ad1e-1605c992a0ab",
            "f2023690-0f94-491a-ac9b-9c913f18d32c",
            "48c65d67-f77e-4b0b-b90a-83ab75bd68a9",
            "fc7b0093-a386-4cfb-9e24-ebd1f41fa3fa",
            "1e648ce1-cc7e-4997-bf6e-9a33d2ac504d",
            "e105eeaa-e8c4-4f5c-b412-90c65bdf217a",
            "d5db2d0f-24c4-4bf6-a1d3-fc170bfb1b75",
            "b4ae7d5c-1d56-46c7-a0d9-9af16a5bad5f",
            "13e1fda6-ad15-4061-a10e-d4a621970eb7",
            "29483c03-d3f3-426c-bd91-6dba06c1c86f",
            "5731e795-bc6e-4f67-a20f-e1ea328ebb4e",
            "ffc91cd7-ce2e-43bd-83f9-dd500633c0a2",
            "50856007-ed7d-41fb-8551-374ecae3e24b",
            "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
            "cbbee582-eb1d-4f69-a297-e10ba2cd83ab",
            "e3f32187-64e1-4609-b294-74d479b50a70",
            "dadb2eed-6939-4a7d-9afa-46a0514a66be",
            "7933074e-4123-4c04-8235-24ded3b719ed",
            "3e515719-4b1e-4dc7-9955-45485e25e7d3",
            "c793f95d-c3c9-4e23-a753-d7b7871c3bbf",
            "f0479f5d-620b-453a-b476-4c9e9418b846",
            "020f0e91-0de0-4617-bb97-e4863949153d",
            "6dc44543-880c-4829-bd86-818b80f5aac6",
            "0cb787c7-79fb-4e4c-a8f2-c95bfa483953",
            "4e04587c-419b-4bb3-bcb4-efe6a43e35e9",
            "46b28c54-a7e1-4286-9bdc-69ae87c3bad3",
            "5e61d351-5c67-4222-b553-e5a42137412d",
            "e819fb9f-77e3-490d-9b3b-288189045e39",
            "b1cbbef7-66d3-49c3-aaff-f598af5cdf47",
            "05715f55-0a2a-4c15-8aa1-b8c1e8aa98a4",
            "f0a4483b-95d9-4c82-8e41-15c96d864674",
            "2dfdecd0-c228-4dc2-941d-0a4e53390d1c",
            "2172f363-6ba3-4c7d-b75a-95189cc14546",
            "6f1bdf3d-1474-4baa-98bd-f39758d46389",
            "03d0218f-3acf-4c09-8902-6b09a4f35be4",
            "5291840b-1ac0-4473-9bc3-691467a51c05",
            "83d53c9b-bf14-42a2-8fb8-238a2fcb905a",
            "8e4180b2-04a8-47ee-8473-9c3c632e261a",
            "10708491-24c3-48f4-b554-d2665157037f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521908832,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1594594920000,
          "parent_id": "204dd4d3-a72c-4a9e-ba37-ebd5fc5ba989",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 637
        }
      },
      "aebdd707-595c-4d90-b360-97a057daf3be": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "2b925e94-5a68-4307-8bdf-58ee993ac708",
            "d809bc13-dbd3-4893-9bb0-ba8cc6ce7443",
            "63ce645a-4a9a-4229-a11c-7b3d0e607028",
            "2724e281-503c-4dfd-989d-db4ae226d93d",
            "d757e948-52fe-42d2-a28c-98a5790dff1b",
            "2cc02c11-06af-4788-81cc-00beba3e99f6",
            "c6357418-b57d-4d4a-99b7-d3b33356cf71",
            "7e2766a0-ba75-46a0-9de7-9b77c18104ea",
            "33bb3b67-d8c2-4bab-91b0-e2fb7bded17d",
            "4c0ba13f-2777-42fd-a1e0-9551f60cff77",
            "f0dcc0af-9a41-45de-8035-df3b9b949ccc",
            "c0eab11b-56f4-4e73-af11-d1ff2293dfd6",
            "9eedb28b-77a3-4c8e-9fc5-719fedb2e78b",
            "43a5973b-9054-4ed7-be81-7f0fe5b8cd6f",
            "e1b48829-b2ce-4cfa-a082-9bd942b89d49",
            "1638df48-3aa5-4428-9fe4-3064d674ee48"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309496,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550655060000,
          "parent_id": "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
          "parent_table": "block",
          "properties": {
            "title": [["enable_if"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 10
        }
      },
      "c0eab11b-56f4-4e73-af11-d1ff2293dfd6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309495,
          "id": "c0eab11b-56f4-4e73-af11-d1ff2293dfd6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309495,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Assuming that "],
              ["is_sizeable", [["c"]]],
              [
                " is written appropriately, these two declarations should be exactly equivalent with respect to SFINAE. Which is the easiest to write, and which is the easiest to review and understand at a glance?"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "c6357418-b57d-4d4a-99b7-d3b33356cf71": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309494,
          "id": "c6357418-b57d-4d4a-99b7-d3b33356cf71",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309494,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "int negate(int i) { return -i; }\n\ntemplate <class F, class = typename std::enable_if<!std::is_arithmetic<F>::value>::type>\nauto negate(F f) { return -f(); }"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "d757e948-52fe-42d2-a28c-98a5790dff1b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309493,
          "id": "d757e948-52fe-42d2-a28c-98a5790dff1b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309493,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "int negate(int i) { return -i; }\n\ntemplate <class F>\nauto negate(F f) { return -f(); }"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "d809bc13-dbd3-4893-9bb0-ba8cc6ce7443": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309493,
          "id": "d809bc13-dbd3-4893-9bb0-ba8cc6ce7443",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309493,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template <bool Cond, typename Result=void>\nstruct enable_if { };\n\ntemplate <typename Result>\nstruct enable_if<true, Result> {\n    using type = Result;\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "e1b48829-b2ce-4cfa-a082-9bd942b89d49": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309495,
          "id": "e1b48829-b2ce-4cfa-a082-9bd942b89d49",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309495,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Once again which is the easiest to write, and which is the easiest to review and understand at a glance?"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "f0dcc0af-9a41-45de-8035-df3b9b949ccc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550522309494,
          "id": "f0dcc0af-9a41-45de-8035-df3b9b949ccc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550522309494,
          "parent_id": "aebdd707-595c-4d90-b360-97a057daf3be",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "// for containers\ntemplate<typename Cont>\nauto size1(Cont const& cont) -> decltype( cont.size() );\n\n// for arrays\ntemplate<typename Elt, std::size_t Size>\nstd::size_t size1(Elt const(&arr)[Size]);\n\n// implementation omitted\ntemplate<typename Cont>\nstruct is_sizeable;\n\n// for containers\ntemplate<typename Cont, std::enable_if_t<std::is_sizeable<Cont>::value, int> = 0>\nauto size2(Cont const& cont);\n\n// for arrays\ntemplate<typename Elt, std::size_t Size>\nstd::size_t size2(Elt const(&arr)[Size]);"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      }
    },
    "space": {}
  }
}
