3606 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "b7a2fa51-e43c-4727-a42c-7f716dea4885"
      },
      "version": -1
    }
  ]
}
Response:+3354
{
  "recordMap": {
    "block": {
      "b7a2fa51-e43c-4727-a42c-7f716dea4885": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c973f744-7781-45f3-93c6-9f4acb594e70",
            "7bcc0abe-a56e-4fe4-88f5-cc1c4bc4d451",
            "c6627224-62f9-4297-a7b9-a83f75d3ecde",
            "475e272e-5d6f-4552-8031-cb721f88ed25",
            "0eec593c-b751-4104-8a76-e0052b747b55",
            "c894ad94-0ebc-4925-ad63-22550bde204d",
            "617f4afe-32df-407f-91e4-b443668ad69f",
            "5cd66b4e-b2bb-4440-92d6-e50969669307",
            "fbd49b94-a23a-4f04-bad4-8e7d7ca4c59b",
            "1f8ea8f6-973a-4a14-a613-b46bb21705ce",
            "d3c0d8da-48cd-448c-938c-0dc6340f27d9",
            "d6125fa5-a1c3-4ad8-9744-95d69d6d6adb",
            "e00cef2b-2f6a-4bab-b71c-bb4883af3214",
            "718a8371-f1c2-4ee9-ad85-4d8720f1a76a",
            "6f0014be-f1c3-48db-9347-3b9fdab6ef11",
            "5b182aa3-ce2d-4e0e-872c-fbc1b2e48a6b",
            "406a5a10-38ac-48eb-b673-56aa530bc4cd",
            "39335c35-89b8-45be-b2e2-31a5016006d3",
            "c15d616e-8bb7-4d01-8b0d-4f6ee182848f",
            "b3b7bf69-4006-4cd8-a6f9-3f1449fee77d",
            "7c4277cb-d8db-4b75-b9ce-9ddd7be02455",
            "3ab4c652-b11f-4af6-82e9-e30ccc87ac2f",
            "97689556-b45c-4cf9-9d9b-b5f5214b9369",
            "203f7f31-c8a7-472f-a2c7-a1c3451b0a82",
            "ef82c932-4678-4f28-809d-aa17761d801a",
            "f1cba66a-ad6a-4a55-bca7-5c228f83cf13",
            "18fbc884-68b4-4626-9a1d-ed0d5477bb9e",
            "a1efba9d-f21a-4384-8621-a145867ae51d",
            "c113d16f-13b9-4648-8e45-89a3097e3bb3",
            "3a2389f0-8692-4489-a285-ff13fa165bec",
            "944cc150-a71a-4308-9fb4-fdbc09e7fe0a",
            "67f4efef-e265-4b54-a9c2-5021ee2c7954",
            "c34d2160-fd17-4020-9812-56fdd549883c",
            "4c2b4b51-32b1-4c94-a4e5-04c798dfbee0",
            "2b4474e3-8c7f-47cb-ab5a-b2e3728f2c6a",
            "09606291-365a-40c6-aca4-68d8fa18d5b6",
            "0738f730-9001-45e7-8adc-03b14ec74341",
            "aa483bc7-2495-4701-aeae-38e9d32a965a",
            "32660981-575a-44f7-97bf-3ec106a117ba",
            "f3e6c1d2-a588-4101-86c2-3107ce45846c",
            "c4fb5293-acea-4f61-89e0-e978e9ce7100",
            "e079a264-1285-4f66-b83a-a3d75bc405ba"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875047,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550799060000,
          "parent_id": "193b149e-733b-4344-8898-29dc4a2ef0b0",
          "parent_table": "block",
          "properties": {
            "title": [["Different keywords"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 18
        }
      }
    }
  }
}
71383 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "b7a2fa51-e43c-4727-a42c-7f716dea4885"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+71123
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "0738f730-9001-45e7-8adc-03b14ec74341": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875046,
          "id": "0738f730-9001-45e7-8adc-03b14ec74341",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875046,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Friends are not in the class’s scope, and they are not called using the member-selection operators (. and –>) unless they are members of another class."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "09606291-365a-40c6-aca4-68d8fa18d5b6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875046,
          "id": "09606291-365a-40c6-aca4-68d8fa18d5b6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875046,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A friend function is a function that is not a member of a class but has access to the class’s private and protected members.Friend functions are not considered class members; they are normal external functions that are given special access privileges."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "0eec593c-b751-4104-8a76-e0052b747b55": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "0eec593c-b751-4104-8a76-e0052b747b55",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875041,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A void pointer can point to a function, but not to a class member in C++."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "18fbc884-68b4-4626-9a1d-ed0d5477bb9e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875045,
          "id": "18fbc884-68b4-4626-9a1d-ed0d5477bb9e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875045,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "To handle exceptions that may be thrown, implement one or more catch blocks immediately following a try block. Each catch block specifies the type of exception it can handle."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 5
        }
      },
      "193b149e-733b-4344-8898-29dc4a2ef0b0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "e794b0c1-cc79-4904-ae51-f0a023bba26d",
            "b78cda98-31ac-4aef-9f53-0f9299de7e9f",
            "8af69255-f07d-46ab-87f5-e00bd10291ca",
            "1e79b27b-78e4-428e-889b-baf9c9c89c16",
            "c64b145d-1f76-4a6e-949e-90dfff20638c",
            "706b555d-43eb-4ce0-97e2-b9f49611bf41",
            "e7a81869-af22-41bf-b90e-8aac675e05b3",
            "63cfdb7d-df68-455d-823a-9a8086285abf",
            "52f66c22-e486-4e8c-b082-1286c032776d",
            "46ada143-ed9a-419d-ae62-363d05fbc20a",
            "9bba361b-ee34-450f-9e1f-5b154654a55b",
            "f0aeb669-6e93-410a-81a7-5c4b732148e0",
            "ded765d5-a652-47c4-bd14-b2525abed092",
            "536e40ff-b22c-4f8f-9bdd-95b47bef1cca",
            "d6a39db2-7c61-4c88-9189-abf9fba8f475",
            "c92b1880-19bb-4acc-8536-06a2fcbaaa6f",
            "ffdf0263-1df0-4bef-81f9-80a8dd5d1926",
            "9e99d1c4-8be2-4f4a-aed1-224e1c88797b",
            "4291b67d-925c-4857-a00a-6afcc05249de",
            "e93bf60b-9e51-41f5-aeae-e1b8671a152f",
            "039b2227-b86d-4417-824f-de5bf4f25448",
            "56b3218d-4bb6-4d9d-9937-aa264e2ba0cb",
            "bd5b5a92-77f2-4cb3-98a3-bd735788d8e6",
            "30c1092f-3e52-4f35-8ba6-fdf03a6b33e4",
            "993e3ad2-84ea-4d34-b4a0-d53afcaa1790",
            "c84d2860-3095-4b1c-922f-1b7566bf2b35",
            "b84bb8cf-3e12-4f48-a48c-3f264a484ea3",
            "0047667a-3b1a-4145-9c8c-0f1f881df6b0",
            "1e074077-8507-47c6-a4ea-3d700b9337c6",
            "713e43ab-5852-458d-8ffe-2bc55da6ca1b",
            "7d9f1ceb-48a2-4d7c-8b0a-3f042aabd4e6",
            "34b45309-51a8-48e3-ae1f-915542c5ef19",
            "11c9feac-3439-4d4b-97cc-2b129471759b",
            "5790fecc-8e2d-43a8-a427-72b17fabf95a",
            "faeed35b-bcc3-47b2-ae57-c2805419aa75",
            "e8232b06-6844-4596-a8da-f50f1572aa8c",
            "e09cd10e-eba0-4c6c-9234-09a2e8971cab",
            "5b513918-8317-40e1-8c1a-6fa67b9c0484",
            "f380b59b-bf07-443a-8742-c7eab1669ace",
            "2101cf24-7786-4554-bc66-27a0482de564",
            "406c17d3-f2fe-4907-81c4-bb14c550c13b",
            "a5f35493-22f7-4bb7-9c03-b5f51a80f126",
            "78f4af1f-9c57-47e8-8265-6760a2e4e989",
            "511e04ea-23ea-4af0-8663-07f12f35a0ee",
            "9ab23db9-fbde-4676-b856-d3c5364a8e56",
            "c6157970-985c-42e2-a7da-8fc4073e199b",
            "e34a499f-29fa-49ff-8c12-852a04acc6ac",
            "c33904fc-733d-4388-970c-9cfa97d8bf78",
            "b9864044-ab8e-4135-b2db-70c836d2f62e",
            "35772b30-e0fa-4d46-912a-7a121c1a5270",
            "d9ae71f6-a419-41f4-bcfc-7530ecb0c6b5",
            "3e442926-965c-4f7b-9774-a2dab7580c21",
            "d9ebf416-eb4c-4592-bbd6-2b84db4e5650",
            "31fe290b-908f-4df4-a42b-052c044bc8f5",
            "0ac4d01c-efe5-4862-9f84-7536857a7330",
            "309e07ac-8181-4b3a-a20e-8b99c2206a02",
            "96da02ea-373f-42fe-82dc-03e8bca28fd7",
            "b301a609-df4b-4ff9-9b5f-ff4c7f2b11c6",
            "535155b0-cb24-4fd5-a640-903f18d1926d",
            "a9fbfdd9-77d7-47cd-a82e-94b5d2258ea5",
            "780c43a5-026a-471c-8cc6-8bc0a88e0057",
            "968d716e-bd7f-42fd-a125-945fe5556411",
            "d0d3ccbc-bc85-4b47-8ada-f036d8f050b9",
            "daaf226e-6e08-48e2-8947-b010d62841e1",
            "8a90974f-8971-4b24-bd24-54aaf75e0dc4",
            "9e780052-ea18-498f-a39b-01322e7900ac",
            "f5541dad-b670-49e7-9bd3-ba19d4961096",
            "52e4ff25-2b03-46ac-86b9-daf9c7caa3ce",
            "5a3b2aa8-aa84-4d9b-95b9-0707cbe961de",
            "4413c61e-4ee5-4428-b971-79deac67331c",
            "d04ca44b-3196-4784-8f1c-205f6202b528",
            "cb107e2e-bda0-4370-874e-fc72b4df933c",
            "0e65124f-b1e2-4d40-91d1-095adff4c769",
            "00576777-22ff-44a0-a84b-f60fda2f723a",
            "25c07b35-0758-46fb-85f4-98840f61cd44",
            "bd974b91-8653-4c13-acf8-49f8d63b09c8",
            "446cd580-ae4f-4b55-a0c9-6e3804c2d1fe",
            "6af54022-ff0f-4187-bb76-f56d05c47aa1",
            "45ea4f82-c599-4651-a5f8-5c7b22f42723",
            "d0899787-7b28-4bd4-bb75-aa1c17d5dd04",
            "4807c5cd-5c2d-49ba-ad46-8779a56a64b3",
            "e8ec84e9-e8c7-4bf3-8388-0baa4b4b2f13",
            "370b9556-9b23-4352-8d8f-d8b80b84d098",
            "d7a842fb-4638-400f-873b-3879e4f5193f",
            "7af164c3-94af-42bc-82db-ef67e62889e8",
            "aae5cc79-bc1b-44af-bbf6-21d231915ef8",
            "27cd05da-39de-4557-aaf6-8fd98a62f410",
            "fa6b21b6-7148-4d7d-aa77-724a8f5de5e8",
            "4b35a19a-d86b-4e41-a078-9e2c896cfeda",
            "579a0a81-64fd-4a0e-978d-7dde72ad1b21",
            "e9025524-d1bc-4e76-a789-c77eb305a3ae",
            "16953cd1-0a09-4981-9a93-ca5509ffc296",
            "37d9a50c-e303-47c6-ae39-43c4a98c3d73",
            "fb66c62e-d7e8-4fff-8958-f85fa0103773",
            "92cb2e11-4a3d-43d4-a3e1-ddde95501a54",
            "d553e7c4-bcbc-4cc8-a258-9ee2c1f96856",
            "17395f3b-0392-40d1-b6e2-ab7d26a78e31",
            "4f5d1d1b-ec8b-47e0-82e4-a7c9cc558a84",
            "6e60e4ee-e5cc-499b-81e3-cfec0aebeb94",
            "8a4ba3de-da6b-4588-9d7b-8ab367190c78",
            "b76fd97b-1400-4e56-a1b8-393549c0c51c",
            "5fe8453e-7eca-4713-9284-9d73060c387a",
            "ab7761c5-21a2-4976-928b-85fab0e67225",
            "64d48998-bbf8-494b-8659-ee1c36eaab76",
            "3a90582e-ea52-4edb-bfd9-62e076b876a3",
            "ce82c56c-1ae9-477c-9933-a1125860877f",
            "b92b7a27-6c8d-422c-8f57-55bafd348801",
            "49766b7d-d2c2-4013-aaab-7c7551a1791f",
            "20732fb6-0300-4717-aefa-4ff5008603bc",
            "232ed577-031e-47fe-a2f0-03e20a11968f",
            "e3479d8e-3a1e-4c5a-ae1a-883307f3c30c",
            "6a06ac27-800c-4ea7-a0d8-cca0575dfa8c",
            "c0306291-13f9-4f9e-8e4d-3c87c983d748",
            "ff47f4fc-2592-4fc1-aad5-49e25ff01c44",
            "a8e2f9c2-c99c-4a99-9d38-af56d944e5b1",
            "a63630e4-8886-4fe1-8ab0-b1ef53a3c140",
            "80d48d60-eb10-4506-aaac-e070720fbc02",
            "3989239a-2405-4fe2-9692-0fab106060c7",
            "9cbb3061-ddb2-4fa6-987c-ebc404a64fc9",
            "21f5d7f0-850d-4e66-a51d-2a690ee9ea10",
            "b93b40dd-e461-40a0-a5e6-18b757efde3f",
            "94d02d09-b02e-4971-8571-12ce2b6396cf",
            "da1f0cde-8c2f-458e-b4e1-6f1da5b26a86",
            "9d57ec49-f7e3-43f1-8a5c-94b5fb545df0",
            "ac9ce797-ac25-4ee8-b66a-b4e9e91f65df",
            "2f2a7305-db9a-4527-a974-b2c5efad0813",
            "f72d0564-c99e-4bb5-bcc0-71a4b36d2c98",
            "b7a2fa51-e43c-4727-a42c-7f716dea4885",
            "c687012b-9ce1-4269-a9af-709dc0a09d2f",
            "504297ae-98af-4f7f-bbef-53a51b223808",
            "7e117e7c-b73e-4aca-a180-29c881263acc",
            "7883f339-5d68-4b69-85e7-83efee1bad33",
            "1b6b7de5-3aa8-4545-9ed6-e57e944f38d4",
            "4bc2845a-9cdc-4e11-8583-f988f67ae02f",
            "0c5fb7f4-3a72-411f-a3d6-97911095cd9f",
            "9bb75086-6f7a-4990-8237-397438213f74",
            "738d2795-842e-4cf1-99cb-0f5998b46e9a",
            "c1968a5d-f24c-4a3d-8ac8-d27d0faf9f4b",
            "fc77b445-ebdc-4449-bcc4-76a6db586d16",
            "3baf60ad-7158-4be4-841d-932bb67697d8"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523780000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "193b149e-733b-4344-8898-29dc4a2ef0b0",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552300020000,
          "parent_id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["keywords"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 218
        }
      },
      "1f8ea8f6-973a-4a14-a613-b46bb21705ce": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "1f8ea8f6-973a-4a14-a613-b46bb21705ce",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875041,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["virtual C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "203f7f31-c8a7-472f-a2c7-a1c3451b0a82": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875044,
          "id": "203f7f31-c8a7-472f-a2c7-a1c3451b0a82",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875044,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "To implement exception handling in C++, you use try, throw, and catch expressions."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 5
        }
      },
      "2b4474e3-8c7f-47cb-ab5a-b2e3728f2c6a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875046,
          "id": "2b4474e3-8c7f-47cb-ab5a-b2e3728f2c6a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875046,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["friend functions"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "32660981-575a-44f7-97bf-3ec106a117ba": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875046,
          "id": "32660981-575a-44f7-97bf-3ec106a117ba",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "#include <iostream>  \n\nusing namespace std;  \nclass Point  \n{  \n    friend void ChangePrivate( Point & );  \npublic:  \n    Point( void ) : m_i(0) {}  \n    void PrintPrivate( void ){cout << m_i << endl; }  \n\nprivate:  \nint m_i;  \n};  \n\nvoid ChangePrivate ( Point &i ) { i.m_i++; }  \n\nint main()  \n{  \n   Point sPoint;  \n   sPoint.PrintPrivate();  \n   ChangePrivate(sPoint);  \n   sPoint.PrintPrivate();  \n    // Output: 0  \n           1  \n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "39335c35-89b8-45be-b2e2-31a5016006d3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "39335c35-89b8-45be-b2e2-31a5016006d3",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875043,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["this pointer"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 5
        }
      },
      "3a2389f0-8692-4489-a285-ff13fa165bec": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875045,
          "id": "3a2389f0-8692-4489-a285-ff13fa165bec",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "try {  \nthrow CSomeOtherException();  \n}  \ncatch(...) {  \n// Catch all exceptions – dangerous!!!  \n// Respond (perhaps only partially) to the exception, then  \n// re-throw to pass the exception to some other handler  \n// ...  \nthrow;  \n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 7
        }
      },
      "3ab4c652-b11f-4af6-82e9-e30ccc87ac2f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "3ab4c652-b11f-4af6-82e9-e30ccc87ac2f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "myDate.setMonth( 3 );  \n\ncan be interpreted this way:\n\n\nsetMonth( &myDate, 3 );  \n\nThe object's address is available from within the member function as the this pointer. Most uses of this are implicit. It is legal, though unnecessary, to explicitly use this when referring to members of the class. For example:\n\n\nvoid Date::setMonth( int mn )  \n{  \n   month = mn;            // These three statements  \n   this->month = mn;      // are equivalent  \n   (*this).month = mn;  \n}  \n\nThe expression *this is commonly used to return the current object from a member function:\n\n\nreturn *this;  \n\nThe this pointer is also used to guard against self-reference:\n\n\nif (&Object != this) {  \n// do not execute in cases of self-reference"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "406a5a10-38ac-48eb-b673-56aa530bc4cd": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "406a5a10-38ac-48eb-b673-56aa530bc4cd",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875043,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              ["base-class-name", [["b"]]],
              [" Identifies a previously declared class type"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 5
        }
      },
      "475e272e-5d6f-4552-8031-cb721f88ed25": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875040,
          "id": "475e272e-5d6f-4552-8031-cb721f88ed25",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875040,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "If a pointer’s type is void *, the pointer can point to any variable that is not declared with the const or volatile keyword. A void pointer cannot be dereferenced unless it is cast to another type. A void pointer can be converted into any other type of data pointer."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "4c2b4b51-32b1-4c94-a4e5-04c798dfbee0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875046,
          "id": "4c2b4b51-32b1-4c94-a4e5-04c798dfbee0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "class friend F  \nfriend F;\nclass ForwardDeclared;// Class name is known.  \nclass HasFriends  \n{  \n   friend int ForwardDeclared::IsAFriend();// C2039 error expected  \n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "5b182aa3-ce2d-4e0e-872c-fbc1b2e48a6b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "5b182aa3-ce2d-4e0e-872c-fbc1b2e48a6b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875043,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              ["access-specifier", [["b"]]],
              [
                " Defines the level of access to the base class, public, protected or private. Can appear before or after the virtual keyword."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "5cd66b4e-b2bb-4440-92d6-e50969669307": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "5cd66b4e-b2bb-4440-92d6-e50969669307",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875041,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A type qualifier that you can use to declare that an object can be modified in the program by the hardware."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "617f4afe-32df-407f-91e4-b443668ad69f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "617f4afe-32df-407f-91e4-b443668ad69f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875041,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["Volatile C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 5
        }
      },
      "67f4efef-e265-4b54-a9c2-5021ee2c7954": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875045,
          "id": "67f4efef-e265-4b54-a9c2-5021ee2c7954",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875045,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "In some circumstances, it is more convenient to grant member-level access to functions that are not members of a class or to all members in a separate class. Only the class implementer can declare who its friends are. A function or class cannot declare itself as a friend of any class. In a class definition, use the friend keyword and the name of a non-member function or other class to grant it access to the private and protected members of your class. In a template definition, a type parameter can be declared as a friend."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "6f0014be-f1c3-48db-9347-3b9fdab6ef11": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875042,
          "id": "6f0014be-f1c3-48db-9347-3b9fdab6ef11",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875042,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              ["member-function-declarator", [["b"]]],
              [" Declares a member function."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "718a8371-f1c2-4ee9-ad85-4d8720f1a76a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875042,
          "id": "718a8371-f1c2-4ee9-ad85-4d8720f1a76a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875042,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              ["type-specifiers", [["b"]]],
              [" Specifies the return type of the virtual member function."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "7bcc0abe-a56e-4fe4-88f5-cc1c4bc4d451": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875037,
          "id": "7bcc0abe-a56e-4fe4-88f5-cc1c4bc4d451",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875037,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["void C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "7c4277cb-d8db-4b75-b9ce-9ddd7be02455": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "7c4277cb-d8db-4b75-b9ce-9ddd7be02455",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875043,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "An object’s this pointer is not part of the object itself; it is not reflected in the result of a sizeof statement on the object. Instead, when a nonstatic member function is called for an object, the address of the object is passed by the compiler as a hidden argument to the function. For example, the following function call:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "944cc150-a71a-4308-9fb4-fdbc09e7fe0a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875045,
          "id": "944cc150-a71a-4308-9fb4-fdbc09e7fe0a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875045,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["friend (C++)"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "97689556-b45c-4cf9-9d9b-b5f5214b9369": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "97689556-b45c-4cf9-9d9b-b5f5214b9369",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875043,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["try, throw, and catch Statements (C++)"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "a1efba9d-f21a-4384-8621-a145867ae51d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875045,
          "id": "a1efba9d-f21a-4384-8621-a145867ae51d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "MyData md;  \ntry {  \n// Code that could throw an exception  \nmd = GetNetworkResource();  \n}  \ncatch (const networkIOException& e) {  \n// Code that executes when an exception of type  \n// networkIOException is thrown in the try block  \n// ...  \n// Log error message in the exception object  \ncerr << e.what();  \n}  \ncatch (const myDataFormatException& e) {  \n// Code that handles another exception type  \n// ...  \ncerr << e.what();  \n}  \n\n// The following syntax shows a throw expression  \nMyData GetNetworkResource()  \n{  \n// ...  \nif (IOSuccess == false)  \n  throw networkIOException(\"Unable to connect\");  \n// ...  \nif (readError)  \n  throw myDataFormatException(\"Format error\");   \n// ...  \n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "aa483bc7-2495-4701-aeae-38e9d32a965a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875046,
          "id": "aa483bc7-2495-4701-aeae-38e9d32a965a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875046,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A friend function is declared by the class that is granting access. The friend declaration can be placed anywhere in the class declaration. It is not affected by the access control keywords."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "ad527dc6-d4a7-420b-9234-94d0b9bfb560": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c97e2222-373b-4879-ba1e-de9da33c4b9c",
            "069713c9-355d-43e5-bbe3-fe65ccc5d89f",
            "f6fb0c70-b2a7-438e-8fd0-214354d4363c",
            "cad79b8f-8e22-4786-b522-3ce3f7989dfb",
            "9582f39a-18d4-4387-a429-d2d9d9c1c0a3",
            "4e7523ec-807e-469b-846d-6f0e98a9f133",
            "c48a63c8-822c-4a23-a960-60de4face6ae",
            "99e19430-5cdd-423f-8fa9-0e2f0bf264ab",
            "ea4c768f-8ffd-48a6-bc20-bd19b214545c",
            "3724ad56-a879-48bf-847e-5adcfcb60c18",
            "52470773-ddd6-4b1b-ad39-7b26f7b28f00",
            "6fdcface-f439-4f73-87ef-255a8f378573",
            "ee10cf45-84c7-467c-8068-ea9076a2401a",
            "4dc21607-5d04-4a95-bced-ba855fbfa11f",
            "546689ba-7cc0-49cb-ae94-05172f20d6dc",
            "193b149e-733b-4344-8898-29dc4a2ef0b0",
            "7b3003e0-5331-46e9-a216-03a87845d9e4",
            "fe5135d2-0f28-4675-bccd-611b7222102a",
            "a47adf4d-f2bb-4f72-84ee-798641440dfd",
            "903c7a47-fbc0-4b12-81a4-646b290a4e1e",
            "40e8450d-4736-4ad0-be7d-a2d9307ddf4f",
            "b886ff5d-614b-4aa9-9e99-851b7998439b",
            "89d591b2-5143-487b-8a09-144b6b266e4c",
            "ede1fd12-0013-4e8b-a92d-109c2ef39c10",
            "8655f492-9c51-4f68-ad52-8b6c1e02a277",
            "f2a0f008-68d4-4ef0-b159-b4601056dc66",
            "db03800f-1091-419f-bb8b-e6357b79b0ee",
            "50a27510-120b-4da0-9ecb-cf15396a0108",
            "bd95f7bc-834a-4faf-992f-446d54f5fc91",
            "0789dc55-0210-4292-957d-ed83df8e73af",
            "d5d40e50-c234-4e34-8c36-6916f8e79960",
            "5644241e-ceec-479a-8322-e9c1780f1515",
            "de2aa703-c2f6-4f94-bc50-eb5201c26ac3",
            "333099ca-9ef1-4569-b9ad-a7a9275c368b",
            "263edcef-95ee-480a-8c67-1e74662a250a",
            "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
            "1146c4bd-8317-421d-b231-ebcb0eff5721",
            "ee86edbe-8dd9-497a-a24c-fa516272404e",
            "13fedea6-df65-4996-9280-9cedb29d5f94",
            "b96c747c-3d87-49a0-b2bb-264f7c11b216",
            "2457e2b5-2a2a-4489-9eac-adb5cebfd9b8",
            "ecf8cc46-eac4-4c36-a422-ed2cca054451",
            "cbd900b3-1684-4f0d-977a-5a5b2a20aff3",
            "26e69b2d-1c6d-47ea-af87-47fa9cfbdf56",
            "cb822004-fe61-4bd8-91b8-d45b2acf0576",
            "efdc4616-d5e4-4dce-b49c-941c07a9ac4b",
            "43b2d3b6-c6aa-4441-b665-3932542c711c",
            "6980d61a-f1fa-491f-8409-409e295a4b03",
            "e197edf1-7913-4c71-bf9f-78feec182413",
            "a3104ba4-9a8b-4f2a-ad89-25f36d3b9595",
            "c0487639-ff5b-4e90-a0b3-9fe411676c2c",
            "402ef4da-a4e3-4503-ab08-9a4aa56821b5",
            "3b939fe5-bf07-416e-b626-9b4dcfb5abc4",
            "94bfa868-4e02-4b90-841b-817c34132524",
            "8a295383-3e95-42dc-b126-f5d5d4d9927a",
            "afe087c6-fdaf-4e79-b087-b5329772ae68",
            "139ade48-e995-4c51-9c31-2edc9475f16e",
            "3b14aac5-20b3-4de0-9a04-adc1cc273aec",
            "2be9c7d5-be12-439a-8968-ad057c67187a",
            "71517390-0244-456d-87c4-82c582ca8abf",
            "f1b860db-be5a-41ed-a67b-b7b0181ec59f",
            "d548e856-41b8-49c8-a801-044c518c9fe5",
            "83f01298-2804-4599-8deb-99728a5d557a",
            "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
            "eb50f34f-bfa8-4e16-9ad9-d114eb1d34d9",
            "96325b08-db02-4f4f-a7a3-7510a746dbe2",
            "5a1044bb-eec6-47e0-932c-1a000fc67e20",
            "48a240ac-2fc8-4208-bd39-82f2c3d27cb4",
            "2ed71a30-e220-47b0-b0e7-1bc14fce30c0",
            "ea515dbf-689d-48fb-bfb8-93f8853d7ec0",
            "899c3027-a75e-4a44-9144-10a53c6a2c11",
            "e1dd94ae-aa5a-4f89-b959-f2ec61771796",
            "fcd2d991-afe0-4c4f-a9fe-760a139ae1f3",
            "d0bc06f8-edea-49a0-bdbb-c1bef0d073bd",
            "6c5aa9dd-7698-4690-bd9e-644763376917",
            "5fbdea23-a3bd-48e3-9bb9-c7ca69fd9aa2",
            "44b9891c-fe65-4aa6-8ac6-b623709b7c02",
            "904db18b-f9e4-4135-accd-8cab1b7efd09",
            "a29d7b5a-3989-43f1-8efa-86ef82101f43",
            "c477f25f-108c-44a4-88a0-7be0b1a8f442",
            "1c542776-d859-4f7e-889a-d3f2c5b93f45",
            "f05fc49e-c44c-4e93-b1f0-a05de793c5bd",
            "6770e597-215e-480b-b658-f449f175ed3c",
            "d3696e4f-8789-4401-af6c-2f073d356228",
            "5dbd715a-2e96-4062-9cda-4e181e63af5e",
            "1e5df2e7-ee0b-4037-ab62-15139a784f28",
            "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
            "bd2b6b7e-15fe-4593-9be0-b9cb97312af0",
            "106e396c-5cd1-4e4b-a70c-30ba85edca56",
            "9a0f90cc-6905-4660-8751-556567fcd897",
            "1b4aabcd-82e1-426e-b2cd-5f1a6cfa8e60",
            "e6a35ae0-352c-42a0-9c74-633d5c76667f",
            "e2db6936-0727-4a61-bd9e-8712c9355a28",
            "02d273f3-3937-4a5b-86af-fbaa7082fc98",
            "5eb58f1d-da3c-4ebe-aff3-c98a60cca1a7",
            "289db939-0630-4d39-8987-cd9042ba485d",
            "5b32901d-2e27-4970-ba74-be06a103aa30",
            "4f03abce-5ffe-4575-9601-52e18b342ca2",
            "4a738092-15a0-42a9-8178-c62e1f86c80c",
            "f6be37ea-b1ea-4d12-902e-1e55a74f3c28",
            "66d100a7-32a0-4479-9f62-57e81c004eb6",
            "b7131d5c-8602-4af3-82a7-7c00e59ad384",
            "2d35c52b-5348-43d8-baf3-741d0b68c7ff",
            "8f46fba9-ba8b-4eaf-bb5f-2370fa61981b",
            "3b6d2215-7c30-4151-b9f1-7d1dc6e9d0de",
            "b41d10e9-7c12-482e-a1ff-612580407bc1",
            "5080976c-532d-492c-9735-9abf7dc903ae",
            "a0e8b380-dc71-4c5e-9564-5a6a96d413b0",
            "c70aafee-9819-4bd7-9b37-69e9f016666b",
            "2f06e164-6745-4c46-9402-92f51f9f9266",
            "b2086806-a259-48af-adcb-172245e66aa0",
            "0dfb5c8c-d986-4536-97a3-b3f543cfd7fa",
            "14d06bc1-b112-4b2f-a0a3-67a8dd9c958c",
            "4f68e8c3-ce07-490a-ad1e-1605c992a0ab",
            "f2023690-0f94-491a-ac9b-9c913f18d32c",
            "48c65d67-f77e-4b0b-b90a-83ab75bd68a9",
            "fc7b0093-a386-4cfb-9e24-ebd1f41fa3fa",
            "1e648ce1-cc7e-4997-bf6e-9a33d2ac504d",
            "e105eeaa-e8c4-4f5c-b412-90c65bdf217a",
            "d5db2d0f-24c4-4bf6-a1d3-fc170bfb1b75",
            "b4ae7d5c-1d56-46c7-a0d9-9af16a5bad5f",
            "13e1fda6-ad15-4061-a10e-d4a621970eb7",
            "29483c03-d3f3-426c-bd91-6dba06c1c86f",
            "5731e795-bc6e-4f67-a20f-e1ea328ebb4e",
            "ffc91cd7-ce2e-43bd-83f9-dd500633c0a2",
            "50856007-ed7d-41fb-8551-374ecae3e24b",
            "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
            "cbbee582-eb1d-4f69-a297-e10ba2cd83ab",
            "e3f32187-64e1-4609-b294-74d479b50a70",
            "dadb2eed-6939-4a7d-9afa-46a0514a66be",
            "7933074e-4123-4c04-8235-24ded3b719ed",
            "3e515719-4b1e-4dc7-9955-45485e25e7d3",
            "c793f95d-c3c9-4e23-a753-d7b7871c3bbf",
            "f0479f5d-620b-453a-b476-4c9e9418b846",
            "020f0e91-0de0-4617-bb97-e4863949153d",
            "6dc44543-880c-4829-bd86-818b80f5aac6",
            "0cb787c7-79fb-4e4c-a8f2-c95bfa483953",
            "4e04587c-419b-4bb3-bcb4-efe6a43e35e9",
            "46b28c54-a7e1-4286-9bdc-69ae87c3bad3",
            "5e61d351-5c67-4222-b553-e5a42137412d",
            "e819fb9f-77e3-490d-9b3b-288189045e39",
            "b1cbbef7-66d3-49c3-aaff-f598af5cdf47",
            "05715f55-0a2a-4c15-8aa1-b8c1e8aa98a4",
            "f0a4483b-95d9-4c82-8e41-15c96d864674",
            "2dfdecd0-c228-4dc2-941d-0a4e53390d1c",
            "2172f363-6ba3-4c7d-b75a-95189cc14546",
            "6f1bdf3d-1474-4baa-98bd-f39758d46389",
            "03d0218f-3acf-4c09-8902-6b09a4f35be4",
            "5291840b-1ac0-4473-9bc3-691467a51c05",
            "83d53c9b-bf14-42a2-8fb8-238a2fcb905a",
            "8e4180b2-04a8-47ee-8473-9c3c632e261a",
            "10708491-24c3-48f4-b554-d2665157037f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521908832,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1594594920000,
          "parent_id": "204dd4d3-a72c-4a9e-ba37-ebd5fc5ba989",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 637
        }
      },
      "b3b7bf69-4006-4cd8-a6f9-3f1449fee77d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "b3b7bf69-4006-4cd8-a6f9-3f1449fee77d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [["this->member-identifier"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "b7a2fa51-e43c-4727-a42c-7f716dea4885": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c973f744-7781-45f3-93c6-9f4acb594e70",
            "7bcc0abe-a56e-4fe4-88f5-cc1c4bc4d451",
            "c6627224-62f9-4297-a7b9-a83f75d3ecde",
            "475e272e-5d6f-4552-8031-cb721f88ed25",
            "0eec593c-b751-4104-8a76-e0052b747b55",
            "c894ad94-0ebc-4925-ad63-22550bde204d",
            "617f4afe-32df-407f-91e4-b443668ad69f",
            "5cd66b4e-b2bb-4440-92d6-e50969669307",
            "fbd49b94-a23a-4f04-bad4-8e7d7ca4c59b",
            "1f8ea8f6-973a-4a14-a613-b46bb21705ce",
            "d3c0d8da-48cd-448c-938c-0dc6340f27d9",
            "d6125fa5-a1c3-4ad8-9744-95d69d6d6adb",
            "e00cef2b-2f6a-4bab-b71c-bb4883af3214",
            "718a8371-f1c2-4ee9-ad85-4d8720f1a76a",
            "6f0014be-f1c3-48db-9347-3b9fdab6ef11",
            "5b182aa3-ce2d-4e0e-872c-fbc1b2e48a6b",
            "406a5a10-38ac-48eb-b673-56aa530bc4cd",
            "39335c35-89b8-45be-b2e2-31a5016006d3",
            "c15d616e-8bb7-4d01-8b0d-4f6ee182848f",
            "b3b7bf69-4006-4cd8-a6f9-3f1449fee77d",
            "7c4277cb-d8db-4b75-b9ce-9ddd7be02455",
            "3ab4c652-b11f-4af6-82e9-e30ccc87ac2f",
            "97689556-b45c-4cf9-9d9b-b5f5214b9369",
            "203f7f31-c8a7-472f-a2c7-a1c3451b0a82",
            "ef82c932-4678-4f28-809d-aa17761d801a",
            "f1cba66a-ad6a-4a55-bca7-5c228f83cf13",
            "18fbc884-68b4-4626-9a1d-ed0d5477bb9e",
            "a1efba9d-f21a-4384-8621-a145867ae51d",
            "c113d16f-13b9-4648-8e45-89a3097e3bb3",
            "3a2389f0-8692-4489-a285-ff13fa165bec",
            "944cc150-a71a-4308-9fb4-fdbc09e7fe0a",
            "67f4efef-e265-4b54-a9c2-5021ee2c7954",
            "c34d2160-fd17-4020-9812-56fdd549883c",
            "4c2b4b51-32b1-4c94-a4e5-04c798dfbee0",
            "2b4474e3-8c7f-47cb-ab5a-b2e3728f2c6a",
            "09606291-365a-40c6-aca4-68d8fa18d5b6",
            "0738f730-9001-45e7-8adc-03b14ec74341",
            "aa483bc7-2495-4701-aeae-38e9d32a965a",
            "32660981-575a-44f7-97bf-3ec106a117ba",
            "f3e6c1d2-a588-4101-86c2-3107ce45846c",
            "c4fb5293-acea-4f61-89e0-e978e9ce7100",
            "e079a264-1285-4f66-b83a-a3d75bc405ba"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875047,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550799060000,
          "parent_id": "193b149e-733b-4344-8898-29dc4a2ef0b0",
          "parent_table": "block",
          "properties": {
            "title": [["Different keywords"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 18
        }
      },
      "c113d16f-13b9-4648-8e45-89a3097e3bb3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875045,
          "id": "c113d16f-13b9-4648-8e45-89a3097e3bb3",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875045,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The code after the try clause is the guarded section of code. The throw expression throws—that is, raises—an exception. The code block after the catch clause is the exception handler. This is the handler that catches the exception that’s thrown if the types in the throw and catch expressions are compatible."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 5
        }
      },
      "c15d616e-8bb7-4d01-8b0d-4f6ee182848f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875043,
          "id": "c15d616e-8bb7-4d01-8b0d-4f6ee182848f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875043,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The this pointer is a pointer accessible only within the nonstatic member functions of a class, struct, or union type. It points to the object for which the member function is called. Static member functions do not have a this pointer."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 5
        }
      },
      "c34d2160-fd17-4020-9812-56fdd549883c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875045,
          "id": "c34d2160-fd17-4020-9812-56fdd549883c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875045,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "If you declare a friend function that was not previously declared, that function is exported to the enclosing nonclass scope."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "c4fb5293-acea-4f61-89e0-e978e9ce7100": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875047,
          "id": "c4fb5293-acea-4f61-89e0-e978e9ce7100",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550799000000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "class B;  \n\nclass A {  \npublic:  \n   int Func1( B& b );  \n\nprivate:  \n   int Func2( B& b );  \n};  \n\nclass B {  \nprivate:\n\tint _b;  \n\n   // A::Func1 is a friend function to class B  \n   // so A::Func1 has access to all members of B  \n   friend int A::Func1( B& );  \n};  \n\nint A::Func1( B& b ) { return b._b; }   // OK  \nint A::Func2( B& b ) { return b._b; }   // C2248"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 14
        }
      },
      "c6627224-62f9-4297-a7b9-a83f75d3ecde": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875040,
          "id": "c6627224-62f9-4297-a7b9-a83f75d3ecde",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875040,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "When used as a function return type, the void keyword specifies that the function does not return a value. When used for a function’s parameter list, void specifies that the function takes no parameters. When used in the declaration of a pointer, void specifies that the pointer is “universal.”"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "c894ad94-0ebc-4925-ad63-22550bde204d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "c894ad94-0ebc-4925-ad63-22550bde204d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798880000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "void vobject;   // C2182  \nvoid *pv;   // okay  \nint *pint; int i;  \nint main() {  \npv = &i;  \n   // Cast optional in C required in C++  \npint = (int *)pv;"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 7
        }
      },
      "c973f744-7781-45f3-93c6-9f4acb594e70": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550798880000,
          "id": "c973f744-7781-45f3-93c6-9f4acb594e70",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550799060000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["#note needs editing, possibly redundant"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 50
        }
      },
      "d3c0d8da-48cd-448c-938c-0dc6340f27d9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "d3c0d8da-48cd-448c-938c-0dc6340f27d9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875041,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The virtual keyword declares a virtual function or a virtual base class."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "d6125fa5-a1c3-4ad8-9744-95d69d6d6adb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "d6125fa5-a1c3-4ad8-9744-95d69d6d6adb",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [
              [
                "virtual [type-specifiers] member-function-declarator  \nvirtual [access-specifier] base-class-name"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      },
      "e00cef2b-2f6a-4bab-b71c-bb4883af3214": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875042,
          "id": "e00cef2b-2f6a-4bab-b71c-bb4883af3214",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875042,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["Parameters", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "e079a264-1285-4f66-b83a-a3d75bc405ba": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550799000000,
          "id": "e079a264-1285-4f66-b83a-a3d75bc405ba",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550799000000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 7
        }
      },
      "ef82c932-4678-4f28-809d-aa17761d801a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875044,
          "id": "ef82c932-4678-4f28-809d-aa17761d801a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875044,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "First, use a try block to enclose one or more statements that might throw an exception."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 1
        }
      },
      "f1cba66a-ad6a-4a55-bca7-5c228f83cf13": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875044,
          "id": "f1cba66a-ad6a-4a55-bca7-5c228f83cf13",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875044,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "A throw expression signals that an exceptional condition—often, an error—has occurred in a try block. You can use an object of any type as the operand of a throw expression. Typically, this object is used to communicate information about the error. In most cases, we recommend that you use the std::exception class or one of the derived classes that are defined in the standard library. If one of those is not appropriate, we recommend that you derive your own exception class from std::exception."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "numbered_list",
          "version": 5
        }
      },
      "f3e6c1d2-a588-4101-86c2-3107ce45846c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875047,
          "id": "f3e6c1d2-a588-4101-86c2-3107ce45846c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523875047,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "title": [["Class members as friends", [["b"]]]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "fbd49b94-a23a-4f04-bad4-8e7d7ca4c59b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523875041,
          "id": "fbd49b94-a23a-4f04-bad4-8e7d7ca4c59b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550798940000,
          "parent_id": "b7a2fa51-e43c-4727-a42c-7f716dea4885",
          "parent_table": "block",
          "properties": {
            "language": [["C++"]],
            "title": [["volatile declarator ;"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 3
        }
      }
    },
    "space": {}
  }
}
