3262 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "252ece15-c398-409e-b9fc-941fe3f57da5"
      },
      "version": -1
    }
  ]
}
Response:+3010
{
  "recordMap": {
    "block": {
      "252ece15-c398-409e-b9fc-941fe3f57da5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "e2948f94-d6d1-44d6-a032-e25377542890",
            "602f0613-7e29-4bce-9b07-41554bee9e93",
            "99d822ae-8db3-4a0a-944e-681bdc8d230e",
            "dc7cc21c-60d4-4537-b1da-52baec0a8c4e",
            "acd2d281-d9df-4b7d-8b6f-b20c7b074d2a",
            "f87e7dcc-1b70-411b-8a71-d27798a10bcc",
            "9daaad42-b627-4fcb-9f9b-2856b62f4ea8",
            "db33ac65-c73f-44b7-aac5-7fccf1a49c76",
            "5bc4a295-6d0f-4771-906e-a8cbe0c86b1e",
            "9ce71bef-322a-46df-9015-d5ceb99d8e6c",
            "c3f3297b-0d7c-4022-aad2-1c4c114806f6",
            "f507e691-4d6c-4318-94e1-a4983ca2971f",
            "7e66fc19-81e7-4f8f-b208-0201e3eae1f5",
            "85bfac12-75f6-4ceb-adaa-f9760422e8c0",
            "cb64a186-64b4-4648-a618-9af1ca38b31f",
            "37f31a86-9ea6-4a97-9f03-569c8c8c3e25",
            "83b5b347-4afe-4bae-805d-98b70929d048",
            "abd7bf35-48fb-4813-9b7f-50fb59ceef90",
            "909a60f5-1fac-452a-8406-3131386d3a5a",
            "3365085b-4b9f-42d0-ad51-44ec6eb8fa48",
            "7c555476-c5ff-46d2-af20-426a1da08cef",
            "327bbec0-62a9-44f4-9185-eaf4d870ae48",
            "afafe1a3-df8e-4e73-a509-3ce3e3dd5e9c",
            "56502631-144a-490f-a177-d300c01fda87",
            "21378d34-70c3-4c15-909b-33f15c18c976",
            "81758ee0-8e28-45c6-9b42-d4cab798f3d3",
            "185fd080-8dbb-482d-8130-550060eb864a",
            "abeece70-e65e-4069-8452-a0314e4a64d7",
            "59922d31-8118-409c-bba8-4c7acda61160",
            "8e99d1dc-138f-464c-83d6-aa3390142e8c",
            "4a840d48-9047-4ed3-ab08-4ab09cc1c80f",
            "294849ff-6bf3-430d-a67d-61ac164f800a",
            "9de50ab2-eab3-400a-a276-3695507e261d",
            "a3191653-6e45-4490-ae9d-ed39633d02e2",
            "7bf54296-2d66-4be0-bb28-809a18c1b56f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044799,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595319840000,
          "parent_id": "5dbd715a-2e96-4062-9cda-4e181e63af5e",
          "parent_table": "block",
          "properties": {
            "title": [["Type erasing type erasure with std::any"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 8
        }
      }
    }
  }
}
59398 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "252ece15-c398-409e-b9fc-941fe3f57da5"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+59138
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "185fd080-8dbb-482d-8130-550060eb864a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "185fd080-8dbb-482d-8130-550060eb864a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class Sig, bool is_const=false, class F>\nany_method<Sig, is_const, std::decay_t<F>>\nmake_any_method( F&& f ) {\n  return {std::forward<F>(f)};\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "21378d34-70c3-4c15-909b-33f15c18c976": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "21378d34-70c3-4c15-909b-33f15c18c976",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class Sig, bool const_method, class F>\nstruct any_method {\n  using signature=Sig;\n  enum{is_const=const_method};\nprivate:\n  F f;\npublic:\n\n  template<class Any,\n    // SFINAE testing that one of the Anys's matches this type:\n    std::enable_if_t< super_method_applies< Any&&, any_method >{}, int>* =nullptr\n  >\n  friend auto operator->*( Any&& self, any_method const& m ) {\n    // we don't use the value of the any_method, because each any_method has\n    // a unique type (!) and we check that one of the auto*'s in the super_any\n    // already has a pointer to us.  We then dispatch to the corresponding\n    // any_method_data...\n\n    return [&self, invoke = self.get_invoker(tag<any_method>), m](auto&&...args)->decltype(auto)\n    {\n      return invoke( decltype(self)(self), &m, decltype(args)(args)... );\n    };\n  }\n  any_method( F fin ):f(std::move(fin)) {}\n  \n  template<class...Args>\n  decltype(auto) operator()(Args&&...args)const {\n    return f(std::forward<Args>(args)...);\n  }\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "252ece15-c398-409e-b9fc-941fe3f57da5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "e2948f94-d6d1-44d6-a032-e25377542890",
            "602f0613-7e29-4bce-9b07-41554bee9e93",
            "99d822ae-8db3-4a0a-944e-681bdc8d230e",
            "dc7cc21c-60d4-4537-b1da-52baec0a8c4e",
            "acd2d281-d9df-4b7d-8b6f-b20c7b074d2a",
            "f87e7dcc-1b70-411b-8a71-d27798a10bcc",
            "9daaad42-b627-4fcb-9f9b-2856b62f4ea8",
            "db33ac65-c73f-44b7-aac5-7fccf1a49c76",
            "5bc4a295-6d0f-4771-906e-a8cbe0c86b1e",
            "9ce71bef-322a-46df-9015-d5ceb99d8e6c",
            "c3f3297b-0d7c-4022-aad2-1c4c114806f6",
            "f507e691-4d6c-4318-94e1-a4983ca2971f",
            "7e66fc19-81e7-4f8f-b208-0201e3eae1f5",
            "85bfac12-75f6-4ceb-adaa-f9760422e8c0",
            "cb64a186-64b4-4648-a618-9af1ca38b31f",
            "37f31a86-9ea6-4a97-9f03-569c8c8c3e25",
            "83b5b347-4afe-4bae-805d-98b70929d048",
            "abd7bf35-48fb-4813-9b7f-50fb59ceef90",
            "909a60f5-1fac-452a-8406-3131386d3a5a",
            "3365085b-4b9f-42d0-ad51-44ec6eb8fa48",
            "7c555476-c5ff-46d2-af20-426a1da08cef",
            "327bbec0-62a9-44f4-9185-eaf4d870ae48",
            "afafe1a3-df8e-4e73-a509-3ce3e3dd5e9c",
            "56502631-144a-490f-a177-d300c01fda87",
            "21378d34-70c3-4c15-909b-33f15c18c976",
            "81758ee0-8e28-45c6-9b42-d4cab798f3d3",
            "185fd080-8dbb-482d-8130-550060eb864a",
            "abeece70-e65e-4069-8452-a0314e4a64d7",
            "59922d31-8118-409c-bba8-4c7acda61160",
            "8e99d1dc-138f-464c-83d6-aa3390142e8c",
            "4a840d48-9047-4ed3-ab08-4ab09cc1c80f",
            "294849ff-6bf3-430d-a67d-61ac164f800a",
            "9de50ab2-eab3-400a-a276-3695507e261d",
            "a3191653-6e45-4490-ae9d-ed39633d02e2",
            "7bf54296-2d66-4be0-bb28-809a18c1b56f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044799,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1595319840000,
          "parent_id": "5dbd715a-2e96-4062-9cda-4e181e63af5e",
          "parent_table": "block",
          "properties": {
            "title": [["Type erasing type erasure with std::any"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 8
        }
      },
      "294849ff-6bf3-430d-a67d-61ac164f800a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044797,
          "id": "294849ff-6bf3-430d-a67d-61ac164f800a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044797,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [["Test code:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "327bbec0-62a9-44f4-9185-eaf4d870ae48": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "327bbec0-62a9-44f4-9185-eaf4d870ae48",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [["or in C++17:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "3365085b-4b9f-42d0-ad51-44ec6eb8fa48": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044795,
          "id": "3365085b-4b9f-42d0-ad51-44ec6eb8fa48",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044795,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Next we create the "],
              ["any_method", [["c"]]],
              [" type. An "],
              ["any_method", [["c"]]],
              [" is a pseudo-method-pointer. We create it globally and "],
              ["const", [["c"]]],
              ["ly using syntax like:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "37f31a86-9ea6-4a97-9f03-569c8c8c3e25": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044795,
          "id": "37f31a86-9ea6-4a97-9f03-569c8c8c3e25",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044795,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Now we start the "],
              ["super_any", [["c"]]],
              [". I use "],
              ["super_any_t", [["c"]]],
              [" to make the declaration of "],
              ["super_any", [["c"]]],
              [" a bit easier."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "4a840d48-9047-4ed3-ab08-4ab09cc1c80f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044797,
          "id": "4a840d48-9047-4ed3-ab08-4ab09cc1c80f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044797,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class...Ts>\nusing super_any = super_any_t< std::remove_cv_t<Ts>... >;"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "56502631-144a-490f-a177-d300c01fda87": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "56502631-144a-490f-a177-d300c01fda87",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Note that using a non-lambda can make things hairy, as we use the type for a lookup step. This can be fixed, but would make this example longer than it already is. So always initialize an any method from a lambda, or from a type parametarized on a lambda."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "59922d31-8118-409c-bba8-4c7acda61160": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "59922d31-8118-409c-bba8-4c7acda61160",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class... methods>\nstruct super_any_t:boost::any, any_methods<methods...> {\n  using vtable=any_methods<methods...>;\npublic:\n  template<class T,\n    std::enable_if_t< !std::is_base_of<super_any_t, std::decay_t<T>>{}, int> =0\n  >\n  super_any_t( T&& t ):\n    boost::any( std::forward<T>(t) )\n  {\n    using dT=std::decay_t<T>;\n    this->change_type( tag<dT> );\n  }\n  \n  boost::any& as_any()&{return *this;}\n  boost::any&& as_any()&&{return std::move(*this);}\n  boost::any const& as_any()const&{return *this;}\n  super_any_t()=default;\n  super_any_t(super_any_t&& o):\n    boost::any( std::move( o.as_any() ) ),\n    vtable(o)\n  {}\n  super_any_t(super_any_t const& o):\n    boost::any( o.as_any() ),\n    vtable(o)\n  {}\n  template<class S,\n    std::enable_if_t< std::is_same<std::decay_t<S>, super_any_t>{}, int> =0\n  >\n  super_any_t( S&& o ):\n    boost::any( std::forward<S>(o).as_any() ),\n    vtable(o)\n  {}\n  super_any_t& operator=(super_any_t&&)=default;\n  super_any_t& operator=(super_any_t const&)=default;\n  \n  template<class T,\n    std::enable_if_t< !std::is_same<std::decay_t<T>, super_any_t>{}, int>* =nullptr\n  >\n  super_any_t& operator=( T&& t ) {\n    ((boost::any&)*this) = std::forward<T>(t);\n    using dT=std::decay_t<T>;\n    this->change_type( tag<dT> );\n    return *this;\n  }  \n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "5bc4a295-6d0f-4771-906e-a8cbe0c86b1e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "5bc4a295-6d0f-4771-906e-a8cbe0c86b1e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["This trait class gets the signature stored with an "],
              ["any_method", [["c"]]],
              [":"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5dbd715a-2e96-4062-9cda-4e181e63af5e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "263bdee2-80d5-4aa5-83eb-2ea074356d3d",
            "c119ce9e-c36b-4e96-add1-0ea403079f69",
            "f7560e8b-f87b-484a-8cf5-1d6e1d46b6f8",
            "12da5168-08d4-4eb9-b74e-49dc625858ff",
            "64b023be-2452-45b2-8d75-30e946a3e525",
            "252ece15-c398-409e-b9fc-941fe3f57da5"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523000000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "5dbd715a-2e96-4062-9cda-4e181e63af5e",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523300000,
          "parent_id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Type erasure"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 30
        }
      },
      "602f0613-7e29-4bce-9b07-41554bee9e93": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "602f0613-7e29-4bce-9b07-41554bee9e93",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [["The syntax we end up with is:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "7bf54296-2d66-4be0-bb28-809a18c1b56f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044799,
          "id": "7bf54296-2d66-4be0-bb28-809a18c1b56f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044799,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Originally posted "],
              ["here", [["a", "http://stackoverflow.com/a/38837687/1774667"]]],
              [
                " in a SO self question & answer (and people noted above helped with the implementation)."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "7c555476-c5ff-46d2-af20-426a1da08cef": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044795,
          "id": "7c555476-c5ff-46d2-af20-426a1da08cef",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044795,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "const auto print=make_any_method( [](auto&&self, auto&&os){ os << self; } );"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "7e66fc19-81e7-4f8f-b208-0201e3eae1f5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044794,
          "id": "7e66fc19-81e7-4f8f-b208-0201e3eae1f5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044794,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "We want to be able to type-erase more than one method at a time. So we bundle them up in a tuple, and write a helper wrapper to stick the tuple into static storage on a per-type basis and maintain a pointer to them."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "81758ee0-8e28-45c6-9b42-d4cab798f3d3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "81758ee0-8e28-45c6-9b42-d4cab798f3d3",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [["A factory method, not needed in C++17 I believe:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "83b5b347-4afe-4bae-805d-98b70929d048": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044795,
          "id": "83b5b347-4afe-4bae-805d-98b70929d048",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044795,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [["template<class...methods>\nstruct super_any_t;"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "85bfac12-75f6-4ceb-adaa-f9760422e8c0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044794,
          "id": "85bfac12-75f6-4ceb-adaa-f9760422e8c0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044794,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class...any_methods>\nusing any_method_tuple = std::tuple< typename any_method_function<any_methods>::type... >;\n\ntemplate<class...any_methods, class T>\nany_method_tuple<any_methods...> make_vtable( tag_t<T> ) {\n  return std::make_tuple(\n    any_method_function<any_methods>{}(tag<T>)...\n  );\n}\n\ntemplate<class...methods>\nstruct any_methods {\nprivate:\n  any_method_tuple<methods...> const* vtable = 0;\n  template<class T>\n  static any_method_tuple<methods...> const* get_vtable( tag_t<T> ) {\n    static const auto table = make_vtable<methods...>(tag<T>);\n    return &table;\n  }\npublic:\n  any_methods() = default;\n  template<class T>\n  any_methods( tag_t<T> ): vtable(get_vtable(tag<T>)) {}\n  any_methods& operator=(any_methods const&)=default;\n  template<class T>\n  void change_type( tag_t<T> ={} ) { vtable = get_vtable(tag<T>); }\n    \n  template<class any_method>\n  auto get_invoker( tag_t<any_method> ={} ) const {\n    return std::get<typename any_method_function<any_method>::type>( *vtable );\n  }\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "8e99d1dc-138f-464c-83d6-aa3390142e8c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044797,
          "id": "8e99d1dc-138f-464c-83d6-aa3390142e8c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044797,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Because we store the "],
              ["any_method", [["c"]]],
              ["s as "],
              ["const", [["c"]]],
              [" objects, this makes making a "],
              ["super_any", [["c"]]],
              [" a bit easier:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "909a60f5-1fac-452a-8406-3131386d3a5a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044795,
          "id": "909a60f5-1fac-452a-8406-3131386d3a5a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044795,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class super_any, class method>\nstruct super_method_applies_helper : std::false_type {};\n\ntemplate<class M0, class...Methods, class method>\nstruct super_method_applies_helper<super_any_t<M0, Methods...>, method> :\n    std::integral_constant<bool, std::is_same<M0, method>{}  || super_method_applies_helper<super_any_t<Methods...>, method>{}>\n{};\n\ntemplate<class...methods, class method>\nauto super_method_test( super_any_t<methods...> const&, tag_t<method> )\n{\n  return std::integral_constant<bool, super_method_applies_helper< super_any_t<methods...>, method >{} && method::is_const >{};\n}\ntemplate<class...methods, class method>\nauto super_method_test( super_any_t<methods...>&, tag_t<method> )\n{\n  return std::integral_constant<bool, super_method_applies_helper< super_any_t<methods...>, method >{} >{};\n}\n\ntemplate<class super_any, class method>\nstruct super_method_applies:\n    decltype( super_method_test( std::declval<super_any>(), tag<method> ) )\n{};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "99d822ae-8db3-4a0a-944e-681bdc8d230e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "99d822ae-8db3-4a0a-944e-681bdc8d230e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "const auto print =\n  make_any_method<void(std::ostream&)>([](auto&& p, std::ostream& t){ t << p << \"\\n\"; });\n\nsuper_any<decltype(print)> a = 7;\n\n(a->*print)(std::cout);"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "9ce71bef-322a-46df-9015-d5ceb99d8e6c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044794,
          "id": "9ce71bef-322a-46df-9015-d5ceb99d8e6c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044794,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This creates a function pointer type, and a factory for said function pointers, given an "
              ],
              ["any_method", [["c"]]],
              [":"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "9daaad42-b627-4fcb-9f9b-2856b62f4ea8": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "9daaad42-b627-4fcb-9f9b-2856b62f4ea8",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [["First we use a tag to pass around types:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "9de50ab2-eab3-400a-a276-3695507e261d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044797,
          "id": "9de50ab2-eab3-400a-a276-3695507e261d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044797,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "const auto print = make_any_method<void(std::ostream&)>([](auto&& p, std::ostream& t){ t << p << \"\\n\"; });\nconst auto wprint = make_any_method<void(std::wostream&)>([](auto&& p, std::wostream& os ){ os << p << L\"\\n\"; });\n\nint main()\n{\n  super_any<decltype(print), decltype(wprint)> a = 7;\n  super_any<decltype(print), decltype(wprint)> a2 = 7;\n\n  (a->*print)(std::cout);\n  (a->*wprint)(std::wcout);\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "a3191653-6e45-4490-ae9d-ed39633d02e2": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044799,
          "id": "a3191653-6e45-4490-ae9d-ed39633d02e2",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044799,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "live example",
                [["a", "http://coliru.stacked-crooked.com/a/fbd10edb3336cce1"]]
              ],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "abd7bf35-48fb-4813-9b7f-50fb59ceef90": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044795,
          "id": "abd7bf35-48fb-4813-9b7f-50fb59ceef90",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044795,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This searches the methods that the super any supports for SFINAE and better error messages:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "abeece70-e65e-4069-8452-a0314e4a64d7": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "abeece70-e65e-4069-8452-a0314e4a64d7",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["This is the augmented "],
              ["any", [["c"]]],
              [". It is both an "],
              ["any", [["c"]]],
              [
                ", and it carries around a bundle of type-erasure function pointers that change whenever the contained "
              ],
              ["any", [["c"]]],
              [" does:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "acd2d281-d9df-4b7d-8b6f-b20c7b074d2a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "acd2d281-d9df-4b7d-8b6f-b20c7b074d2a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "This example is based off of work by [@dyp](http://coliru.stacked-crooked.com/a/2ab8d7e41d24e616) and [@cpplearner](http://stackoverflow.com/a/38865269/1774667) as well as my own."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ad527dc6-d4a7-420b-9234-94d0b9bfb560": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "c97e2222-373b-4879-ba1e-de9da33c4b9c",
            "069713c9-355d-43e5-bbe3-fe65ccc5d89f",
            "f6fb0c70-b2a7-438e-8fd0-214354d4363c",
            "cad79b8f-8e22-4786-b522-3ce3f7989dfb",
            "9582f39a-18d4-4387-a429-d2d9d9c1c0a3",
            "4e7523ec-807e-469b-846d-6f0e98a9f133",
            "c48a63c8-822c-4a23-a960-60de4face6ae",
            "99e19430-5cdd-423f-8fa9-0e2f0bf264ab",
            "ea4c768f-8ffd-48a6-bc20-bd19b214545c",
            "3724ad56-a879-48bf-847e-5adcfcb60c18",
            "52470773-ddd6-4b1b-ad39-7b26f7b28f00",
            "6fdcface-f439-4f73-87ef-255a8f378573",
            "ee10cf45-84c7-467c-8068-ea9076a2401a",
            "4dc21607-5d04-4a95-bced-ba855fbfa11f",
            "546689ba-7cc0-49cb-ae94-05172f20d6dc",
            "193b149e-733b-4344-8898-29dc4a2ef0b0",
            "7b3003e0-5331-46e9-a216-03a87845d9e4",
            "fe5135d2-0f28-4675-bccd-611b7222102a",
            "a47adf4d-f2bb-4f72-84ee-798641440dfd",
            "903c7a47-fbc0-4b12-81a4-646b290a4e1e",
            "40e8450d-4736-4ad0-be7d-a2d9307ddf4f",
            "b886ff5d-614b-4aa9-9e99-851b7998439b",
            "89d591b2-5143-487b-8a09-144b6b266e4c",
            "ede1fd12-0013-4e8b-a92d-109c2ef39c10",
            "8655f492-9c51-4f68-ad52-8b6c1e02a277",
            "f2a0f008-68d4-4ef0-b159-b4601056dc66",
            "db03800f-1091-419f-bb8b-e6357b79b0ee",
            "50a27510-120b-4da0-9ecb-cf15396a0108",
            "bd95f7bc-834a-4faf-992f-446d54f5fc91",
            "0789dc55-0210-4292-957d-ed83df8e73af",
            "d5d40e50-c234-4e34-8c36-6916f8e79960",
            "5644241e-ceec-479a-8322-e9c1780f1515",
            "de2aa703-c2f6-4f94-bc50-eb5201c26ac3",
            "333099ca-9ef1-4569-b9ad-a7a9275c368b",
            "263edcef-95ee-480a-8c67-1e74662a250a",
            "9a81e0e2-994e-41b0-aa0f-0bb41311ad7d",
            "1146c4bd-8317-421d-b231-ebcb0eff5721",
            "ee86edbe-8dd9-497a-a24c-fa516272404e",
            "13fedea6-df65-4996-9280-9cedb29d5f94",
            "b96c747c-3d87-49a0-b2bb-264f7c11b216",
            "2457e2b5-2a2a-4489-9eac-adb5cebfd9b8",
            "ecf8cc46-eac4-4c36-a422-ed2cca054451",
            "cbd900b3-1684-4f0d-977a-5a5b2a20aff3",
            "26e69b2d-1c6d-47ea-af87-47fa9cfbdf56",
            "cb822004-fe61-4bd8-91b8-d45b2acf0576",
            "efdc4616-d5e4-4dce-b49c-941c07a9ac4b",
            "43b2d3b6-c6aa-4441-b665-3932542c711c",
            "6980d61a-f1fa-491f-8409-409e295a4b03",
            "e197edf1-7913-4c71-bf9f-78feec182413",
            "a3104ba4-9a8b-4f2a-ad89-25f36d3b9595",
            "c0487639-ff5b-4e90-a0b3-9fe411676c2c",
            "402ef4da-a4e3-4503-ab08-9a4aa56821b5",
            "3b939fe5-bf07-416e-b626-9b4dcfb5abc4",
            "94bfa868-4e02-4b90-841b-817c34132524",
            "8a295383-3e95-42dc-b126-f5d5d4d9927a",
            "afe087c6-fdaf-4e79-b087-b5329772ae68",
            "139ade48-e995-4c51-9c31-2edc9475f16e",
            "3b14aac5-20b3-4de0-9a04-adc1cc273aec",
            "2be9c7d5-be12-439a-8968-ad057c67187a",
            "71517390-0244-456d-87c4-82c582ca8abf",
            "f1b860db-be5a-41ed-a67b-b7b0181ec59f",
            "d548e856-41b8-49c8-a801-044c518c9fe5",
            "83f01298-2804-4599-8deb-99728a5d557a",
            "0b17f7b9-11d1-4229-931e-966fb51d1ba9",
            "eb50f34f-bfa8-4e16-9ad9-d114eb1d34d9",
            "96325b08-db02-4f4f-a7a3-7510a746dbe2",
            "5a1044bb-eec6-47e0-932c-1a000fc67e20",
            "48a240ac-2fc8-4208-bd39-82f2c3d27cb4",
            "2ed71a30-e220-47b0-b0e7-1bc14fce30c0",
            "ea515dbf-689d-48fb-bfb8-93f8853d7ec0",
            "899c3027-a75e-4a44-9144-10a53c6a2c11",
            "e1dd94ae-aa5a-4f89-b959-f2ec61771796",
            "fcd2d991-afe0-4c4f-a9fe-760a139ae1f3",
            "d0bc06f8-edea-49a0-bdbb-c1bef0d073bd",
            "6c5aa9dd-7698-4690-bd9e-644763376917",
            "5fbdea23-a3bd-48e3-9bb9-c7ca69fd9aa2",
            "44b9891c-fe65-4aa6-8ac6-b623709b7c02",
            "904db18b-f9e4-4135-accd-8cab1b7efd09",
            "a29d7b5a-3989-43f1-8efa-86ef82101f43",
            "c477f25f-108c-44a4-88a0-7be0b1a8f442",
            "1c542776-d859-4f7e-889a-d3f2c5b93f45",
            "f05fc49e-c44c-4e93-b1f0-a05de793c5bd",
            "6770e597-215e-480b-b658-f449f175ed3c",
            "d3696e4f-8789-4401-af6c-2f073d356228",
            "5dbd715a-2e96-4062-9cda-4e181e63af5e",
            "1e5df2e7-ee0b-4037-ab62-15139a784f28",
            "10c1e1fe-bf0e-4f71-b1f2-173539570a03",
            "bd2b6b7e-15fe-4593-9be0-b9cb97312af0",
            "106e396c-5cd1-4e4b-a70c-30ba85edca56",
            "9a0f90cc-6905-4660-8751-556567fcd897",
            "1b4aabcd-82e1-426e-b2cd-5f1a6cfa8e60",
            "e6a35ae0-352c-42a0-9c74-633d5c76667f",
            "e2db6936-0727-4a61-bd9e-8712c9355a28",
            "02d273f3-3937-4a5b-86af-fbaa7082fc98",
            "5eb58f1d-da3c-4ebe-aff3-c98a60cca1a7",
            "289db939-0630-4d39-8987-cd9042ba485d",
            "5b32901d-2e27-4970-ba74-be06a103aa30",
            "4f03abce-5ffe-4575-9601-52e18b342ca2",
            "4a738092-15a0-42a9-8178-c62e1f86c80c",
            "f6be37ea-b1ea-4d12-902e-1e55a74f3c28",
            "66d100a7-32a0-4479-9f62-57e81c004eb6",
            "b7131d5c-8602-4af3-82a7-7c00e59ad384",
            "2d35c52b-5348-43d8-baf3-741d0b68c7ff",
            "8f46fba9-ba8b-4eaf-bb5f-2370fa61981b",
            "3b6d2215-7c30-4151-b9f1-7d1dc6e9d0de",
            "b41d10e9-7c12-482e-a1ff-612580407bc1",
            "5080976c-532d-492c-9735-9abf7dc903ae",
            "a0e8b380-dc71-4c5e-9564-5a6a96d413b0",
            "c70aafee-9819-4bd7-9b37-69e9f016666b",
            "2f06e164-6745-4c46-9402-92f51f9f9266",
            "b2086806-a259-48af-adcb-172245e66aa0",
            "0dfb5c8c-d986-4536-97a3-b3f543cfd7fa",
            "14d06bc1-b112-4b2f-a0a3-67a8dd9c958c",
            "4f68e8c3-ce07-490a-ad1e-1605c992a0ab",
            "f2023690-0f94-491a-ac9b-9c913f18d32c",
            "48c65d67-f77e-4b0b-b90a-83ab75bd68a9",
            "fc7b0093-a386-4cfb-9e24-ebd1f41fa3fa",
            "1e648ce1-cc7e-4997-bf6e-9a33d2ac504d",
            "e105eeaa-e8c4-4f5c-b412-90c65bdf217a",
            "d5db2d0f-24c4-4bf6-a1d3-fc170bfb1b75",
            "b4ae7d5c-1d56-46c7-a0d9-9af16a5bad5f",
            "13e1fda6-ad15-4061-a10e-d4a621970eb7",
            "29483c03-d3f3-426c-bd91-6dba06c1c86f",
            "5731e795-bc6e-4f67-a20f-e1ea328ebb4e",
            "ffc91cd7-ce2e-43bd-83f9-dd500633c0a2",
            "50856007-ed7d-41fb-8551-374ecae3e24b",
            "69b8fd2c-ca44-4dcb-84cc-49ed820592d4",
            "cbbee582-eb1d-4f69-a297-e10ba2cd83ab",
            "e3f32187-64e1-4609-b294-74d479b50a70",
            "dadb2eed-6939-4a7d-9afa-46a0514a66be",
            "7933074e-4123-4c04-8235-24ded3b719ed",
            "3e515719-4b1e-4dc7-9955-45485e25e7d3",
            "c793f95d-c3c9-4e23-a753-d7b7871c3bbf",
            "f0479f5d-620b-453a-b476-4c9e9418b846",
            "020f0e91-0de0-4617-bb97-e4863949153d",
            "6dc44543-880c-4829-bd86-818b80f5aac6",
            "0cb787c7-79fb-4e4c-a8f2-c95bfa483953",
            "4e04587c-419b-4bb3-bcb4-efe6a43e35e9",
            "46b28c54-a7e1-4286-9bdc-69ae87c3bad3",
            "5e61d351-5c67-4222-b553-e5a42137412d",
            "e819fb9f-77e3-490d-9b3b-288189045e39",
            "b1cbbef7-66d3-49c3-aaff-f598af5cdf47",
            "05715f55-0a2a-4c15-8aa1-b8c1e8aa98a4",
            "f0a4483b-95d9-4c82-8e41-15c96d864674",
            "2dfdecd0-c228-4dc2-941d-0a4e53390d1c",
            "2172f363-6ba3-4c7d-b75a-95189cc14546",
            "6f1bdf3d-1474-4baa-98bd-f39758d46389",
            "03d0218f-3acf-4c09-8902-6b09a4f35be4",
            "5291840b-1ac0-4473-9bc3-691467a51c05",
            "83d53c9b-bf14-42a2-8fb8-238a2fcb905a",
            "8e4180b2-04a8-47ee-8473-9c3c632e261a",
            "10708491-24c3-48f4-b554-d2665157037f"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550521908832,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "ad527dc6-d4a7-420b-9234-94d0b9bfb560",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1594594920000,
          "parent_id": "204dd4d3-a72c-4a9e-ba37-ebd5fc5ba989",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential C++"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 637
        }
      },
      "afafe1a3-df8e-4e73-a509-3ce3e3dd5e9c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044796,
          "id": "afafe1a3-df8e-4e73-a509-3ce3e3dd5e9c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044796,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "const any_method print=[](auto&&self, auto&&os){ os << self; };"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "c3f3297b-0d7c-4022-aad2-1c4c114806f6": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044794,
          "id": "c3f3297b-0d7c-4022-aad2-1c4c114806f6",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044794,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class any_method>\nusing any_sig_from_method = typename any_method::signature;\n\ntemplate<class any_method, class Sig=any_sig_from_method<any_method>>\nstruct any_method_function;\n\ntemplate<class any_method, class R, class...Args>\nstruct any_method_function<any_method, R(Args...)>\n{\n  template<class T>\n  using decorate = std::conditional_t< any_method::is_const, T const, T >;\n  \n  using any = decorate<boost::any>;\n  \n  using type = R(*)(any&, any_method const*, Args&&...);\n  template<class T>\n  type operator()( tag_t<T> )const{\n    return +[](any& self, any_method const* method, Args&&...args) {\n      return (*method)( boost::any_cast<decorate<T>&>(self), decltype(args)(args)... );\n    };\n  }\n};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "cb64a186-64b4-4648-a618-9af1ca38b31f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044795,
          "id": "cb64a186-64b4-4648-a618-9af1ca38b31f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044795,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "We could specialize this for a cases where the vtable is small (for example, 1 item), and use direct pointers stored in-class in those cases for efficiency."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "db33ac65-c73f-44b7-aac5-7fccf1a49c76": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "db33ac65-c73f-44b7-aac5-7fccf1a49c76",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "template<class T>struct tag_t{constexpr tag_t(){};};\ntemplate<class T>constexpr tag_t<T> tag{};"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "dc7cc21c-60d4-4537-b1da-52baec0a8c4e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "dc7cc21c-60d4-4537-b1da-52baec0a8c4e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [["which is almost optimal."]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "e2948f94-d6d1-44d6-a032-e25377542890": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044790,
          "id": "e2948f94-d6d1-44d6-a032-e25377542890",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044790,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["This example uses C++14 and "],
              ["boost::any", [["c"]]],
              [". In C++17 you can swap in "],
              ["std::any", [["c"]]],
              [" instead."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "f507e691-4d6c-4318-94e1-a4983ca2971f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044794,
          "id": "f507e691-4d6c-4318-94e1-a4983ca2971f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044794,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "properties": {
            "title": [
              ["any_method_function::type", [["c"]]],
              [
                " is the type of a function pointer we will store alongside the instance. "
              ],
              ["any_method_function::operator()", [["c"]]],
              [" takes a "],
              ["tag_t<T>", [["c"]]],
              [" and writes a custom instance of the "],
              ["any_method_function::type", [["c"]]],
              [" that assumes the "],
              ["any&", [["c"]]],
              [" is going to be a "],
              ["T", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "f87e7dcc-1b70-411b-8a71-d27798a10bcc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1550523044793,
          "id": "f87e7dcc-1b70-411b-8a71-d27798a10bcc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1550523044793,
          "parent_id": "252ece15-c398-409e-b9fc-941fe3f57da5",
          "parent_table": "block",
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "divider",
          "version": 5
        }
      }
    },
    "space": {}
  }
}
