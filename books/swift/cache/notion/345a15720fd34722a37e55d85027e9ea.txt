2324 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "345a1572-0fd3-4722-a37e-55d85027e9ea"
      },
      "version": -1
    }
  ]
}
Response:+2072
{
  "recordMap": {
    "block": {
      "345a1572-0fd3-4722-a37e-55d85027e9ea": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "8faf7cc1-5765-46a4-8617-57969c67a24b",
            "4c89aca2-394d-4e4b-a331-4376d7fa5f81",
            "5d2563c3-0932-4ab1-b9de-4370139aeb86",
            "e36baf0d-318c-4a33-8e87-b6a861f54a8f",
            "d0337f67-f010-4c78-bd21-058558dedf1f",
            "fceaee68-10f4-4896-af54-d3999cc8f026",
            "650d3670-18d0-4337-9e6d-244ec03c1414",
            "b477e5c7-1f99-4fc5-a970-f2e9feea8e2d",
            "5435e1ef-51c8-46d9-ad89-a3858f563105",
            "ad1076d4-0310-4cb6-878e-bd0b313f40eb",
            "4a530026-bf4f-4294-a2aa-f94918382dad",
            "f005f268-0e42-4552-9204-1510c0a674c1",
            "8e702ff6-4cea-4ef0-b329-2affb928ec84",
            "b854a66f-8a36-4d40-9735-b95a980591c9",
            "9c8d175f-61c4-4972-83da-81fd949de2d1"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532899,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532899,
          "parent_id": "b51b495d-f653-4e2b-b92d-5af0d351982e",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Getting type and names of properties for a class without having to instantiate it"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      }
    }
  }
}
31017 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "345a1572-0fd3-4722-a37e-55d85027e9ea"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+30757
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "345a1572-0fd3-4722-a37e-55d85027e9ea": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "8faf7cc1-5765-46a4-8617-57969c67a24b",
            "4c89aca2-394d-4e4b-a331-4376d7fa5f81",
            "5d2563c3-0932-4ab1-b9de-4370139aeb86",
            "e36baf0d-318c-4a33-8e87-b6a861f54a8f",
            "d0337f67-f010-4c78-bd21-058558dedf1f",
            "fceaee68-10f4-4896-af54-d3999cc8f026",
            "650d3670-18d0-4337-9e6d-244ec03c1414",
            "b477e5c7-1f99-4fc5-a970-f2e9feea8e2d",
            "5435e1ef-51c8-46d9-ad89-a3858f563105",
            "ad1076d4-0310-4cb6-878e-bd0b313f40eb",
            "4a530026-bf4f-4294-a2aa-f94918382dad",
            "f005f268-0e42-4552-9204-1510c0a674c1",
            "8e702ff6-4cea-4ef0-b329-2affb928ec84",
            "b854a66f-8a36-4d40-9735-b95a980591c9",
            "9c8d175f-61c4-4972-83da-81fd949de2d1"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532899,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532899,
          "parent_id": "b51b495d-f653-4e2b-b92d-5af0d351982e",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Getting type and names of properties for a class without having to instantiate it"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 3
        }
      },
      "4a530026-bf4f-4294-a2aa-f94918382dad": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532898,
          "id": "4a530026-bf4f-4294-a2aa-f94918382dad",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532898,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If you declare this custom "],
              ["==", [["c"]]],
              [" operator:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "4c89aca2-394d-4e4b-a331-4376d7fa5f81": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532887,
          "id": "4c89aca2-394d-4e4b-a331-4376d7fa5f81",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532887,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If you class inherits from "],
              ["NSObject", [["c"]]],
              [", you can use the method "],
              ["class_copyPropertyList", [["c"]]],
              [" together with "],
              ["property_getAttributes", [["c"]]],
              [" to find out the "],
              ["name", [["i"]]],
              [" and "],
              ["types", [["i"]]],
              [" of properties for a class - "],
              ["without having an instance of it", [["b"]]],
              [". I created a project on "],
              ["Github", [["a", "https://github.com/Sajjon/SwiftReflection"]]],
              [" for this, but here is the code:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5435e1ef-51c8-46d9-ad89-a3858f563105": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532889,
          "id": "5435e1ef-51c8-46d9-ad89-a3858f563105",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532889,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["You can also try to cast the "],
              ["Any", [["c"]]],
              [" to "],
              ["NSObject.Type", [["c"]]],
              [", which will succeed for all properties inheriting from "],
              ["NSObject", [["c"]]],
              [", then you can check the type using standard "],
              ["==", [["c"]]],
              [" operator:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5d2563c3-0932-4ab1-b9de-4370139aeb86": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532887,
          "id": "5d2563c3-0932-4ab1-b9de-4370139aeb86",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532887,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "func getTypesOfProperties(in clazz: NSObject.Type) -> Dictionary<String, Any>? {\n    var count = UInt32()\n    guard let properties = class_copyPropertyList(clazz, &count) else { return nil }\n    var types: Dictionary<String, Any> = [:]\n    for i in 0..<Int(count) {\n        guard let property: objc_property_t = properties[i], let name = getNameOf(property: property) else { continue }\n        let type = getTypeOf(property: property)\n        types[name] = type\n    }\n    free(properties)\n    return types\n}\n\nfunc getTypeOf(property: objc_property_t) -> Any {\n    guard let attributesAsNSString: NSString = NSString(utf8String: property_getAttributes(property)) else { return Any.self }\n    let attributes = attributesAsNSString as String\n    let slices = attributes.components(separatedBy: \"\\\"\")\n    guard slices.count > 1 else { return getPrimitiveDataType(withAttributes: attributes) }\n    let objectClassName = slices[1]\n    let objectClass = NSClassFromString(objectClassName) as! NSObject.Type\n    return objectClass\n}\n    \n   func getPrimitiveDataType(withAttributes attributes: String) -> Any {\n        guard let letter = attributes.substring(from: 1, to: 2), let type = primitiveDataTypes[letter] else { return Any.self }\n        return type\n    }"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "650d3670-18d0-4337-9e6d-244ec03c1414": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532888,
          "id": "650d3670-18d0-4337-9e6d-244ec03c1414",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532888,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [["You can use this method like this:"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "8e702ff6-4cea-4ef0-b329-2affb928ec84": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532898,
          "id": "8e702ff6-4cea-4ef0-b329-2affb928ec84",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532898,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["You can then even check the type of "],
              ["value types", [["c"]]],
              [" like this:"]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "8faf7cc1-5765-46a4-8617-57969c67a24b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532882,
          "id": "8faf7cc1-5765-46a4-8617-57969c67a24b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532882,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Using the Swift class "],
              ["Mirror", [["c"]]],
              [" works if you want to extract "],
              ["name", [["i"]]],
              [", "],
              ["value", [["i"]]],
              [" and "],
              ["type", [["i"]]],
              [" (Swift 3: "],
              ["type(of: value)", [["c"]]],
              [", Swift 2: "],
              ["value.dynamicType", [["c"]]],
              [") of properties for an "],
              ["instance", [["b"]]],
              [" of a certain class."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "9c8d175f-61c4-4972-83da-81fd949de2d1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532899,
          "id": "9c8d175f-61c4-4972-83da-81fd949de2d1",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532899,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["LIMITATIONS", [["b"]]],
              [" This solution does not work when "],
              ["value types", [["c"]]],
              [
                " are optionals. If you have declared a property in you NSObject subclass like this: "
              ],
              ["var myOptionalInt: Int?", [["c"]]],
              [
                ", the code above won’t find that property because the method "
              ],
              ["class_copyPropertyList", [["c"]]],
              [" does not contain optional value types."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ad1076d4-0310-4cb6-878e-bd0b313f40eb": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532889,
          "id": "ad1076d4-0310-4cb6-878e-bd0b313f40eb",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532889,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "func checkPropertiesOfBook() {\n    guard let types = getTypesOfProperties(in: Book.self) else { return }\n    for (name, type) in types {\n        if let objectType = type as? NSObject.Type {\n            if objectType == NSDate.self {\n                print(\"Property named '\\(name)' has type 'NSDate'\")\n            } else if objectType == NSString.self {\n                print(\"Property named '\\(name)' has type 'NSString'\")\n            }\n        }\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "b477e5c7-1f99-4fc5-a970-f2e9feea8e2d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532888,
          "id": "b477e5c7-1f99-4fc5-a970-f2e9feea8e2d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532888,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "class Book: NSObject {\n    let title: String\n    let author: String?\n    let numberOfPages: Int\n    let released: Date\n    let isPocket: Bool\n\n    init(title: String, author: String?, numberOfPages: Int, released: Date, isPocket: Bool) {\n        self.title = title\n        self.author = author\n        self.numberOfPages = numberOfPages\n        self.released = released\n        self.isPocket = isPocket\n    }\n}\n\nguard let types = getTypesOfProperties(in: Book.self) else { return }\nfor (name, type) in types {\n    print(\"'\\(name)' has type '\\(type)'\")\n}\n// Prints:\n// 'title' has type 'NSString'\n// 'numberOfPages' has type 'Int'\n// 'author' has type 'NSString'\n// 'released' has type 'NSDate'\n// 'isPocket' has type 'Bool'"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "b51b495d-f653-4e2b-b92d-5af0d351982e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "82ed2488-3848-492a-bdd0-fbc3a1894a93",
            "fb543d8e-f9f9-465c-a625-9d99eb491a81",
            "345a1572-0fd3-4722-a37e-55d85027e9ea"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105500000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "b51b495d-f653-4e2b-b92d-5af0d351982e",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105740000,
          "parent_id": "e76d4290-6b0e-4932-91a6-0bbd351f3b6b",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["Reflection"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 23
        }
      },
      "b854a66f-8a36-4d40-9735-b95a980591c9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532898,
          "id": "b854a66f-8a36-4d40-9735-b95a980591c9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532898,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "func checkPropertiesOfBook() {\n    guard let types = getTypesOfProperties(in: Book.self) else { return }\n    for (name, type) in types {\n        if type == Int.self {\n            print(\"Property named '\\(name)' has type 'Int'\")\n        } else if type == Bool.self {\n            print(\"Property named '\\(name)' has type 'Bool'\")\n        }\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "d0337f67-f010-4c78-bd21-058558dedf1f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532887,
          "id": "d0337f67-f010-4c78-bd21-058558dedf1f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532887,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "let primitiveDataTypes: Dictionary<String, Any> = [\n    \"c\" : Int8.self,\n    \"s\" : Int16.self,\n    \"i\" : Int32.self,\n    \"q\" : Int.self, //also: Int64, NSInteger, only true on 64 bit platforms\n    \"S\" : UInt16.self,\n    \"I\" : UInt32.self,\n    \"Q\" : UInt.self, //also UInt64, only true on 64 bit platforms\n    \"B\" : Bool.self,\n    \"d\" : Double.self,\n    \"f\" : Float.self,\n    \"{\" : Decimal.self\n]\n    \n   func getNameOf(property: objc_property_t) -> String? {\n        guard let name: NSString = NSString(utf8String: property_getName(property)) else { return nil }\n        return name as String\n    }"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "e36baf0d-318c-4a33-8e87-b6a861f54a8f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532887,
          "id": "e36baf0d-318c-4a33-8e87-b6a861f54a8f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532887,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Where "],
              ["primitiveDataTypes", [["c"]]],
              [
                " is a Dictionary mapping a letter in the attribute string to a value type:"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "e76d4290-6b0e-4932-91a6-0bbd351f3b6b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4743a9b3-3ba1-4406-8fd8-92f831177a73",
            "40e2faa7-5ff3-4654-a114-f19b837c574b",
            "743fc1c3-bc9c-4386-8bb8-37bb9430112f",
            "85fc985e-d4f6-470c-a50e-d230fb7f7029",
            "b3a03a81-83e5-4085-b462-4a9e0b487f4a",
            "5b89258e-bcc1-4c2b-b7ec-53d72cea9e9e",
            "752e5fcf-89e9-482f-8ab5-40b382d1513b",
            "0bbae402-0f8d-4c53-9284-2bfa4e450424",
            "9f9ac142-3746-4907-b806-661ae15321d3",
            "4007debc-6666-4d3f-8faa-5ba1ed7a30fb",
            "2ebad693-9dff-4aeb-bb97-2b78d049b25e",
            "08b06e18-c5f3-4e40-a0be-39eaaab9fdc5",
            "c7a9a16f-d660-4db7-8d5b-012a3f06c296",
            "aec11d9f-8e77-49ff-9784-b941666239e5",
            "8e0cbefa-bb13-46a7-ae47-5d4863fae390",
            "9926a540-7aa3-4e8b-a880-0d25223917b7",
            "cfa2de35-cd00-48e5-aa49-c7bc809cd199",
            "75f61437-dd57-4152-ba5d-e1d11169b6f5",
            "ab64a7f2-ccc3-4ffd-98ca-cb7cc7d65a64",
            "346889aa-bbe6-4248-9382-9d44810882db",
            "6eadf518-5b93-4d64-9bc2-0e88e97a1ad5",
            "45e8edb6-720b-4879-a3f9-bdeeebc97a9f",
            "5367e1b7-d8c9-42c1-a35c-1508743d5105",
            "ab0095d7-f330-4c2a-9564-40c927e04cdd",
            "995be302-8fbf-4acc-9c9b-db5cfdd0521f",
            "e9e7dd97-8907-4c61-94c8-873542c4221d",
            "9f971757-8f39-4d94-9d24-c0b8b7100e34",
            "b51b495d-f653-4e2b-b92d-5af0d351982e",
            "9da019f7-f538-42a4-bf9f-a95e812e2233",
            "b5d22e19-0056-4916-bf50-cc1dc2f38c0e",
            "f3aea850-966d-47e0-bbd2-8564c5d35715",
            "e80e058c-cecb-4b11-af4a-b91c85302b9d",
            "2f2b8c00-b4d8-4005-9764-71297a1f77f4",
            "a95c626d-6b55-449a-91a2-173c29e1c6a7",
            "41f7ad78-47df-4ba7-9750-0c3f2e60ce1b",
            "e1154a97-185d-4fcd-81a8-6d4e1e7d3a99",
            "9455a2c2-402a-4a70-8aeb-9762505167c3",
            "77ad070c-dd39-4425-a996-cc8967f74b4e",
            "9667daa4-8e9a-40c6-8498-5fd2b4e46a1e",
            "67e4333d-b244-489f-94a9-5033eda1d62f",
            "00935eb8-d316-43d4-9d14-f133a4cf1c91",
            "41bf5b92-7d0a-4e59-af5d-5b1468ffec68",
            "18f00844-2ce5-4c04-9bd7-9a256ae07a77",
            "2f6abffd-8151-4ec2-9a32-2f5da3b5a767",
            "35e9a1fb-1c65-4c4d-b44b-becc6cd9f6bd",
            "2e9691dd-0811-4161-964f-0af0c454280b",
            "cb46a744-6c26-43e6-ba4b-4058eb63b196",
            "1beb1f79-8f57-4bf1-8bcb-e6737d583cda",
            "9ae8b978-28e6-44f1-af9c-629e5306665c",
            "10e2f070-4018-4205-8a93-00bc8fa64375",
            "bec5b2af-554c-4a6c-87b2-a65a4523f654",
            "41dd6dc2-8607-4978-9306-8747c2240710",
            "36fdcbe2-b28e-4eae-96d0-f3255977fddc",
            "1a7a68fa-5ed7-4026-bd09-6c438ee3c996",
            "298a6998-40b4-4079-ae0e-f0fc31d96e18",
            "d04ea4c2-1d96-49c5-b911-1de41c18c770",
            "d9d0d23b-6862-4787-ba04-328a8305821b",
            "2a406142-9c5f-402d-939e-888df54da249",
            "3b5feb34-031d-402a-804d-16d2d230a001",
            "66275fb3-9144-4a6b-a878-f81e4a354aa6"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104898140,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "e76d4290-6b0e-4932-91a6-0bbd351f3b6b",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1570605960000,
          "parent_id": "4a02310c-f1a7-4b8f-8aff-7088c1decd8b",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Swift"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 148
        }
      },
      "f005f268-0e42-4552-9204-1510c0a674c1": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532898,
          "id": "f005f268-0e42-4552-9204-1510c0a674c1",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532898,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "func ==(rhs: Any, lhs: Any) -> Bool {\n    let rhsType: String = \"\\(rhs)\"\n    let lhsType: String = \"\\(lhs)\"\n    let same = rhsType == lhsType\n    return same\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "fceaee68-10f4-4896-af54-d3999cc8f026": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552105532888,
          "id": "fceaee68-10f4-4896-af54-d3999cc8f026",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105532888,
          "parent_id": "345a1572-0fd3-4722-a37e-55d85027e9ea",
          "parent_table": "block",
          "properties": {
            "title": [
              ["It can extract the "],
              ["NSObject.Type", [["c"]]],
              [" of all properties which class type inherits from "],
              ["NSObject", [["c"]]],
              [" such as "],
              ["NSDate", [["c"]]],
              [" (Swift3: "],
              ["Date", [["c"]]],
              ["), "],
              ["NSString", [["c"]]],
              ["(Swift3: "],
              ["String", [["c"]]],
              ["?) and "],
              ["NSNumber", [["c"]]],
              [", however it is store in the type "],
              ["Any", [["c"]]],
              [
                " (as you can see as the type of the value of the Dictionary returned by the method). This is due to the limitations of "
              ],
              ["value types", [["c"]]],
              [
                " such as Int, Int32, Bool. Since those types do not inherit from NSObject, calling "
              ],
              [".self", [["c"]]],
              [" on e.g. an Int - "],
              ["Int.self", [["c"]]],
              [" does not return NSObject.Type, but rather the type "],
              ["Any", [["c"]]],
              [". Thus the method returns "],
              ["Dictionary<String, Any>?", [["c"]]],
              [" and not "],
              ["Dictionary<String, NSObject.Type>?", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
