3376 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/syncRecordValues
Body:+162
{
  "requests": [
    {
      "pointer": {
        "table": "block",
        "id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86"
      },
      "version": -1
    }
  ]
}
Response:+3124
{
  "recordMap": {
    "block": {
      "4102f592-b568-46c9-ab0b-b6ff2ce75b86": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "da62842b-47de-49ba-a6c2-6ad62bda3afc",
            "52f3a4ce-7cfa-43ab-9d58-e4aec2513b65",
            "5ebe1e08-ca47-4a6a-857d-264107f023c0",
            "65d9f862-0de8-4664-bfe9-974026533451",
            "aeb500b2-820e-4bd6-a585-f53656b98bd4",
            "bff77818-8155-42c3-936a-793a991cc06d",
            "2e4aa2cb-a5c4-490b-90a9-238bf1649de5",
            "bd6fe1ff-93e7-416b-8cc8-2b923e0db7a2",
            "5164aaea-ccef-407e-9ff9-923a5f21020c",
            "e6459281-76b8-420d-8717-6128ae892719",
            "e999ab72-db38-4b8d-bd6f-e6d60f8beac2",
            "5d338b80-8611-461a-b139-f224404e92b4",
            "556314f2-e332-4577-ab07-a7980abd7661",
            "c7b65687-1ea6-489a-8279-576053b2a752",
            "a8c98695-fa70-43e2-a4e9-bffe0c0ceb27",
            "9d69860d-9525-4362-bb30-54744c6927dc",
            "3e21b92b-d936-4255-9a03-c9298a4e8f9e",
            "235a83cc-ed03-4024-b773-8b7c02df958f",
            "ea69c9cc-7337-45a0-b6b7-99d61a48ca91",
            "4966cbb8-0a16-4a4c-98bf-80c12b1c7805",
            "95ba9a1e-83c9-457f-8a9c-f1b7b35dc26c",
            "685061e7-c608-4644-9e52-d75d38e42a25",
            "aaef0689-eebf-4e64-b842-eacb818bbe88",
            "af9c04a2-657c-44d4-a957-a52587704bb9",
            "45617312-0b24-437a-a8a9-44699872f610",
            "6203dd1d-0473-4ef7-a9df-e4dfebdb8ada",
            "671f005b-f2b4-4bb0-ae85-eb22b6b794d3",
            "41b7ad58-1eeb-40fc-84a2-a533eb70aa7d",
            "84e6c830-8e9a-4187-a7b0-f7f20d38bfe0",
            "f5528147-7485-4ded-85bc-6d6e7cc4b49a",
            "ef84eac5-0c6c-426f-bb8a-6b08bafac9ff",
            "105fce5c-9f55-461a-9be7-87d474f2256b",
            "63e25df9-979f-40c4-843e-e4c7369ab27e",
            "df6c4819-1137-454a-a89f-4f9d71b40920",
            "86c1fb6a-0892-4f51-ad86-5b6cb329d97c"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960627,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960627,
          "parent_id": "743fc1c3-bc9c-4386-8bb8-37bb9430112f",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "JSON Serialization Encoding and Decoding with Apple Foundation and the Swift Standard Library"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 7
        }
      }
    }
  }
}
54869 noahttpcache
Method: POST
URL: https://www.notion.so/api/v3/loadCachedPageChunk
Body:+166
{
  "page": {
    "id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86"
  },
  "chunkNumber": 0,
  "limit": 50,
  "cursor": {
    "stack": []
  },
  "verticalColumns": false
}
Response:+54609
{
  "cursor": {
    "stack": []
  },
  "recordMap": {
    "block": {
      "105fce5c-9f55-461a-9be7-87d474f2256b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960626,
          "id": "105fce5c-9f55-461a-9be7-87d474f2256b",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960626,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [["Using Custom Key Names"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 5
        }
      },
      "235a83cc-ed03-4024-b773-8b7c02df958f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960624,
          "id": "235a83cc-ed03-4024-b773-8b7c02df958f",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960624,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Note that standard collections such as Array and Dictionary conform to Codable if they contain codable types."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "2e4aa2cb-a5c4-490b-90a9-238bf1649de5": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960621,
          "id": "2e4aa2cb-a5c4-490b-90a9-238bf1649de5",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960621,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Calling "],
              ["dataWithJSONObject", [["c"]]],
              [
                " converts a JSON-compatible object (nested arrays or dictionaries with strings, numbers, and "
              ],
              ["NSNull", [["c"]]],
              [") to raw "],
              ["NSData", [["c"]]],
              [" encoded as UTF-8."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "3e21b92b-d936-4255-9a03-c9298a4e8f9e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960624,
          "id": "3e21b92b-d936-4255-9a03-c9298a4e8f9e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960624,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "struct Book: Codable {\n    let title: String\n    let authors: [String]\n    let publicationDate: Date\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "4102f592-b568-46c9-ab0b-b6ff2ce75b86": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "da62842b-47de-49ba-a6c2-6ad62bda3afc",
            "52f3a4ce-7cfa-43ab-9d58-e4aec2513b65",
            "5ebe1e08-ca47-4a6a-857d-264107f023c0",
            "65d9f862-0de8-4664-bfe9-974026533451",
            "aeb500b2-820e-4bd6-a585-f53656b98bd4",
            "bff77818-8155-42c3-936a-793a991cc06d",
            "2e4aa2cb-a5c4-490b-90a9-238bf1649de5",
            "bd6fe1ff-93e7-416b-8cc8-2b923e0db7a2",
            "5164aaea-ccef-407e-9ff9-923a5f21020c",
            "e6459281-76b8-420d-8717-6128ae892719",
            "e999ab72-db38-4b8d-bd6f-e6d60f8beac2",
            "5d338b80-8611-461a-b139-f224404e92b4",
            "556314f2-e332-4577-ab07-a7980abd7661",
            "c7b65687-1ea6-489a-8279-576053b2a752",
            "a8c98695-fa70-43e2-a4e9-bffe0c0ceb27",
            "9d69860d-9525-4362-bb30-54744c6927dc",
            "3e21b92b-d936-4255-9a03-c9298a4e8f9e",
            "235a83cc-ed03-4024-b773-8b7c02df958f",
            "ea69c9cc-7337-45a0-b6b7-99d61a48ca91",
            "4966cbb8-0a16-4a4c-98bf-80c12b1c7805",
            "95ba9a1e-83c9-457f-8a9c-f1b7b35dc26c",
            "685061e7-c608-4644-9e52-d75d38e42a25",
            "aaef0689-eebf-4e64-b842-eacb818bbe88",
            "af9c04a2-657c-44d4-a957-a52587704bb9",
            "45617312-0b24-437a-a8a9-44699872f610",
            "6203dd1d-0473-4ef7-a9df-e4dfebdb8ada",
            "671f005b-f2b4-4bb0-ae85-eb22b6b794d3",
            "41b7ad58-1eeb-40fc-84a2-a533eb70aa7d",
            "84e6c830-8e9a-4187-a7b0-f7f20d38bfe0",
            "f5528147-7485-4ded-85bc-6d6e7cc4b49a",
            "ef84eac5-0c6c-426f-bb8a-6b08bafac9ff",
            "105fce5c-9f55-461a-9be7-87d474f2256b",
            "63e25df9-979f-40c4-843e-e4c7369ab27e",
            "df6c4819-1137-454a-a89f-4f9d71b40920",
            "86c1fb6a-0892-4f51-ad86-5b6cb329d97c"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960627,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960627,
          "parent_id": "743fc1c3-bc9c-4386-8bb8-37bb9430112f",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "JSON Serialization Encoding and Decoding with Apple Foundation and the Swift Standard Library"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 7
        }
      },
      "41b7ad58-1eeb-40fc-84a2-a533eb70aa7d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960626,
          "id": "41b7ad58-1eeb-40fc-84a2-a533eb70aa7d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960626,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If you intend only to write JSON data, conform your type to "],
              ["Encodable", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "45617312-0b24-437a-a8a9-44699872f610": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "45617312-0b24-437a-a8a9-44699872f610",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "In the above example, Book.self informs the decoder of the type to which the JSON should be decoded."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "4966cbb8-0a16-4a4c-98bf-80c12b1c7805": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "4966cbb8-0a16-4a4c-98bf-80c12b1c7805",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [["Encode to JSON data"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 5
        }
      },
      "5164aaea-ccef-407e-9ff9-923a5f21020c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960621,
          "id": "5164aaea-ccef-407e-9ff9-923a5f21020c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960621,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["You can pass "],
              ["options: .PrettyPrinted", [["c"]]],
              [" instead of "],
              ["options: []", [["c"]]],
              [" for pretty-printing."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "52f3a4ce-7cfa-43ab-9d58-e4aec2513b65": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960620,
          "id": "52f3a4ce-7cfa-43ab-9d58-e4aec2513b65",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960620,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [["Read JSON"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_sub_header",
          "version": 1
        }
      },
      "556314f2-e332-4577-ab07-a7980abd7661": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960623,
          "id": "556314f2-e332-4577-ab07-a7980abd7661",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960623,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "As of Swift 4.0, the Swift standard library includes the protocols "
              ],
              [
                "Encodable",
                [
                  ["c"],
                  [
                    "a",
                    "https://developer.apple.com/documentation/swift/encodable"
                  ]
                ]
              ],
              [" and "],
              [
                "Decodable",
                [
                  ["c"],
                  [
                    "a",
                    "https://developer.apple.com/documentation/swift/decodable"
                  ]
                ]
              ],
              [
                " to define a standardized approach to data encoding and decoding. Adopting these protocols will allow implementations of the "
              ],
              [
                "Encoder",
                [
                  ["c"],
                  [
                    "a",
                    "https://developer.apple.com/documentation/swift/encoder"
                  ]
                ]
              ],
              [" and "],
              [
                "Decoder",
                [
                  ["c"],
                  [
                    "a",
                    "https://developer.apple.com/documentation/swift/decoder"
                  ]
                ]
              ],
              [
                " protocols take your data and encode or decode it to and from an external representation such as JSON. Conformance to the "
              ],
              [
                "Codable",
                [
                  ["c"],
                  [
                    "a",
                    "https://developer.apple.com/documentation/swift/codable"
                  ]
                ]
              ],
              [" protocol combines both the "],
              ["Encodable", [["c"]]],
              [" and "],
              ["Decodable", [["c"]]],
              [
                " protocols. This is now the recommended means to handle JSON in your program."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "5d338b80-8611-461a-b139-f224404e92b4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960621,
          "id": "5d338b80-8611-461a-b139-f224404e92b4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960621,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Note: The Following is currently available only in Swift 4.0 and later."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 1
        }
      },
      "5ebe1e08-ca47-4a6a-857d-264107f023c0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960620,
          "id": "5ebe1e08-ca47-4a6a-857d-264107f023c0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960620,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["The "],
              ["JSONObjectWithData", [["c"]]],
              [" function takes "],
              ["NSData", [["c"]]],
              [", and returns "],
              ["AnyObject", [["c"]]],
              [". You can use "],
              ["as?", [["c"]]],
              [" to convert the result to your expected type."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "6203dd1d-0473-4ef7-a9df-e4dfebdb8ada": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "6203dd1d-0473-4ef7-a9df-e4dfebdb8ada",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [["Encoding or Decoding Exclusively"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 5
        }
      },
      "63e25df9-979f-40c4-843e-e4c7369ab27e": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960626,
          "id": "63e25df9-979f-40c4-843e-e4c7369ab27e",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960626,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "APIs frequently use naming conventions other than the Swift-standard camel case, such as snake case. This can become an issue when it comes to decoding JSON, since by default the JSON keys must align exactly with your type’s property names. To handle these scenarios you can create custom keys for your type using the "
              ],
              ["CodingKey", [["c"]]],
              [" protocol."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "65d9f862-0de8-4664-bfe9-974026533451": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960620,
          "id": "65d9f862-0de8-4664-bfe9-974026533451",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960620,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "do {\n    guard let jsonData = \"[\\\"Hello\\\", \\\"JSON\\\"]\".dataUsingEncoding(NSUTF8StringEncoding) else {\n        fatalError(\"couldn't encode string as UTF-8\")\n    }\n\n    // Convert JSON from NSData to AnyObject\n    let jsonObject = try NSJSONSerialization.JSONObjectWithData(jsonData, options: [])\n    \n    // Try to convert AnyObject to array of strings\n    if let stringArray = jsonObject as? [String] {\n        print(\"Got array of strings: \\(stringArray.joinWithSeparator(\", \"))\")\n    }\n} catch {\n    print(\"error reading JSON: \\(error)\")\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "671f005b-f2b4-4bb0-ae85-eb22b6b794d3": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "671f005b-f2b4-4bb0-ae85-eb22b6b794d3",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Sometimes you may not need data to be both encodable and decodable, such as when you need only read JSON data from an API, or if your program only submits JSON data to an API."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "685061e7-c608-4644-9e52-d75d38e42a25": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "685061e7-c608-4644-9e52-d75d38e42a25",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "Set encoder.outputFormatting = .prettyPrinted for easier reading. ## Decode from JSON data"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "quote",
          "version": 5
        }
      },
      "743fc1c3-bc9c-4386-8bb8-37bb9430112f": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "bc65dc15-34ba-4c4d-8662-5ec18ec68640",
            "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
            "24de6cef-3615-4f09-86e6-0b29fc0ff8e8",
            "466af2a8-cd08-4573-a164-486e521245fe",
            "568f45c1-05a1-4e2d-9c52-ac868319cc44",
            "b90efa48-cb6a-46c2-a2d7-9a7f6dc55b56",
            "8b01bfb6-00f8-4b2a-bc05-fff10dec43bf"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960000,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "743fc1c3-bc9c-4386-8bb8-37bb9430112f",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552105320000,
          "parent_id": "e76d4290-6b0e-4932-91a6-0bbd351f3b6b",
          "parent_table": "block",
          "permissions": [
            {
              "role": "editor",
              "type": "user_permission",
              "user_id": "bb760e2d-d679-4b64-b2a9-03005b21870a"
            }
          ],
          "properties": {
            "title": [["JSON"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 20
        }
      },
      "84e6c830-8e9a-4187-a7b0-f7f20d38bfe0": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960626,
          "id": "84e6c830-8e9a-4187-a7b0-f7f20d38bfe0",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960626,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "struct Book: Encodable {\n    let title: String\n    let authors: [String]\n    let publicationDate: Date\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "86c1fb6a-0892-4f51-ad86-5b6cb329d97c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960627,
          "id": "86c1fb6a-0892-4f51-ad86-5b6cb329d97c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960627,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["CodingKeys", [["c"]]],
              [" are generated automatically for types which adopt the "],
              ["Codable", [["c"]]],
              [
                " protocol, but by creating our own implementation in the example above we’re allow our decoder to match the local camel case "
              ],
              ["publicationDate", [["c"]]],
              [" with the snake case "],
              ["publication_date", [["c"]]],
              [" as it’s delivered by the API."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "95ba9a1e-83c9-457f-8a9c-f1b7b35dc26c": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "95ba9a1e-83c9-457f-8a9c-f1b7b35dc26c",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "// Create an instance of Book called book\nlet encoder = JSONEncoder()\nlet data = try! encoder.encode(book) // Do not use try! in production code\nprint(data)"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "9d69860d-9525-4362-bb30-54744c6927dc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960624,
          "id": "9d69860d-9525-4362-bb30-54744c6927dc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960624,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Consider the following example, in which the "],
              ["Book", [["c"]]],
              [" structure conforms to "],
              ["Codable", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "a8c98695-fa70-43e2-a4e9-bffe0c0ceb27": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960624,
          "id": "a8c98695-fa70-43e2-a4e9-bffe0c0ceb27",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960624,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              [
                "The easiest way to make a type codable is to declare its properties as types that are already "
              ],
              ["Codable", [["c"]]],
              [". These types include standard library types such as "],
              ["String", [["c"]]],
              [", "],
              ["Int", [["c"]]],
              [", and "],
              ["Double", [["c"]]],
              ["; and Foundation types such as "],
              ["Date", [["c"]]],
              [", "],
              ["Data", [["c"]]],
              [", and "],
              ["URL", [["c"]]],
              [
                ". If a type’s properties are codable, the type itself will automatically conform to "
              ],
              ["Codable", [["c"]]],
              [" by simply declaring the conformance."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "aaef0689-eebf-4e64-b842-eacb818bbe88": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "aaef0689-eebf-4e64-b842-eacb818bbe88",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [["Decode from JSON data"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 1
        }
      },
      "aeb500b2-820e-4bd6-a585-f53656b98bd4": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960620,
          "id": "aeb500b2-820e-4bd6-a585-f53656b98bd4",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960620,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["You can pass "],
              ["options: .AllowFragments", [["c"]]],
              [" instead of "],
              ["options: []", [["c"]]],
              [
                " to allow reading JSON when the top-level object isn’t an array or dictionary."
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "af9c04a2-657c-44d4-a957-a52587704bb9": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "af9c04a2-657c-44d4-a957-a52587704bb9",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "// Retrieve JSON string from some source\nlet jsonData = jsonString.data(encoding: .utf8)!\nlet decoder = JSONDecoder()\nlet book = try! decoder.decode(Book.self, for: jsonData) // Do not use try! in production code\nprint(book)"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "bd6fe1ff-93e7-416b-8cc8-2b923e0db7a2": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960621,
          "id": "bd6fe1ff-93e7-416b-8cc8-2b923e0db7a2",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960621,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "do {\n    // Convert object to JSON as NSData\n    let jsonData = try NSJSONSerialization.dataWithJSONObject(jsonObject, options: [])\n    print(\"JSON data: \\(jsonData)\")\n    \n    // Convert NSData to String\n    let jsonString = String(data: jsonData, encoding: NSUTF8StringEncoding)!\n    print(\"JSON string: \\(jsonString)\")\n} catch {\n    print(\"error writing JSON: \\(error)\")\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "bff77818-8155-42c3-936a-793a991cc06d": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960620,
          "id": "bff77818-8155-42c3-936a-793a991cc06d",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960620,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [["Write JSON"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_sub_header",
          "version": 1
        }
      },
      "c7b65687-1ea6-489a-8279-576053b2a752": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960623,
          "id": "c7b65687-1ea6-489a-8279-576053b2a752",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960623,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [["Encode and Decode Automatically"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "sub_header",
          "version": 1
        }
      },
      "da62842b-47de-49ba-a6c2-6ad62bda3afc": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960619,
          "id": "da62842b-47de-49ba-a6c2-6ad62bda3afc",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960619,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["The "],
              [
                "JSONSerialization",
                [
                  [
                    "a",
                    "https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSJSONSerialization_Class/"
                  ]
                ]
              ],
              [" class is built into Apple’s Foundation framework."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 5
        }
      },
      "df6c4819-1137-454a-a89f-4f9d71b40920": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960626,
          "id": "df6c4819-1137-454a-a89f-4f9d71b40920",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960626,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "struct Book: Codable {\n    // ...\n    enum CodingKeys: String, CodingKey { \n        case title\n        case authors\n        case publicationDate = \"publication_date\"\n    }\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "e6459281-76b8-420d-8717-6128ae892719": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960621,
          "id": "e6459281-76b8-420d-8717-6128ae892719",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960621,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["Same behavior in Swift 3 but with a different syntax."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "e76d4290-6b0e-4932-91a6-0bbd351f3b6b": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "content": [
            "4743a9b3-3ba1-4406-8fd8-92f831177a73",
            "40e2faa7-5ff3-4654-a114-f19b837c574b",
            "743fc1c3-bc9c-4386-8bb8-37bb9430112f",
            "85fc985e-d4f6-470c-a50e-d230fb7f7029",
            "b3a03a81-83e5-4085-b462-4a9e0b487f4a",
            "5b89258e-bcc1-4c2b-b7ec-53d72cea9e9e",
            "752e5fcf-89e9-482f-8ab5-40b382d1513b",
            "0bbae402-0f8d-4c53-9284-2bfa4e450424",
            "9f9ac142-3746-4907-b806-661ae15321d3",
            "4007debc-6666-4d3f-8faa-5ba1ed7a30fb",
            "2ebad693-9dff-4aeb-bb97-2b78d049b25e",
            "08b06e18-c5f3-4e40-a0be-39eaaab9fdc5",
            "c7a9a16f-d660-4db7-8d5b-012a3f06c296",
            "aec11d9f-8e77-49ff-9784-b941666239e5",
            "8e0cbefa-bb13-46a7-ae47-5d4863fae390",
            "9926a540-7aa3-4e8b-a880-0d25223917b7",
            "cfa2de35-cd00-48e5-aa49-c7bc809cd199",
            "75f61437-dd57-4152-ba5d-e1d11169b6f5",
            "ab64a7f2-ccc3-4ffd-98ca-cb7cc7d65a64",
            "346889aa-bbe6-4248-9382-9d44810882db",
            "6eadf518-5b93-4d64-9bc2-0e88e97a1ad5",
            "45e8edb6-720b-4879-a3f9-bdeeebc97a9f",
            "5367e1b7-d8c9-42c1-a35c-1508743d5105",
            "ab0095d7-f330-4c2a-9564-40c927e04cdd",
            "995be302-8fbf-4acc-9c9b-db5cfdd0521f",
            "e9e7dd97-8907-4c61-94c8-873542c4221d",
            "9f971757-8f39-4d94-9d24-c0b8b7100e34",
            "b51b495d-f653-4e2b-b92d-5af0d351982e",
            "9da019f7-f538-42a4-bf9f-a95e812e2233",
            "b5d22e19-0056-4916-bf50-cc1dc2f38c0e",
            "f3aea850-966d-47e0-bbd2-8564c5d35715",
            "e80e058c-cecb-4b11-af4a-b91c85302b9d",
            "2f2b8c00-b4d8-4005-9764-71297a1f77f4",
            "a95c626d-6b55-449a-91a2-173c29e1c6a7",
            "41f7ad78-47df-4ba7-9750-0c3f2e60ce1b",
            "e1154a97-185d-4fcd-81a8-6d4e1e7d3a99",
            "9455a2c2-402a-4a70-8aeb-9762505167c3",
            "77ad070c-dd39-4425-a996-cc8967f74b4e",
            "9667daa4-8e9a-40c6-8498-5fd2b4e46a1e",
            "67e4333d-b244-489f-94a9-5033eda1d62f",
            "00935eb8-d316-43d4-9d14-f133a4cf1c91",
            "41bf5b92-7d0a-4e59-af5d-5b1468ffec68",
            "18f00844-2ce5-4c04-9bd7-9a256ae07a77",
            "2f6abffd-8151-4ec2-9a32-2f5da3b5a767",
            "35e9a1fb-1c65-4c4d-b44b-becc6cd9f6bd",
            "2e9691dd-0811-4161-964f-0af0c454280b",
            "cb46a744-6c26-43e6-ba4b-4058eb63b196",
            "1beb1f79-8f57-4bf1-8bcb-e6737d583cda",
            "9ae8b978-28e6-44f1-af9c-629e5306665c",
            "10e2f070-4018-4205-8a93-00bc8fa64375",
            "bec5b2af-554c-4a6c-87b2-a65a4523f654",
            "41dd6dc2-8607-4978-9306-8747c2240710",
            "36fdcbe2-b28e-4eae-96d0-f3255977fddc",
            "1a7a68fa-5ed7-4026-bd09-6c438ee3c996",
            "298a6998-40b4-4079-ae0e-f0fc31d96e18",
            "d04ea4c2-1d96-49c5-b911-1de41c18c770",
            "d9d0d23b-6862-4787-ba04-328a8305821b",
            "2a406142-9c5f-402d-939e-888df54da249",
            "3b5feb34-031d-402a-804d-16d2d230a001",
            "66275fb3-9144-4a6b-a878-f81e4a354aa6"
          ],
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104898140,
          "format": {
            "page_full_width": true,
            "page_small_text": true
          },
          "id": "e76d4290-6b0e-4932-91a6-0bbd351f3b6b",
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1570605960000,
          "parent_id": "4a02310c-f1a7-4b8f-8aff-7088c1decd8b",
          "parent_table": "block",
          "permissions": [
            {
              "allow_search_engine_indexing": false,
              "role": "comment_only",
              "type": "public_permission"
            }
          ],
          "properties": {
            "title": [["Essential Swift"]]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "page",
          "version": 148
        }
      },
      "e999ab72-db38-4b8d-bd6f-e6d60f8beac2": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960621,
          "id": "e999ab72-db38-4b8d-bd6f-e6d60f8beac2",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960621,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "do {\n    guard let jsonData = \"[\\\"Hello\\\", \\\"JSON\\\"]\".data(using: String.Encoding.utf8) else {\n        fatalError(\"couldn't encode string as UTF-8\")\n    }\n    \n    // Convert JSON from NSData to AnyObject\n    let jsonObject = try JSONSerialization.jsonObject(with: jsonData, options: [])\n    \n    // Try to convert AnyObject to array of strings\n    if let stringArray = jsonObject as? [String] {\n        print(\"Got array of strings: \\(stringArray.joined(separator: \", \"))\")\n    }\n} catch {\n    print(\"error reading JSON: \\(error)\")\n}\n\ndo {\n    // Convert object to JSON as NSData\n    let jsonData = try JSONSerialization.data(withJSONObject: jsonObject, options: [])\n    print(\"JSON data: \\(jsonData)\")\n\n    // Convert NSData to String\n    let jsonString = String(data: jsonData, encoding: .utf8)!\n    print(\"JSON string: \\(jsonString)\")\n} catch {\n    print(\"error writing JSON: \\(error)\")\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 5
        }
      },
      "ea69c9cc-7337-45a0-b6b7-99d61a48ca91": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960625,
          "id": "ea69c9cc-7337-45a0-b6b7-99d61a48ca91",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960625,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["By adopting "],
              ["Codable", [["c"]]],
              [", the "],
              ["Book", [["c"]]],
              [
                " structure can now be encoded to and decoded from JSON using the Apple Foundation classes "
              ],
              ["JSONEncoder", [["c"]]],
              [" and "],
              ["JSONDecoder", [["c"]]],
              [", even though "],
              ["Book", [["c"]]],
              [
                " itself contains no code to specifically handle JSON. Custom encoders and decoders can be written, as well, by conforming to the "
              ],
              ["Encoder", [["c"]]],
              [" and "],
              ["Decoder", [["c"]]],
              [" protocols, respectively."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      },
      "ef84eac5-0c6c-426f-bb8a-6b08bafac9ff": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960626,
          "id": "ef84eac5-0c6c-426f-bb8a-6b08bafac9ff",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960626,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "language": [["Plain Text"]],
            "title": [
              [
                "struct Book: Decodable {\n    let title: String\n    let authors: [String]\n    let publicationDate: Date\n}"
              ]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "code",
          "version": 1
        }
      },
      "f5528147-7485-4ded-85bc-6d6e7cc4b49a": {
        "role": "comment_only",
        "value": {
          "alive": true,
          "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "created_by_table": "notion_user",
          "created_time": 1552104960626,
          "id": "f5528147-7485-4ded-85bc-6d6e7cc4b49a",
          "ignore_block_count": true,
          "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
          "last_edited_by_table": "notion_user",
          "last_edited_time": 1552104960626,
          "parent_id": "4102f592-b568-46c9-ab0b-b6ff2ce75b86",
          "parent_table": "block",
          "properties": {
            "title": [
              ["If you intend only to read JSON data, conform your type to "],
              ["Decodable", [["c"]]],
              ["."]
            ]
          },
          "space_id": "cf9fa7dd-b245-42a0-b929-d5a276b3afe0",
          "type": "text",
          "version": 1
        }
      }
    },
    "space": {}
  }
}
